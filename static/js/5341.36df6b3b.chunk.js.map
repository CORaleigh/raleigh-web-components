{"version":3,"file":"static/js/5341.36df6b3b.chunk.js","mappings":"8OAIA,IAAgBA,EAAE,IAAVC,KAAKC,GAAqBC,EAAE,EAAEF,KAAKG,IAAI,SAASC,EAAEC,EAAEC,GAAG,OAAQD,GAAGC,IAAI,EAAED,EAAEA,EAAEC,CAAE,UAASC,EAAEF,GAAG,OAAOD,EAAEC,EAAEN,EAAE,IAAK,UAASS,EAAEH,GAAG,OAAOD,EAAjH,kBAAmHC,EAAI,IAAK,UAASI,EAAEJ,GAAG,OAAOL,KAAKU,IAAIL,GAAGH,CAAE,UAASS,EAAEN,EAAEC,EAAEM,GAAG,OAAOP,GAAGC,GAAGD,GAAGO,GAAGP,GAAGO,GAAGP,GAAGC,CAAE,C,oHCEnOO,EAAAA,WAAI,WAAYC,IAAE,eAACC,KAAKC,SAASF,CAAG,C,8CAAA,SAAgBA,GAAG,OAAOC,KAAKE,SAASH,EAAG,G,sBAAA,SAASA,GAAY,WAAVR,EAAU,uDAAR,IAAIY,IAAK,GAAGZ,EAAEa,IAAIL,GAAG,OAAOR,EAAEc,IAAIN,GAAG,IAAMF,EAAEG,KAAKM,MAAMP,GAAG,IAAIF,EAAE,MAAM,IAAIU,MAAJ,kCAAqCR,IAAgF,IAA3E,IAAMS,EAAE,wCAA4ClB,EAAEkB,EAAEC,KAAKZ,GAASa,EAAE,GAAQ,MAAMpB,GAAGoB,EAAEC,KAAK,CAACC,KAAKtB,EAAE,GAAGuB,MAAMvB,EAAEwB,MAAMC,OAAOzB,EAAE,GAAGyB,SAASzB,EAAEkB,EAAEC,KAAKZ,GAAG,IAAIR,EAAE,EAAEG,EAAE,GAAG,OAAOkB,EAAEM,SAAS,SAAAjB,GAAIP,GAAGK,EAAEoB,MAAM5B,EAAEU,EAAEc,OAAOrB,GAAGD,EAAEa,IAAIL,EAAEa,MAAM,GAAG,EAAKV,SAASH,EAAEa,KAAKrB,GAAGF,EAAEU,EAAEc,MAAMd,EAAEgB,MAAQ,IAAGvB,GAAGK,EAAEoB,MAAM5B,GAAGE,EAAE2B,IAAInB,EAAEP,GAAGA,CAAE,G,mBAAA,SAAMO,GAAG,OAAOC,KAAKC,SAASF,EAAG,K,EAA/hBD,GAMN,SAASC,EAAEA,EAAER,GAAO,IAALF,EAAK,uDAAH,GAAI,OAAO,IAAIG,EAAAA,EAAEO,EAAEV,EAAEE,EAAE4B,QAAQC,aAAa/B,EAAEE,EAAE4B,QAAQE,eAAe9B,EAAE+B,WAAY,C,2QCNlGjC,EAAEkC,EAAEjC,EAAEoB,EAAEc,EAAEC,EAAEzC,EAAEa,EAAE6B,EAAY3B,E,kCAAAA,EAAwHV,IAAIA,EAAE,CAAC,IAA1HU,EAAE4B,WAAW,GAAG,aAAa5B,EAAEA,EAAE6B,KAAK,GAAG,OAAO7B,EAAEA,EAAE8B,KAAK,GAAG,OAAO9B,EAAEA,EAAE+B,OAAO,GAAG,SAAS/B,EAAEA,EAAEgC,OAAO,GAAG,SAAsB,SAAShC,GAAGA,EAAEA,EAAEiC,QAAQ,GAAG,UAAUjC,EAAEA,EAAEkC,KAAK,GAAG,MAAQ,CAAzD,CAA0DV,IAAIA,EAAE,CAAC,IAAI,SAASxB,GAAGA,EAAEA,EAAEmC,MAAM,GAAG,QAAQnC,EAAEA,EAAE8B,KAAK,GAAG,OAAO9B,EAAEA,EAAEoC,YAAY,GAAG,aAAe,CAAtF,CAAuF7C,IAAIA,EAAE,CAAC,IAAI,SAASS,GAAGA,EAAEA,EAAEqC,IAAI,GAAG,MAAMrC,EAAEA,EAAEsC,SAAS,GAAG,WAAWtC,EAAEA,EAAEuC,KAAK,GAAG,MAAQ,CAA5E,CAA6E5B,IAAIA,EAAE,CAAC,IAAI,SAASX,GAAGA,EAAEA,EAAEuC,KAAK,GAAG,OAAOvC,EAAEA,EAAEwC,KAAK,GAAG,OAAOxC,EAAEA,EAAEyC,OAAO,GAAG,SAASzC,EAAEA,EAAE0C,MAAM,GAAG,OAAS,CAA/F,CAAgGjB,IAAIA,EAAE,CAAC,IAAI,SAASzB,GAAGA,EAAEA,EAAEyC,OAAO,GAAG,SAASzC,EAAEA,EAAEwC,KAAK,GAAG,OAAOxC,EAAEA,EAAE0C,MAAM,GAAG,QAAQ1C,EAAEA,EAAE2C,IAAI,GAAG,MAAM3C,EAAEA,EAAE4C,OAAO,GAAG,SAAS5C,EAAEA,EAAE6C,SAAS,GAAG,WAAW7C,EAAEA,EAAE8C,UAAU,GAAG,YAAY9C,EAAEA,EAAE+C,YAAY,GAAG,cAAc/C,EAAEA,EAAEgD,aAAa,GAAG,cAAgB,CAAhP,CAAiPtB,IAAIA,EAAE,CAAC,IAAI,SAAS1B,GAAGA,EAAEA,EAAEkC,KAAK,GAAG,OAAOlC,EAAEA,EAAEiD,UAAU,GAAG,YAAYjD,EAAEA,EAAEkD,UAAU,GAAG,WAAa,CAA1F,CAA2FjE,IAAIA,EAAE,CAAC,IAAI,SAASe,GAAGA,EAAEA,EAAEqC,IAAI,GAAG,MAAMrC,EAAEA,EAAEsC,SAAS,GAAG,UAAY,CAAzD,CAA0DxC,IAAIA,EAAE,CAAC,IAAI,SAASE,GAAGA,EAAEA,EAAEmD,WAAW,GAAG,aAAanD,EAAEA,EAAEoD,SAAS,GAAG,UAAY,CAAvE,CAAwEzB,IAAIA,EAAE,CAAC,I,IAAU0B,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,K,kBAAGA,EAAEC,2BAA2B,CAACC,WAAW,CAACC,KAAK,OAAOC,OAAO,CAAC,UAAU,QAAQC,QAAQlC,EAAES,UAAUoB,EAAEM,qBAAqB,CAACJ,WAAW,CAACC,KAAK,OAAOC,OAAO,CAAC,UAAU,QAAQC,QAAQlC,EAAES,UAAUoB,EAAEO,qBAAqB,CAACL,WAAW,CAACC,KAAK,OAAOC,OAAO,CAAC,UAAU,QAAQC,QAAQlC,EAAES,SAAS,WAAW,CAACuB,KAAK,OAAOC,OAAO,CAAC,OAAO,QAAQ,UAAUC,QAAQ1D,EAAAA,EAAAA,MAAQ,YAAY,CAACwD,KAAK,OAAOC,OAAO,CAAC,QAAQ,QAAQ,SAASC,QAAQG,EAAAA,EAAAA,OAAW,mBAAmB,CAACL,KAAK,SAASE,QAAQ,GAAG,mBAAmB,CAACF,KAAK,SAASE,QAAQ,OAAOL,EAAES,uBAAuB,CAACP,WAAW,CAACC,KAAK,OAAOC,OAAO,CAAC,UAAU,QAAQC,QAAQlC,EAAES,SAAS,qBAAqB,CAACuB,KAAK,UAAUE,SAAQ,GAAI,mBAAmB,CAACF,KAAK,OAAOC,OAAO,CAAC,QAAQ,OAAO,eAAeC,QAAQnE,EAAE4C,OAAO,kBAAkB,CAACqB,KAAK,SAASE,SAAS,GAAG,iBAAiB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,KAAK,qBAAqB,CAACF,KAAK,UAAUE,SAAQ,GAAI,cAAc,CAACF,KAAK,OAAOC,OAAO,CAAC,SAAS,OAAO,QAAQ,MAAM,SAAS,WAAW,YAAY,cAAc,gBAAgBC,QAAQhC,EAAEe,QAAQ,wBAAwB,CAACe,KAAK,UAAUE,SAAQ,GAAI,aAAa,CAACF,KAAK,UAAU,oBAAoB,CAACA,KAAK,UAAUE,SAAQ,GAAI,cAAc,CAACF,KAAK,QAAQQ,MAAM,SAAShD,OAAO,EAAE0C,QAAQ,CAAC,EAAE,IAAI,gBAAgB,CAACF,KAAK,UAAUE,SAAQ,GAAI,eAAe,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,cAAc,CAACF,KAAK,SAASE,QAAQ,GAAG,0BAA0B,CAACF,KAAK,OAAOC,OAAO,CAAC,MAAM,WAAW,QAAQC,QAAQ/C,EAAE4B,MAAM,YAAY,CAACiB,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,qBAAqB,CAACF,KAAK,UAAUE,SAAQ,GAAI,cAAc,CAACF,KAAK,OAAOC,OAAO,CAAC,SAAS,OAAO,QAAQ,MAAM,SAAS,WAAW,YAAY,cAAc,gBAAgBC,QAAQhC,EAAEe,QAAQ,aAAa,CAACe,KAAK,UAAU,YAAY,CAACA,KAAK,QAAQQ,MAAM,SAASN,QAAQ,CAAC,oBAAoB,6BAA6B,wBAAwB,CAACF,KAAK,UAAUE,SAAQ,GAAI,eAAe,CAACF,KAAK,OAAOC,OAAO,CAAC,OAAO,OAAO,SAAS,SAASC,QAAQjC,EAAEgB,QAAQ,oBAAoB,CAACe,KAAK,UAAUE,SAAQ,GAAI,sBAAsB,CAACF,KAAK,SAASE,QAAQ,GAAG,mBAAmB,CAACF,KAAK,SAASE,QAAQ,KAAK,iBAAiB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,IAAI,iBAAiB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,IAAI,cAAc,CAACF,KAAK,QAAQQ,MAAM,SAAShD,OAAO,EAAE0C,QAAQ,CAAC,EAAE,IAAI,gBAAgB,CAACF,KAAK,UAAUE,SAAQ,GAAI,eAAe,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,cAAc,CAACF,KAAK,SAASE,QAAQ,GAAG,0BAA0B,CAACF,KAAK,OAAOC,OAAO,CAAC,MAAM,WAAW,QAAQC,QAAQ/C,EAAE4B,MAAM,YAAY,CAACiB,KAAK,SAASO,QAAQ,EAAEL,QAAQ,IAAI,iBAAiB,CAACF,KAAK,OAAOC,OAAO,CAAC,OAAO,YAAY,aAAaC,QAAQzE,EAAEiD,MAAM,oBAAoB,CAACsB,KAAK,QAAQQ,MAAM,OAAOP,OAAO,CAAC,aAAa,YAAYC,QAAQ,CAAC/B,EAAEwB,cAAcE,EAAEY,uBAAuB,CAACV,WAAW,CAACC,KAAK,OAAOC,OAAO,CAAC,UAAU,QAAQC,QAAQlC,EAAES,UAAUoB,EAAEa,0BAA0B,CAAC,mBAAmB,CAACV,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,qBAAqB,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,qBAAqB,CAACF,KAAK,WAAWH,EAAEe,oBAAoB,CAAC,iBAAiB,CAACZ,KAAK,UAAUE,SAAQ,GAAI,aAAa,CAACF,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,eAAe,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,qBAAqB,CAACF,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,eAAe,CAACF,KAAK,UAAU,iBAAiB,CAACA,KAAK,QAAQQ,MAAM,SAAShD,OAAO,EAAE0C,QAAQ,CAAC,EAAE,IAAI,wBAAwB,CAACF,KAAK,OAAOC,OAAO,CAAC,MAAM,YAAYC,QAAQ5D,EAAEuC,MAAMgB,EAAEgB,oBAAoB,CAAC,YAAY,CAACb,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,aAAa,CAACF,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,iBAAiB,CAACF,KAAK,QAAQQ,MAAM,SAASN,QAAQ,IAAI,iBAAiB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,cAAc,CAACF,KAAK,SAASE,QAAQ,GAAG,eAAe,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,eAAe,CAACF,KAAK,UAAU,iBAAiB,CAACA,KAAK,QAAQQ,MAAM,SAAShD,OAAO,EAAE0C,QAAQ,CAAC,EAAE,IAAI,wBAAwB,CAACF,KAAK,OAAOC,OAAO,CAAC,MAAM,YAAYC,QAAQ5D,EAAEuC,KAAK,aAAa,CAACmB,KAAK,SAASO,QAAQ,EAAEL,QAAQ,IAAIL,EAAEiB,sBAAsB,CAAC,aAAa,CAACd,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,iBAAiB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,kBAAkB,CAACF,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,kBAAkB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,eAAe,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,iBAAiB,CAACF,KAAK,QAAQQ,MAAM,SAAShD,OAAO,EAAE0C,QAAQ,CAAC,EAAE,IAAI,wBAAwB,CAACF,KAAK,OAAOC,OAAO,CAAC,MAAM,YAAYC,QAAQ5D,EAAEuC,KAAK,aAAa,CAACmB,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,iBAAiB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,kBAAkB,CAACF,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,kBAAkB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,eAAe,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,iBAAiB,CAACF,KAAK,QAAQQ,MAAM,SAAShD,OAAO,EAAE0C,QAAQ,CAAC,EAAE,IAAI,wBAAwB,CAACF,KAAK,OAAOC,OAAO,CAAC,MAAM,YAAYC,QAAQ5D,EAAEuC,MAAMgB,EAAEkB,sBAAsB,CAAC,iBAAiB,CAACf,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,oBAAoB,CAACF,KAAK,SAASE,QAAQ,GAAG,wBAAwB,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,wBAAwB,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,oBAAoB,CAACF,KAAK,SAASO,SAAS,EAAEI,QAAQ,EAAET,QAAQ,GAAG,kBAAkB,CAACF,KAAK,SAASO,SAAS,EAAEI,QAAQ,EAAET,QAAQ,GAAG,uBAAuB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,MAAML,EAAEmB,sBAAsB,CAAC,cAAc,CAAChB,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,eAAe,CAACF,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,iBAAiB,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,gBAAgB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,sBAAsB,CAACF,KAAK,QAAQE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,wBAAwB,CAACF,KAAK,SAASO,QAAQ,EAAEI,QAAQ,EAAET,QAAQ,GAAG,sBAAsB,CAACF,KAAK,SAASO,QAAQ,EAAEL,QAAQ,GAAG,mBAAmB,CAACF,KAAK,QAAQQ,MAAM,SAAShD,OAAO,EAAE0C,QAAQ,CAAC,EAAE,IAAI,0BAA0B,CAACF,KAAK,OAAOC,OAAO,CAAC,MAAM,YAAYC,QAAQ5D,EAAEuC,K,olBCqBvxN/C,EAAAA,WAAE,cAAa,eAACW,KAAKwE,KAAKxE,KAAKyE,YAAYD,MAAM,cAAgB,C,2CAAA,SAAanF,EAAEQ,EAAEN,GAAI,G,kBAAA,SAAKF,EAAEQ,EAAEN,GAAI,G,sBAAA,SAASF,EAAEQ,EAAEN,GAAE,gBAAgBM,GAAhB,IAAC,2BAAiB,KAAPW,EAAO,QAAAR,KAAK0E,KAAKrF,EAAEmB,EAAEjB,EAAG,CAAnC,+BAAoC,K,EAAtJF,GAMAkC,EAAAA,SAAAA,I,6BAAY,aAAa,6BAAC,eAASoD,YAAgBC,aAAa,CAACC,KAAK,EAAEC,SAAQC,EAAAA,EAAAA,KAAMC,iBAAgBD,EAAAA,EAAAA,MAA7E,CAAqF,C,sCAAA,WAAW,G,0BAAA,SAAaxF,GAAG,IAAcQ,EAAGR,EAAX0F,QAAalF,EAAEmF,cAAa,GAAG,GAAG,GAAG,GAAInF,EAAEoF,mBAAmBC,EAAAA,EAAAA,MAAQ,EAAE,IAAM,G,kBAAA,SAAK5E,EAAEnB,GAAQ,IAAeQ,EAAGW,EAAjB6E,cAAgC9D,EAAGlC,EAAfiG,YAAiB,KAAGC,EAAAA,EAAAA,GAAIhE,KAAa,WAAWA,EAAEiE,MAAMhB,MAAMjD,EAAEkE,OAAOjF,GAAG,aAAae,EAAEiE,MAAMhB,MAA7D,CAAyE,IAAMxF,EAAEuC,EAAEiE,MAAME,UAAU1G,EAAE2G,SAAQC,EAAAA,EAAAA,GAAI/F,IAAIG,KAAK4E,aAAaC,KAAKrE,EAAEqE,KAAK,IAAI7E,KAAK4E,aAAaE,QAAQzF,EAAEwG,WAAWC,IAAI9F,KAAK4E,aAAaI,gBAAgBxE,EAAEgF,MAAMR,gBAAgBzD,EAAEwE,UAAUC,OAAOxF,EAAER,KAAK4E,aAAa5F,GAAGuC,EAAEwE,UAAUE,WAAUL,EAAAA,EAAAA,GAAI/F,IAAIA,KAAKA,GAAjQ,CAAsQ,K,EAAjnB0B,CAAUlC,GAMV6G,EAAI,CAACC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAEC,UAAU,CAAC,EAAE,EAAE,GAAGC,UAAU,CAAC,IAAI,IAAI,KAAKC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAKC,UAAS,EAAGC,MAAM,CAAC,EAAE,EAAE,GAAGC,gBAAgB,CAAC,EAAE,EAAE,GAAGC,SAAS,KAAKC,eAAe,KAAKC,YAAY,OAAOvD,KAAK,WAAiBwD,EAAAA,SAAAA,I,6BAAgB,aAAiC,MAArBxH,EAAqB,uDAAnB,KAAKQ,EAAc,uDAAZ,KAAKF,EAAO,uDAAL,KAAK,uBAAC,gBAAamH,qBAAoB,EAAG,EAAKC,6BAA4B,EAAG,EAAKC,0BAAyB,EAAG,EAAKC,WAAW,EAAE,EAAKC,WAAW,CAAC,EAAE,GAAG,EAAKC,sBAAsB,KAAK,EAAKC,OAAO,KAAK,EAAKC,oBAAmB,EAAG,EAAKC,WAAW,EAAE,EAAKC,WAAW,EAAE,EAAKC,SAAS,EAAE,EAAKC,QAAQ,KAAK,EAAKC,aAAa,KAAK,EAAKC,YAAW,EAAG,EAAKC,SAAS,KAAK,EAAKC,eAAe,KAAK,EAAKC,eAAe,KAAK,EAAKC,MAAM,KAAK,EAAKC,EAAE,EAAE,EAAKC,EAAE,EAAE,EAAKC,OAAO7I,EAAE,EAAK8I,cAActI,EAAE,EAAKuI,cAAczI,EAA3e,CAA8e,C,sCAAA,WAAS,MAAC,UAAAG,KAAKuI,qBAAL,SAAoBC,SAASxH,SAAS,SAAAzB,GAAC,OAAEA,EAAEkJ,SAAJ,IAAgBzI,KAAK0I,eAAe,KAAK1I,KAAK2I,sBAAsB,KAAK3I,KAAK4I,iBAAiB,IAAM,G,gCAAA,WAA2B,OAAO5I,KAAKqH,uBAAuBnB,CAAI,E,IAAA,SAAyB3G,GAAGS,KAAKqH,wBAAwB9H,IAAIS,KAAKqH,sBAAsB9H,EAAES,KAAKiH,6BAA4B,EAAK,G,kBAAA,WAAa,OAAOjH,KAAK2H,OAAQ,E,IAAA,SAAWpI,GAAGS,KAAK2H,UAAUpI,IAAIS,KAAK2H,QAAQpI,EAAES,KAAK0I,iBAAiB1I,KAAK0I,eAAeD,UAAUzI,KAAK0I,eAAe,KAAK1I,KAAK6I,sBAAsB,MAAM7I,KAAK8I,oBAAsB,G,qBAAA,WAAgB,OAAO9I,KAAK6H,UAAW,E,IAAA,SAActI,GAAGS,KAAK6H,aAAatI,GAAGS,KAAK+I,QAAQ/I,KAAK2F,QAAQ3F,KAAKqF,iBAAiBrF,KAAK6H,WAAWtI,CAAG,G,mBAAA,WAAc,OAAOS,KAAK8H,QAAS,E,IAAA,SAAYvI,GAAGS,KAAK8H,SAASvI,EAAES,KAAKgJ,kBAAkBzJ,IAAIS,KAAK8I,mBAAqB,G,yBAAA,WAAoB,OAAO9I,KAAK+H,gBAAgB,SAAU,E,IAAA,SAAkBxI,GAAGS,KAAK+H,eAAexI,EAAES,KAAK0I,gBAAgB1I,KAAK0I,eAAeO,gBAAgB,aAAajJ,KAAKkJ,0BAA0B3J,GAAG4J,EAAAA,EAAAA,OAASA,EAAAA,EAAAA,QAAY,G,yBAAA,WAAoB,OAAOnJ,KAAKgI,cAAe,E,IAAA,SAAkBzI,GAAGS,KAAKgI,eAAezI,EAAES,KAAK2I,wBAAwB3I,KAAK2I,sBAAsBF,UAAUzI,KAAK2I,sBAAsB,KAAO,G,+BAAA,WAAoB3I,KAAKgH,sBAAsBhH,KAAKgH,qBAAoB,EAAGhH,KAAKqF,gBAAkB,G,+BAAA,WAAoB,MAAO,CAACS,KAAIf,EAAAA,EAAAA,KAAO,G,0BAAA,SAAaxF,GAAS,IAAAP,GAAEoK,EAAAA,EAAAA,GAAIpJ,KAAK6F,WAAWC,KAAtB,EAAiCvG,EAAE8J,mBAAmB,CAAC,EAAE,GAAG,CAACrJ,KAAKkI,EAAElI,KAAKmI,IAAzE,eAA4B7I,EAA5B,KAA8BE,EAA9B,KAA6EkB,EAAEV,KAAKyH,WAAWzH,KAAKwH,WAAWjI,EAAEkI,WAAW6B,EAAE5I,EAAEV,KAAKiI,MAAMsB,EAAE7I,EAAEV,KAAKsH,OAAO7F,EAAExC,KAAKC,GAAGc,KAAK0H,SAAS,KAAI8B,EAAAA,EAAAA,GAAIxK,EAAEA,GAAEyK,EAAAA,EAAAA,GAAInK,EAAEE,KAAIgK,EAAAA,EAAAA,GAAIxK,EAAEA,GAAEyK,EAAAA,EAAAA,GAAIH,EAAE,EAAEC,EAAE,KAAIG,EAAAA,EAAAA,GAAI1K,EAAEA,GAAGyC,IAAG+H,EAAAA,EAAAA,GAAIxK,EAAEA,GAAEyK,EAAAA,EAAAA,IAAKH,EAAE,GAAGC,EAAE,KAAII,EAAAA,EAAAA,GAAI3K,EAAEA,GAAEyK,EAAAA,EAAAA,GAAIH,EAAEC,KAAIK,EAAAA,EAAAA,GAAI5J,KAAK6F,WAAWC,IAAIvG,EAAEyF,gBAAgBhG,EAAI,G,yBAAA,WAAc,IAAIgB,KAAK0I,eAAe,OAAO,KAAK,IAAMnJ,EAAE,GAAGQ,EAAE,GAAG,OAAOC,KAAK2I,wBAAwB5I,EAAEY,KAAKX,KAAK2I,uBAAuBpJ,EAAEoB,KAAK,oBAAoBX,KAAK0I,iBAAiB3I,EAAEY,KAAKX,KAAK0I,gBAAgBnJ,EAAEoB,KAAK,YAAYX,KAAK4I,mBAAmB7I,EAAEY,KAAKX,KAAK4I,kBAAkBrJ,EAAEoB,KAAK,eAAe,CAACkJ,MAAMtK,EAAEiJ,SAASzI,EAAG,G,sBAAA,WAAWC,KAAK8I,mBAAqB,G,sBAAA,WAAW9I,KAAK8I,mBAAqB,G,2BAAA,YAA0B,UAAHvJ,EAAG,EAAX0F,QAAY,IAAIjF,KAAK+I,MAAM,OAAO,UAAA/I,KAAK0I,sBAAL,SAAqBD,UAArB,UAA+BzI,KAAK2I,6BAApC,OAA+B,EAA4BF,UAA3D,UAAqEzI,KAAK4I,wBAA1E,OAAqE,EAAuBH,UAAUzI,KAAK0I,eAAe,KAAK1I,KAAK6I,sBAAsB,KAAK7I,KAAK2I,sBAAsB,UAAU3I,KAAK4I,iBAAiB,MAAM,IAAM7I,EAAEC,KAAK8J,eAAe9J,KAAKoI,QAAQrI,GAAGC,KAAKiH,8BAA8BjH,KAAKiH,6BAA4B,EAAGjH,KAAK+J,uBAAuBxK,IAAIS,KAAKgH,sBAAsBhH,KAAKgH,qBAAoB,EAAGhH,KAAKgK,8BAA8BzK,GAAGS,KAAK0I,iBAAiB3I,EAAEC,KAAKqI,gBAAgBrI,KAAK2I,wBAAwB3I,KAAK2I,uBAAsBsB,EAAAA,EAAAA,GAAE1K,EAAES,KAAKqI,gBAAgBrI,KAAK0I,eAAewB,QAAQ,OAAOlK,KAAKmK,YAAYnK,KAAK2F,QAAQ3F,KAAKqF,iBAAmB,G,2CAAA,SAA8BtF,GAAE,QAAOF,GAAE+F,EAAAA,EAAAA,GAAI5F,KAAKoI,SAAQgC,EAAAA,EAAAA,GAAIpK,KAAKoI,OAAOpI,KAAKqK,SAAS,KAAK,GAAIrK,KAAK8J,eAAejK,GAAxB,CAAsJ,IAAMW,GAAGR,KAAKgJ,kBAAkBhJ,KAAKqK,SAAS,GAAGrK,KAAK0I,eAAe,CAAC,GAAGlI,EAAE,OAAOR,KAAK0I,eAAeD,UAAUzI,KAAK6I,sBAAsB,KAAK7I,KAAK0I,eAAe,IAAM,CAAA1I,KAAKkH,yBAAL,UAA8BnH,EAAEuK,aAAaC,oBAA7C,aAA8B,EAA6BC,mBAAmB,IAAMjJ,EAAEvB,KAAKkJ,0BAA0BlJ,KAAKsI,eAAejJ,EAAEW,KAAKuH,sBAAoB,UAACxH,EAAEuK,aAAaC,oBAAhB,OAAC,EAA6BA,cAAavK,KAAK0I,gBAAea,EAAAA,EAAAA,GAAExJ,EAAEF,EAAE0B,EAAElC,GAAGW,KAAK6I,sBAAsB7I,KAAKqK,SAAL,OAAiBrK,KAAKqK,SAAS,IAA7kB,MAAYrK,KAAK0I,iBAAiB1I,KAAK0I,eAAeD,UAAUzI,KAAK6I,sBAAsB,KAAK7I,KAAK0I,eAAe,KAA+d,G,+BAAA,SAAkBnJ,GAAG,IAAMQ,EAAEC,KAAK6I,sBAAsB,QAAS,MAAM9I,GAAG,MAAMR,GAAGQ,GAAGR,GAAGQ,EAAE0K,KAAK,MAAMlL,EAAEkL,KAAK,IAAK,G,4BAAA,SAAe1K,GAAE,MAAC,OAAO6F,EAAAA,EAAAA,GAAI7F,KAAI,UAAAA,EAAE2K,cAAF,eAAU3J,QAAO,CAAE,G,uCAAA,SAA0BhB,GAAG,MAAyBC,KAAK2K,qBAAnB9K,EAAX,EAAM0D,KAAgB/C,EAAtB,EAAaoG,SAAsCrF,EAAE,QAAQ1B,GAAG,YAAYA,IAAG+F,EAAAA,EAAAA,GAAIpF,GAAG,OAAQR,KAAKkH,0BAA0B3F,GAAG,aAAaxB,GAAG,UAAUA,EAAE,UAAU,UAAW,G,oCAAA,SAAuBR,GAAG,IAAMQ,EAAEC,KAAK4K,UAAU/K,EAAEG,KAAK2K,qBAAqB/D,SAAS,OAAO/G,EAAEE,EAAEF,EAAEkB,SAAShB,EAAEgB,QAAQlB,EAAEgL,MAAM,SAACtL,EAAEM,GAAH,OAAON,IAAIQ,EAAEF,EAAb,KAAmBG,KAAK4I,mBAAmB5I,KAAK4I,iBAAiBH,UAAUzI,KAAK4I,iBAAiB,MAAM5I,KAAK4I,kBAAiBkC,EAAAA,EAAAA,GAAIvL,EAAEM,QAAQG,KAAK4K,UAAU/K,SAAI,GAAQG,KAAK4I,kBAAiBkC,EAAAA,EAAAA,GAAIvL,EAAEM,QAAQG,KAAK4K,UAAU/K,KAAKG,KAAK4I,mBAAmB5I,KAAK4I,iBAAiBH,UAAUzI,KAAK4I,iBAAiB,WAAW5I,KAAK4K,UAAU,MAAO,K,EAAh1J7D,CAAYgE,EAAAA,G,IAMjPnH,EAAAA,WAAI,WAAYpD,EAAElB,IAAE,eAACU,KAAKgL,KAAKxK,EAAER,KAAKiL,cAAcC,EAAAA,EAAAA,aAAiB1K,EAAE2K,EAAAA,EAAAA,YAAgB,IAAIC,YAAY9L,IAAIU,KAAKqL,KAAK,IAAIC,EAAAA,EAAI9K,EAAE,IAAIL,IAAI,CAAC,CAAC,aAAa,KAAK,CAACoL,SAAS,CAAC,IAAIC,EAAAA,EAAI,aAAa,EAAEC,EAAAA,EAAAA,MAAQ,EAAE,KAAK,CAACF,SAASvL,KAAKiL,gBAAgBjL,KAAK0L,OAAOpM,EAAEyB,OAAO,CAAG,C,mCAAA,WAAOf,KAAKgL,KAAKW,QAAQ3L,KAAKqL,KAAO,G,oBAAA,WAASrL,KAAKgL,KAAKW,QAAQ,KAAO,G,qBAAA,WAAU3L,KAAKqL,KAAK5C,SAAQ,GAAIzI,KAAKiL,cAAcxC,SAAW,G,kBAAA,WAAOzI,KAAKgL,KAAKW,QAAQ3L,KAAKqL,MAAMrL,KAAKgL,KAAKY,WAAWC,EAAAA,EAAAA,eAAmB,EAAE7L,KAAK0L,OAAS,K,EAApe9H,GAMAkI,EAAAA,SAAAA,I,6BAAc,aAAa,6BAAC,eAASnH,YAAgBoH,MAAM,CAACC,IAAI,CAACC,OAAO,aAAaC,OAAO,aAAa5K,WAAW,IAAInB,IAAI,CAAC,CAAC,aAAa,GAAG,CAAC,aAAa,MAAMgM,QAAQ,CAACF,OAAO,iBAAiBC,OAAO,iBAAiB5K,WAAW,IAAInB,IAAI,CAAC,CAAC,aAAa,GAAG,CAAC,aAAa,MAAMiM,UAAU,CAACH,OAAO,mBAAmBC,OAAO,mBAAmB5K,WAAW,IAAInB,IAAI,CAAC,CAAC,aAAa,GAAG,CAAC,aAAa,OAAO,EAAKkM,sBAAsB,IAAIlM,IAAjZ,CAAsZ,C,sCAAA,WAAUH,KAAKsM,OAAOtM,KAAKsM,MAAM7D,SAAW,G,0BAAA,WAAyBlJ,GAAE,IAALQ,EAAK,EAAbkF,QAAclF,EAAEwM,oBAAmB,GAAIxM,EAAEyM,yBAAyBC,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,oBAAsBA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,qBAAuB1M,EAAEmF,cAAa,GAAG,GAAG,GAAG,GAAInF,EAAE2M,oBAAoB,GAAG3M,EAAE4M,uBAAsB,GAAI5M,EAAEoF,mBAAmBC,EAAAA,EAAAA,MAAQ7F,EAAE4H,WAAW,IAAM,G,kBAAA,SAAKpH,EAAEF,GAAE,MAAC,GAZq0I,SAAWE,GAAG,OAAO6F,EAAAA,EAAAA,GAAI7F,EAAEqI,OAAQ,CAYp2IwE,CAAE/M,KAAIA,EAAEsK,UAAZ,CAA6B,IAAe3J,EAAuCT,EAAhD8M,SAAmBxN,EAA6BU,EAArCkF,QAAkB1D,EAAmBxB,EAA3B+M,QAAwB9N,EAAGe,EAAjBsF,cAAmB7E,EAAEuM,MAAM/M,KAAKwE,MAAM,IAAMlF,IAAE,UAACD,EAAEiL,aAAaC,oBAAhB,OAAC,EAA6BC,oBAAmB3K,EAAEmN,cAAcjN,GAAG,IAAMP,EAAEQ,KAAKiN,qBAAqBpN,EAAEP,GAAGoB,EAAEa,EAAE2L,gBAAgBC,WAAWnN,KAAK+L,MAAMlM,EAAE8K,qBAAqBpH,MAAM/D,GAAGQ,KAAKoN,iBAAiB/N,EAAEqB,EAAEb,EAAEb,GAAGwB,EAAE6M,IAAIrN,KAAKwE,KAAnT,CAA0T,G,8BAAA,SAAiBjF,EAAEiB,EAAEnB,EAAEkC,GAAmB,IAAjB+H,EAAiB,uDAAf,EAAE7H,EAAa,uDAAX,CAAC,EAAE,GAAG2B,EAAK,wDAAC,GAAGpD,KAAKsM,QAAQtM,KAAKsM,MAAM,IAAI1I,EAAIrE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAKqG,EAAAA,EAAAA,GAAIrE,IAAKf,EAAE8M,WAApE,CAA+F,IAA2B/D,EAAgDlK,EAArEsL,qBAAqC4C,EAAgClO,EAA9CgJ,cAAwBmF,EAAsBnO,EAA5B4I,MAAevI,EAAaL,EAApBiI,OAAiBmG,EAAGpO,EAAXqO,QAAaC,EAAEpE,EAAEhG,KAAKhE,EAAEqO,WAAWpN,GAAS,IAAA0H,EAAElI,KAAKiN,qBAAqB5N,GAAG8I,EAAEnI,KAAK6N,iBAAiBF,EAAEpO,EAAEiB,EAAE0H,GAA7D,EAAuF7I,EAAEkJ,cAAlB9I,EAAvE,EAAiEoK,MAAiBiE,EAAlF,EAAyEtF,UAA8BuF,EAAAA,EAAAA,GAAExO,EAAEiB,EAAEf,EAAEqO,GAAK,IAAME,GAAEC,EAAAA,EAAAA,GAAI3E,EAAE7H,GAAG2D,GAAExF,EAAAA,EAAAA,GAAE2N,EAAI,CAACC,EAAE9N,GAAG,CAACL,EAAE+I,OAAOH,MAAM5I,EAAE+I,OAAOd,QAAQmG,EAAErK,GAAG,IAAG8K,EAAAA,EAAAA,GAAI1N,EAAE2H,GAAH,QAAC,QAAKgG,aAAa9O,EAAE+H,WAAWgH,UAAU/O,EAAEwG,WAAWC,KAAOkI,GAAK5I,IAAImE,EAAE3C,SAAS,CAAC,IAAe7G,EAAoBwJ,EAA7B3C,SAA0BrH,EAAGgK,EAAlB1C,eAAoBhH,GAAEwO,EAAAA,EAAAA,GAAItO,EAAER,IAAG2O,EAAAA,EAAAA,GAAI1N,EAAE2H,EAAEtI,EAAI,IAAG,YAAY0J,EAAEhG,KAAK,CAAC,IAAMxD,GAAEuO,EAAAA,EAAAA,GAAI/E,IAAG2E,EAAAA,EAAAA,GAAI1N,EAAE2H,EAAEpI,EAAI,MAAK,GAAG,cAAcwJ,EAAEhG,KAAK,CAAC,IAAMxD,GAAEwO,EAAAA,EAAAA,GAAIhF,IAAG2E,EAAAA,EAAAA,GAAI1N,EAAE2H,EAAEpI,EAAI,CAAAC,KAAKsM,MAAM5H,MAAhkB,MAAYnD,GAA4jB,G,8BAAA,SAAiBxB,EAAER,EAAEM,EAAEW,GAAG,IAAMnB,EAAEmB,EAAEO,OAAO,EAAEhB,EAAE,IAAIS,EAAEiK,KAAK,KAAK1K,EAAE,GAAGC,KAAKqM,sBAAsBjM,IAAIf,GAAG,OAAOW,KAAKqM,sBAAsBhM,IAAIhB,GAAG,IAAMkC,GAAEiN,EAAAA,EAAAA,GAAIjP,EAAEM,GAAG,OAAOG,KAAKqM,sBAAsBnL,IAAI7B,EAAEkC,GAAGA,CAAE,G,kCAAA,SAAqBxB,GAAO,IAALR,EAAK,wDAAOM,EAAE,GAAkBW,EAAGT,EAAjBuI,cAAN,EAA6CvI,EAAE4K,qBAAhBtL,EAA/B,EAA0BkE,KAAgBhC,EAA1C,EAAiCqF,SAAmC,MAAO,UAAUpG,EAAEX,EAAEc,KAAK,WAAW,aAAaH,GAAG,YAAYnB,GAAG,MAAMkC,GAAG1B,EAAEc,KAAK,YAAYd,EAAEc,KAAK,WAAWpB,GAAG,aAAaiB,GAAGX,EAAEc,KAAK,YAAYZ,EAAEwH,mBAAmB1H,EAAEc,KAAK,QAAQY,GAAG1B,EAAEc,KAAK,iBAAiBZ,EAAEsI,gBAAgBxI,EAAEc,KAAK,mBAAmB,IAAIZ,EAAEsI,cAAcoG,QAAQ,IAAI5O,EAAEc,KAAK,qBAAqBd,CAAE,K,EAA93EiM,CAAYzM,GAMZqP,EAAI,IAAIC,aAAa,CAAC,mBAAmB,kBAAkB,kBAAkB,EAAE,iBAAiB,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,GAAG,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,EAAE,EAAE,kBAAkB,EAAE,EAAE,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,iBAAiB,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,mBAAmB,mBAAmB,IAAIC,EAAI,CAACC,YAAYH,EAAII,WAAWJ,EAAIK,YAAYL,EAAIM,YAAYN,EAAIO,YAAY,IAAIN,aAAa,CAAC,kBAAkB,kBAAkB,kBAAkB,EAAE,mBAAmB,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,mBAAmB,EAAE,kBAAkB,kBAAkB,kBAAkB,EAAE,kBAAkB,kBAAkB,GAAG,EAAE,kBAAkB,kBAAkB,mBAAmB,EAAE,kBAAkB,mBAAmB,mBAAmB,EAAE,kBAAkB,kBAAkB,mBAAmB,IAAIO,iBAAiB,IAAIP,aAAa,CAAC,kBAAkB,kBAAkB,EAAE,EAAE,kBAAkB,mBAAmB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,kBAAkB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAIQ,gBAAgB,IAAIR,aAAa,CAAC,kBAAkB,mBAAmB,GAAG,EAAE,kBAAkB,mBAAmB,mBAAmB,EAAE,iBAAiB,kBAAkB,mBAAmB,EAAE,kBAAkB,kBAAkB,kBAAkB,IAAIS,iBAAiB,IAAIT,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,kBAAkB,mBAAmB,EAAE,kBAAkB,mBAAmB,GAAG,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,kBAAkB,mBAAmB,mBAAmB,EAAE,kBAAkB,kBAAkB,mBAAmB,EAAE,iBAAiB,kBAAkB,mBAAmB,EAAE,kBAAkB,kBAAkB,mBAAmB,EAAE,kBAAkB,kBAAkB,kBAAkB,IAAIU,aAAa,IAAIV,aAAa,CAAC,EAAE,GAAG,IAAI,IAAI,IAAI,IAAIW,WAAW,IAAIX,aAAa,CAAC,EAAE,EAAE,EAAE,KAAWY,EAAAA,SAAAA,I,6BAAc,aAAa,6BAAC,eAAS5K,YAAgBoH,MAAM,CAACyD,OAAO,CAACvD,OAAO,gBAAgBC,OAAO,gBAAgB5K,WAAW,IAAInB,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,WAAW,GAAG,CAAC,OAAO,MAAMsP,OAAO,CAACxD,OAAO,gBAAgBC,OAAO,gBAAgB5K,WAAW,IAAInB,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,WAAW,GAAG,CAAC,OAAO,OAAjQ,CAAyQ,C,sCAAA,WAAW,G,0BAAA,WAAyBZ,GAAE,IAALQ,EAAK,EAAbkF,QAAclF,EAAEwM,oBAAmB,GAAIxM,EAAEyM,yBAAyBC,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,oBAAsBA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,qBAAuB1M,EAAEmF,cAAa,GAAG,GAAG,GAAG,GAAInF,EAAE2M,oBAAoB,GAAG3M,EAAE4M,uBAAsB,GAAI5M,EAAE2P,aAAaC,EAAAA,EAAAA,KAASA,EAAAA,EAAAA,KAASA,EAAAA,EAAAA,SAAa5P,EAAEoF,mBAAmBC,EAAAA,EAAAA,MAAQ7F,EAAE4H,WAAW,IAAM,G,kBAAA,SAAK5H,EAAEF,GAAG,KAAGkG,EAAAA,EAAAA,GAAIlG,EAAE+I,SAAS,IAAI/I,EAAE+I,OAAOwH,gBAA/B,CAAsD,IAAe/P,EAAGN,EAAZsN,SAAc,GAAGhN,EAAEkN,MAAM/M,KAAKwE,MAAMnF,EAAEwQ,qBAAqBtQ,GAAG,WAAWA,EAAEuQ,WAAW,CAAC,IAAM/P,EAAEV,EAAE0Q,QAAQN,OAAO1P,GAAGC,KAAKgQ,aAAazQ,EAAEF,EAAEU,EAAEkQ,IAAIlQ,EAAEmQ,aAAe,KAAK,CAAC,IAAMnQ,EAAEV,EAAE0Q,QAAQP,OAAOzP,GAAGC,KAAKmQ,eAAe5Q,EAAEF,EAAEU,EAAEkQ,IAAIlQ,EAAEmQ,aAAe,CAAArQ,EAAEwN,IAAIrN,KAAKwE,KAAnQ,CAA0Q,G,4BAAA,SAAezE,EAAEV,EAAEQ,EAAEW,GAAG,IAAcxB,EAA6Be,EAArCkF,QAAkBvE,EAAmBX,EAA3B+M,QAAwBrL,EAAG1B,EAAjBsF,cAAyCiE,EAAGjK,EAAxBsL,qBAA0BvH,EAAEkG,EAAE8G,UAAU,CAAC,aAAa,GAAG,eAAe9G,EAAE+G,cAAcjN,EAAEzC,KAAK,sBAAsB,IAAMa,EAAEd,EAAEwM,gBAAgBC,WAAWnN,KAAK+L,MAAMyD,OAAOpM,GAAG,KAAGwC,EAAAA,EAAAA,GAAInE,IAAKD,EAAE8L,WAAd,CAAyCtO,EAAE4O,WAAWpM,GAAG,IAAiB+H,EAA0BlK,EAArC+H,WAAqBxH,EAAgBP,EAAxBqO,QAAqBhM,EAAGrC,EAAdwG,WAAgBrE,EAAE8O,cAAc,eAAe/G,GAAG/H,EAAE+O,aAAa,YAAY3Q,GAAG4B,EAAEgP,oBAAoB,YAAY9O,EAAEoE,KAAK,IAAYqC,EAA+CmB,EAArDmH,MAAkBC,EAAmCpH,EAA7C8G,UAAqB5C,EAAwBlE,EAAjC5B,SAA8B+F,EAAGnE,EAAtBqH,mBAAwBnP,EAAEoP,cAAc,WAAWhC,EAAIzG,IAAIyG,EAAIS,cAAc7N,EAAE8O,cAAc,cAAcI,GAAGlP,EAAE+O,aAAa,aAAa/C,GAAGhM,EAAE8O,cAAc,uBAAuB7C,GAAG,IAAMjO,EAAEQ,KAAK6Q,eAAe9Q,EAAEV,GAAGmC,EAAE8O,cAAc,eAAe9Q,GAAGR,EAAE2M,QAAQ9L,GAAGb,EAAE8R,aAAajF,EAAAA,EAAAA,UAAcrL,EAAEiL,EAAAA,EAAAA,aAAe,EAAhhB,MAAYhK,GAAwgB,G,0BAAA,SAAa1B,EAAEV,EAAEQ,EAAEW,GAAG,IAAcxB,EAA6Be,EAArCkF,QAAkBvE,EAAmBX,EAA3B+M,QAAwBiE,EAAGhR,EAAjBsF,cAAyC5D,EAAGpC,EAAxBsL,qBAA0BrB,EAAE,GAAG,eAAe7H,EAAEgP,MAAMnH,EAAE3I,KAAK,eAAec,EAAE2O,WAAW9G,EAAE3I,KAAK,aAAa,eAAec,EAAE4O,cAAc/G,EAAE3I,KAAK,sBAAsB,IAAMyC,EAAE1C,EAAEwM,gBAAgBC,WAAWnN,KAAK+L,MAAM0D,OAAOnG,GAAG,KAAG1D,EAAAA,EAAAA,GAAImL,IAAK3N,EAAEkK,WAAd,CAAyCtO,EAAE4O,WAAWxK,GAAG,IAAiB5B,EAA0BnC,EAArC+H,WAAqBmC,EAAgBlK,EAAxBqO,QAAqB9N,EAAGP,EAAdwG,WAAgBzC,EAAEkN,cAAc,eAAe9O,GAAG4B,EAAEmN,aAAa,YAAYhH,GAAGnG,EAAEoN,oBAAoB,YAAY5Q,EAAEkG,KAAK,IAAgBpE,EAAwBD,EAAlC2O,UAA+BjI,EAAG1G,EAAtBkP,mBAAwBvN,EAAEkN,cAAc,cAAc5O,GAAG0B,EAAEkN,cAAc,uBAAuBnI,GAAG,IAAMuI,EAAE1Q,KAAK6Q,eAAe9Q,EAAEV,GAAG+D,EAAEkN,cAAc,eAAeI,GAAG1R,EAAE2M,QAAQ9L,GAAGb,EAAE8R,aAAajF,EAAAA,EAAAA,UAAcrL,EAAEiL,EAAAA,EAAAA,aAAe,EAAza,MAAYsF,GAAia,G,4BAAA,SAAehR,EAAER,GAAS,IAAAF,EAAEE,EAAEyR,IAAF,SAAM,EAAIjR,EAAEkR,aAAa1R,EAAEyR,IAAIE,OAAO3R,EAAEkI,WAAW1H,EAAEyF,MAAMiC,WAA2B5H,EAAGN,EAAEoL,qBAApBwG,eAAyC,MAAO,CAACtR,GAAGZ,KAAKmS,OAAO7R,EAAE0I,MAAM1I,EAAE8R,OAAO,IAAIxR,GAAGA,GAAGR,EAAEQ,GAAGZ,KAAKmS,OAAO7R,EAAE+H,OAAO/H,EAAE8R,OAAO,IAAIxR,GAAGA,GAAGR,EAAG,K,EAA7qFkQ,CAAYlQ,GAM7zEiS,EAAI,CAACC,QAAQ,CAACC,QAAQ,GAAGC,aAAatI,EAAAA,EAAAA,QAAUuI,MAAK,GAAIC,SAAS,CAACH,QAAQ,GAAGC,aAAatI,EAAAA,EAAAA,OAASuI,MAAK,GAAIE,QAAQ,CAACJ,QAAQ,CAAC,WAAWC,aAAatI,EAAAA,EAAAA,OAASuI,MAAK,GAAIG,UAAU,CAACL,QAAQ,GAAGC,aAAatI,EAAAA,EAAAA,qBAAuBuI,MAAK,IAAuRI,EAAAA,SAAAA,I,6BAAc,aAAa,6BAAC,eAASnN,YAAgBoH,MAAM,CAACE,OAAO,gBAAgBC,OAAO,gBAAgB5K,WAAW,IAAInB,IAAI,CAAC,CAAC,QAAQ,MAA5G,CAAmH,C,sCAAA,WAAUH,KAAKsM,OAAOtM,KAAKsM,MAAM7D,SAAW,G,0BAAA,WAAyBlJ,GAAE,IAALQ,EAAK,EAAbkF,QAAclF,EAAEwM,oBAAmB,GAAI,aAAahN,EAAEwS,cAAchS,EAAEyM,yBAAyBC,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,KAAO1M,EAAEyM,yBAAyBC,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,oBAAsBA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,qBAAuB1M,EAAEmF,cAAa,GAAG,GAAG,GAAG,GAAInF,EAAE2M,oBAAoB,GAAG3M,EAAE4M,uBAAsB,GAAI5M,EAAEoF,mBAAmBC,EAAAA,EAAAA,MAAQ7F,EAAE4H,WAAW,IAAM,G,kBAAA,SAAK3G,EAAElB,GAAG,IAAcO,EAAgDW,EAAxDyE,QAA2B5F,EAA6BmB,EAA9CwR,iBAA2BhT,EAAmBwB,EAA3BsM,QAAwBrL,EAAGjB,EAAjB6E,cAAmB,GAAI/F,EAAE8I,OAAN,CAAoB,IAAM2I,EAAv4B,SAAChR,EAAER,EAAEgC,GAAK,GAAG,YAAYA,EAAEkQ,aAAa,CAAM,IAAOlQ,EAAGxB,EAATyF,MAAWhF,EAAEjB,EAAEkI,WAAWlI,EAAEiI,WAAWjG,EAAEkG,WAAWnI,EAAEL,KAAKmS,MAAMrR,EAAEyH,cAAczH,EAAEyH,WAAW3H,EAAEW,EAAE,MAAMA,EAAE,IAAI,OAAOe,EAAEmG,UAAU7H,GAAGP,GAAGC,EAAE0S,gBAAgB1S,EAAEmI,SAAS4J,EAAIK,SAASL,EAAIC,OAAQ,QAAOD,EAAI/P,EAAEkQ,aAAc,CAAkoBS,CAAI1R,EAAElB,EAAED,GAAGqB,EAAE1B,EAAEkO,gBAAgBC,WAAWnN,KAAK+L,MAAMgF,EAAES,SAAS,KAAG5L,EAAAA,EAAAA,GAAInE,IAAKf,EAAE4M,WAAd,CAAyC9M,EAAEqM,SAASE,MAAM/M,KAAKwE,MAAMxE,KAAKsM,QAAQtM,KAAKsM,MAAM,IAAI1I,EAAI/D,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,IAAiB6B,EAAkCpC,EAA7C8H,WAA6B5F,EAAgBlC,EAAhC6S,gBAA6B/O,EAAG9D,EAAduG,WAAgBvG,EAAE8S,mBAAmBrB,GAAGzR,EAAE+S,KAAK7R,EAAEyE,QAAQqN,EAAAA,IAAKzS,EAAE+N,WAAWlN,GAAGA,EAAE8P,oBAAoB,YAAYpN,EAAE0C,KAAKpF,EAAE6R,aAAa,YAAYD,EAAAA,IAAK5R,EAAE4P,cAAc,eAAe5O,GAAGhB,EAAE6P,aAAa,YAAY/O,GAAGxB,KAAKsM,MAAM5H,OAAOlE,EAAEqM,SAASQ,IAAIrN,KAAKwE,KAApY,MAAY/C,GAA9G,CAA6e,K,EAA/lCqQ,CAAYzS,GAM3gBS,EAAI,CAAC0S,WAAW,CAAC,kBAAkB,wEAAwE,kBAAkB,oPAAoPC,QAAQ,CAAC,eAAe,4LAA4L,eAAe,uJAAuJC,MAAM,CAAC,aAAa,6vPAA6vP,aAAa,8JAA8JC,IAAI,CAACA,IAAI,CAAC,WAAW,8UAA8U,WAAW,i6BAAi6BC,UAAU,CAAC,eAAe,i2CAAi2C,gBAAgB,o1BAAo1B,WAAW,wpCAAwpCC,GAAG,CAACC,UAAU,CAAC,iBAAiB,83BAA83B,iBAAiB,8KAA8KC,QAAQ,CAACC,eAAe,CAAC,sBAAsB,onBAAonB,sBAAsB,8PAA8PC,UAAU,CAAC,YAAY,ikCAAikC,iBAAiB,2tBAA2tB,gBAAgB,uMAAuMC,UAAU,CAAC,iBAAiB,+8BAA+8B,iBAAiB,0PAA0PC,UAAU,CAAC,qBAAqB,42DAA42D,mBAAmB,ohBAAohB,iBAAiB,wyCAAwyCC,KAAK,CAAC,cAAc,uyBAAuyB,YAAY,+0FAA+0F,YAAY,08IAA08I,eAAe,svBAAsvBC,QAAQ,CAAC,cAAc,m1CAAm1CC,KAAK,CAAC,cAAc,q5CAAq5CC,kBAAkB,CAAC,cAAc,kHAAkH,yBAAyB,mmBAAmmB,yBAAyB,2pCAA2pC,eAAe,owFAAowF,YAAY,6VAA6V,YAAY,w6EAAw6EC,MAAM,CAAC,cAAc,yUAAyU,aAAa,sCAAsC,aAAa,y2EAAy2EC,KAAK,CAAC,cAAc,gZAAgZ,eAAe,q0BAAq0B,YAAY,urBAAurB,YAAY,48DAA48DC,IAAI,CAAC,WAAW,szIAAszI,WAAW,g2JAAg2JC,OAAO,CAACF,KAAK,CAAC,cAAc,+hBAA+hB,YAAY,4rEAA4rE,YAAY,k4EAAk4E,0BAA0B,qTAAqTG,KAAK,CAAC,cAAc,6SAA6S,eAAe,2CAA2C,YAAY,kmBAAkmB,YAAY,w8DAAw8D,aAAa,+wCAA+wC,eAAe,6uFAA6uF,UAAU,y3IAAy3IC,QAAQ,CAACA,QAAQ,CAAC,eAAe,sNAAsN,eAAe,kQAAkQ,kBAAkB,CAACC,KAAK,CAAC,YAAY,4IAA4IC,MAAM,CAACC,UAAU,CAAC,iBAAiB,kkCAAkkCC,aAAa,CAAC,oBAAoB,u2BAAu2BC,mBAAmB,CAAC,0BAA0B,miBAAmiBC,KAAK,CAACF,aAAa,CAAC,oBAAoB,o2BAAo2B,cAAc,CAAC,mBAAmB,gxBAAgxBG,IAAI,CAAC,WAAW,2mBAA2mB,UAAU,CAAC,eAAe,kwBAAkwB,cAAc,CAACJ,UAAU,CAAC,iBAAiB,yfAAyf,cAAc,CAAC,YAAY,CAAC,iBAAiB,kkEAAkkEK,MAAM,CAAC,aAAa,u0BAAu0B,eAAe,CAAC,oBAAoB,o1BAAo1BC,aAAa,CAAC,oBAAoB,uUAAuUC,GAAG,CAAC,UAAU,4KAA4KC,OAAO,CAACC,OAAO,CAAC,cAAc,2bAA2b,cAAc,mQAAmQC,OAAO,CAAC,cAAc,0hCAA0hC,0BAA0B,w0BAAw0B,kBAAkB,i3CAAi3CC,KAAK,CAAC,sBAAsB,oNAAoN,wBAAwB,mRAAmRC,QAAQ,CAAC,eAAe,2gBAA2gB,eAAe,mPAAmPC,UAAU,CAAC,iBAAiB,qSAAqS,iBAAiB,sgHAAsgHC,YAAY,CAAC,mBAAmB,ywBAAywB,mBAAmB,84BAA84B,UAAU,+9DAA+9D1I,UAAU,CAAC,iBAAiB,iuHAAiuH,iBAAiB,mQAAmQJ,IAAI,CAAC,gBAAgB,2cAA2c,WAAW,2bAA2b,WAAW,oVAAoVwD,OAAO,CAAC,cAAc,wIAAwI,cAAc,0mCAA0mCuF,UAAU,CAAC,iBAAiB,gXAAgX,iBAAiB,8LAA8LtF,OAAO,CAAC,cAAc,85BAA85B,cAAc,o3BAAo3BtD,QAAQ,CAAC,eAAe,s5EAAs5E,eAAe,qVAAqV6I,QAAQ,CAAC,eAAe,6DAA6D,eAAe,oIAAoIC,SAAS,CAAC,gBAAgB,wKAAwK,gBAAgB,kaAAkaC,KAAK,CAAC,aAAa,kfAAkf,gBAAgB,8OAM9l+G,IAAM3V,EAAE,IAAI4V,EAAAA,GAAvF,SAAWpV,GAAG,IAAIf,EAAEc,EAAI,OAAOC,EAAEqV,MAAM,KAAKpU,SAAS,SAAAnB,GAAIb,IAAIA,EAAEA,EAAEa,GAAK,IAAGb,CAAE,IAAmB,SAASM,EAAEO,GAAG,OAAON,EAAE8V,gBAAgBxV,EAAG,CAMxI,IAAME,EAAE,CAACoB,QAAQ,CAACC,aAAa9B,EAAE,8BAA8B+B,eAAe/B,EAAE,+BAA+BgC,WAAW,IAAInB,IAAI,CAAC,CAAC,QAAQ,MAMjDiD,EAAAA,SAAAA,I,6BAAY,aAAa,6BAAC,eAASuB,YAAgB2Q,QAAOC,EAAAA,EAAAA,GAAI,EAAE,EAAE,EAAE,GAA3C,CAA+C,C,sCAAA,WAAUvV,KAAKwV,UAAUxV,KAAKwV,SAAS/M,SAAW,G,0BAAA,YAAyB,IAAH5I,EAAG,EAAXoF,QAAYpF,EAAE8M,uBAAsB,GAAI9M,EAAE0M,oBAAmB,GAAI1M,EAAE4V,uBAAsB,GAAI5V,EAAEqF,cAAa,GAAG,GAAG,GAAG,GAAIrF,EAAE6P,aAAaC,EAAAA,EAAAA,KAASA,EAAAA,EAAAA,KAASA,EAAAA,EAAAA,SAAa9P,EAAE6M,oBAAoB,KAAK7M,EAAEsF,mBAAmBC,EAAAA,EAAAA,OAAS,EAAE,IAAM,G,kBAAA,SAAKtF,EAAIU,GAAG,IAAcxB,EAA2Bc,EAAnCmF,QAAgB5F,EAAmBS,EAAzB0F,MAAsB/D,EAAG3B,EAAjBuF,cAAqBjC,GAAtfsS,EAAAA,EAAAA,GAAG,OAAO,CAACnK,SAAS,CAAC,CAACoK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,UAAmcnC,EAAE9I,EAAEqV,OAAO7W,EAAEK,EAAE+D,EAAE9B,WAAW8B,EAAE0S,gBAAevQ,EAAAA,EAAAA,GAAI+D,EAAEyM,eAAe/V,KAAKwV,WAAWxV,KAAKwV,UAASQ,EAAAA,EAAAA,GAAIhX,EAAEe,MAAK6F,EAAAA,EAAAA,GAAInE,IAAIzB,KAAKwV,SAASlI,YAAYtO,EAAE4O,WAAW5N,KAAKwV,UAAUxV,KAAKwV,SAASlF,cAAc,gBAAgB,CAAC,EAAE,IAAItQ,KAAKwV,SAAS5E,cAAc,UAAU5Q,KAAKsV,QAAQtV,KAAKwV,SAAShF,oBAAoB,YAAYnR,EAAE4W,aAAajX,EAAE2M,QAAQrC,GAAGtK,EAAE8R,aAAajF,EAAAA,EAAAA,UAAcvC,EAAEyM,YAAYG,KAAKzK,EAAAA,EAAAA,aAAe,GAAGzM,EAAE2M,WAAWlK,IAAM,K,EAA/1B2B,CAAU/D,GAMsD8W,EAAAA,SAAAA,I,6BAAc,aAAa,6BAAC,eAASxR,YAAgBoH,MAAM,CAACE,OAAO,kBAAkBC,OAAO,kBAAkB5K,WAAW,IAAInB,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,OAAO,MAA3H,CAAkI,C,sCAAA,WAAW,G,0BAAA,YAAyB,IAAHJ,EAAG,EAAXkF,QAAYlF,EAAEwM,oBAAmB,GAAIxM,EAAEmF,cAAa,GAAG,GAAG,GAAG,GAAInF,EAAEyM,yBAAyBC,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,oBAAsBA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,qBAAuB1M,EAAE2M,oBAAoB,GAAG3M,EAAE4M,uBAAsB,GAAI5M,EAAEoF,mBAAmBC,EAAAA,EAAAA,QAAU,IAAI,IAAM,G,kBAAA,SAAKvF,EAAEW,GAAG,IAAcxB,EAA6Ba,EAArCoF,QAAkB3F,EAAmBO,EAA3BiN,QAAwBzN,EAAGQ,EAAjBwF,cAAmB,GAAI7E,EAAE4V,QAAN,CAAqB,IAAsB3U,EAAsCjB,EAAtD2R,gBAA0BpB,EAA4BvQ,EAApCsE,QAAuBwE,EAAa9I,EAA1B6V,aAAuB3V,EAAGF,EAAX8V,QAAazW,EAAEgN,SAASE,MAAM/M,KAAKwE,MAAM,IAAM9C,EAAEpC,EAAE4N,gBAAgBC,WAAWnN,KAAK+L,OAAO,KAAGnG,EAAAA,EAAAA,GAAIvG,IAAKqC,EAAE4L,WAAd,CAAyC,IAAMlK,GAA5zBsS,EAAAA,EAAAA,GAAG,UAAU,CAACnK,SAAS,CAAC,CAACoK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,QAAU8K,IAAI,CAAC,CAACZ,SAAS,EAAEnR,KAAK,OAAOoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,mBAAktBlC,EAAE/I,EAAEqV,OAAO7W,EAAEoE,EAAE0S,cAAc1S,EAAE9B,YAAY,GAAIiI,EAAJ,CAAavK,EAAE2M,QAAQpC,GAAGvK,EAAE4O,WAAWlM,GAAG1C,EAAEwX,YAAY9V,EAAE4R,EAAAA,IAAK5Q,EAAE8O,oBAAoB,YAAYO,GAAGrP,EAAE6Q,aAAa,YAAYD,EAAAA,IAAK5Q,EAAE6O,aAAa,YAAY9O,GAAG,IAAM0G,EAAEmB,EAAE,GAAG,EAAEtK,EAAE4M,WAAWC,EAAAA,EAAAA,eAAmB,EAAE1D,GAAGnJ,EAAE2M,UAAU9L,EAAEgN,SAASQ,IAAIrN,KAAKwE,KAA1O,CAArF,MAAYnF,GAAjL,CAA2e,K,EAA/9B8W,CAAY9W,GAMjKqC,EAAAA,SAAAA,I,6BAAY,aAAa,6BAAC,eAASiD,YAAgB8R,aAAa,IAAItW,IAA3C,CAAgD,C,2CAAA,WAAyBJ,EAAEwB,GAAE,IAAPhC,EAAO,EAAf0F,QAAgB1D,GAAGA,EAAEmV,SAAS,WAAWnX,EAAEiN,yBAAyBC,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,KAAOlN,EAAEiN,yBAAyBC,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,oBAAsBA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,qBAAuBlN,EAAEgN,oBAAmB,GAAIhN,EAAE2F,cAAa,GAAG,GAAG,GAAG,GAAI3F,EAAEmN,oBAAoB,GAAGnN,EAAEoN,uBAAsB,GAAIpN,EAAE4F,mBAAmBC,EAAAA,EAAAA,MAAQrF,EAAEoH,WAAW,IAAM,G,kBAAA,SAAKpH,EAAEwB,EAAEf,GAAE,WAAOxB,EAAEgB,KAAK2W,kBAAkBpV,EAAEqV,OAAO7W,GAAG,IAAMV,EAAEkC,EAAEsV,YAAY7X,IAAGuG,EAAAA,EAAAA,GAAIlG,KAAKU,EAAE8M,SAASE,MAAM/M,KAAKwE,MAAMzE,EAAE+W,cAAcC,aAAahX,EAAEkF,SAAS5F,EAAE2X,gBAAgB,SAAAzX,GAAI,IAAMP,EAAE8O,EAAAA,EAAAA,KAASvO,EAAE0X,aAAaC,cAAc,EAAKC,kBAAkBnY,IAAI,EAAKoY,aAAarX,EAAEwB,EAAEhC,EAAEiB,EAAI,IAAK,G,gCAAA,SAAmBjB,EAAEiC,EAAEkP,GAAG,IAAmBtN,EAAsC5B,EAAnDyP,aAA0BvQ,EAAyBc,EAApCgG,WAAmB9F,EAAiBF,EAAvBgE,MAAoBuL,EAAGvP,EAAf6V,aAAiBzR,EAAAA,EAAAA,GAAImL,IAAI,YAAYA,EAAExN,OAAOhE,EAAE+Q,cAAc,eAAeS,EAAEuG,UAAU/X,EAAEgR,aAAa,gBAAgBQ,EAAEwG,WAAWhY,EAAEgR,aAAa,eAAe7P,GAAGnB,EAAEiR,oBAAoB,aAAaE,EAAE7K,WAAW2R,UAAUjY,EAAEiR,oBAAoB,aAAa9O,EAAE+V,UAAUlY,EAAEiR,oBAAoB,YAAYE,EAAE7K,WAAWC,KAAKvG,EAAEiR,oBAAoB,oBAAoB9O,EAAEsD,iBAAiBzF,EAAEgR,aAAa,gBAAgBtR,KAAKmS,MAAMhO,EAAEsU,EAAAA,IAAKnY,EAAEgT,aAAa,yBAAyB/Q,EAAEsV,cAAcZ,MAAM3W,EAAEgT,aAAa,mBAAmBoF,EAAAA,GAAGpY,EAAEgT,aAAa,mBAAmBqF,EAAAA,GAAKrY,EAAEgT,aAAa,mBAAmBsF,EAAAA,IAAGtY,EAAEgT,aAAa,mBAAmBuF,EAAAA,IAAKvY,EAAEgT,aAAa,mBAAmBwF,EAAAA,IAAKxY,EAAEgT,aAAa,mBAAmByF,EAAAA,GAAI,G,gCAAA,SAAmBzY,EAAEQ,EAAEwB,EAAEf,GAAG,GAAGjB,EAAE0Y,mBAAmBlY,EAAE6Q,cAAc,sBAAsBrP,EAAE0W,mBAAmB1Y,EAAE2Y,kBAAkBnY,EAAEwQ,aAAa,0BAA0BhP,EAAE4W,uBAAuB5Y,EAAE6Y,iBAAiB,CAAC,IAAM7Y,EAAEgC,EAAE8W,oBAAoB7X,EAAEwQ,IAAIE,OAAOnR,EAAEuY,cAAc,2BAA2B/Y,EAAEiE,QAAQzD,EAAEuY,cAAc,0BAA0B/Y,EAAEgZ,MAAQ,CAAAhZ,EAAEiZ,iBAAiBzY,EAAEwQ,aAAa,sCAAsChP,EAAEkX,6BAA+B,G,2CAAA,SAA8BlZ,EAAEQ,EAAEwB,GAAGhC,EAAEmZ,UAAU3Y,EAAEuY,cAAc,kBAAkB/W,EAAEoX,eAAe5Y,EAAE6Q,cAAc,aAAarP,EAAEqX,WAAWrZ,EAAEsZ,YAAY9Y,EAAEuY,cAAc,oBAAoB/W,EAAEuX,iBAAiB/Y,EAAEuY,cAAc,gBAAgB/W,EAAEwX,aAAe,G,oCAAA,SAAuBxZ,EAAEQ,EAAEwB,GAAGhC,EAAEyZ,YAAYjZ,EAAEwQ,aAAa,mBAAmB,eAAehP,EAAE0X,qBAAqBC,eAAe,EAAE,EAAI,G,8BAAA,SAAiB3Z,EAAEQ,GAAc,IAAZwB,EAAY,uDAAV,CAAC,SAAgBf,EAAET,EAAE+V,cAAcvK,SAASvM,EAAEuC,EAAE4X,KAAK,SAAA5Z,GAAC,OAAEiB,EAAE4Y,WAAW,SAAArZ,GAAC,OAAEA,EAAEyE,OAAOjF,CAAX,GAAhB,IAAiCF,EAAC,UAAIE,EAAJ,YAASP,EAAEyL,KAAK,MAAW5K,EAAEG,KAAKyW,aAAapW,IAAIhB,GAAG,IAAIQ,EAAE,CAAC,IAAD,EAAON,EAAEQ,EAAEsZ,QAAQ9X,EAAExB,EAAEsZ,QAAQ9N,SAASjM,EAAE,IAAIa,IAAIJ,EAAEuB,YAAYG,EAAEjB,EAAE2Y,KAAK,SAAA5Z,GAAC,iBAAOA,EAAP,IAAaiC,EAAEvC,KAAKqa,IAAL,MAAAra,MAAI,OAAQc,EAAEuB,WAAWkC,WAAUkN,EAAE,CAACnF,SAAS9J,GAAO2B,EAAE,EAAjJ,UAAkKpE,GAAlK,IAAmJ,2BAAiB,KAAPe,EAAO,QAAOR,EAAEiB,EAAET,GAAG2Q,EAAEnF,SAAS5K,KAAK,CAACiV,MAAMrW,EAAEqW,MAAMpR,KAAKjF,EAAEiF,KAAK,IAAI+U,QAAQha,EAAEga,QAAQC,WAAWja,EAAEia,WAAWnI,OAAO9P,EAAEhC,EAAE8R,OAAOoI,OAAOlY,EAAEgC,KAAKhE,EAAEgE,OAAOmN,EAAEnF,SAAS5K,KAAK,CAACiV,MAAMrW,EAAEqW,MAAMpR,KAAKjF,EAAEiF,KAAK,IAAI+U,QAAQha,EAAEga,QAAQC,WAAWja,EAAEia,WAAWnI,OAAO,EAAE9P,EAAEhC,EAAE8R,OAAOoI,OAAOlY,EAAEgC,KAAKhE,EAAEgE,OAAOjE,EAAE4B,IAAI3B,EAAEiF,KAAK,IAAIhD,KAAK4B,GAAG9D,EAAE4B,IAAI3B,EAAEiF,KAAK,IAAIhD,KAAK4B,EAAI,CAA3e,+BAA2evD,EAAE,CAACiW,cAAcpF,EAAEpP,WAAWhC,EAAE+Z,QAAQ9Z,GAAGS,KAAKyW,aAAavV,IAAI7B,EAAEQ,EAAI,QAAOA,CAAE,K,EAAhiG6B,CAAUrC,G,IAMgoBqa,EAAAA,SAAAA,I,8HAAc,WAAW,G,6BAAA,WAAkB,OAAOC,EAAAA,EAAAA,IAAS,G,+BAAA,SAAkB5Z,GAAG,OAAOA,IAAI0N,EAAAA,EAAAA,WAAc,G,0BAAA,SAAazO,EAAEa,EAAE0B,EAAEb,GAAG,IAAcqQ,EAA0E/R,EAAlFiG,QAAkBkD,EAAgEnJ,EAAxE8N,QAAuBpL,EAAiD1C,EAA9D4a,aAA6BrQ,EAAiCvK,EAA/C6a,cAA4BzW,EAAmBpE,EAA/BqY,YAA4B/N,EAAGtK,EAAjBqG,cAAmB4E,EAAE0D,EAAAA,EAAAA,KAAOpM,EAAE0V,aAAaxJ,GAAEqM,EAAAA,EAAAA,GAAI7P,EAAE8P,MAAMna,GAAEgG,EAAAA,EAAAA,GAAIxC,IAAI,YAAYA,EAAEG,KAAKpE,EAAEgJ,EAAE+E,gBAAjK,GAA+N8M,EAAAA,EAAAA,IAAIvM,EAAEwM,YAAp/B,SAAala,GAAG,IAAMR,EAAE,CAACgM,SAAS,CAAC,CAACoK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,OAAOoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,WAAWoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,UAAUoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,cAAgB+N,YAAW,GAAI,CAAC7D,SAAS,EAAEnR,KAAK,SAASoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,gBAAkB,CAACkK,SAAS,EAAEnR,KAAK,SAASoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,SAASoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,kBAAoB,OAAO1L,EAAEmX,eAAe,KAAKzJ,EAAAA,EAAAA,OAAS,KAAKA,EAAAA,EAAAA,oBAAsBlO,EAAEgM,SAAS2O,OAAO,EAAE,GAAG3a,EAAEgM,SAAS2O,OAAO,EAAE,GAAI,MAAO,CAACC,OAAO,iBAAiBC,aAAa7a,EAAG,CAAsX8a,CAAIpQ,IAA5D2C,EAAzL,EAAkLuN,OAAsB/U,EAAxM,EAA2LgV,aAAiCrM,EAA5N,EAA0MuM,kBAAmDpS,EAAE2D,EAAAA,EAAAA,UAAc1C,GAAEuM,EAAAA,EAAAA,GAAGzL,EAAE8P,KAAK3U,GAAGxF,IAAIuJ,EAAEnJ,KAAKua,iBAAiBhZ,EAAE0V,YAAY9N,EAAE4E,GAAG7F,EAAE2D,EAAAA,EAAAA,QAAY,MAAoC1C,EAAnB3J,EAAjB,EAAM8B,WAA2B0W,EAAjC,EAAmBlC,cAAmB0E,EAAErb,EAAEsb,mBAAmBzb,EAAEiL,EAAE2C,EAAEpN,EAAEkB,GAAG,KAAGkF,EAAAA,EAAAA,GAAI0D,IAAK1J,GAAI4a,EAAElN,WAAlB,CAA6C,GAAGyD,EAAEnD,WAAW4M,GAAGxa,KAAK0a,mBAAmBF,EAAExb,EAAEa,GAAG2a,EAAEG,aAAa,eAAe,IAAI9a,EAAEmR,IAAI4J,IAAI,IAAI/a,EAAEmR,IAAI6J,KAAK5Q,EAAE6Q,eAAe,CAAC3S,EAAE4S,eAAehE,aAAahG,EAAEyJ,EAAEvQ,GAAG,IAAMlK,EAAE,WAAE,EAAIwJ,EAAE1J,EAAEmR,IAAIE,OAAOsJ,EAAEjK,aAAa,eAAexQ,EAAI,KAAMyN,EAAE,EAAExO,EAAEwI,WAAWgT,EAAEjK,aAAa,SAAS/C,GAAGgN,EAAEjK,aAAa,iBAAiB/C,GAAGxN,KAAKgb,mBAAmB/Q,EAAEuQ,EAAE9Y,EAAE7B,GAAGG,KAAKib,8BAA8BhR,EAAEuQ,EAAE9Y,GAAG,IAAMmW,EAAEtW,EAAE2Z,OAAOrF,OAAO9E,EAAEiH,EAAExY,EAAEI,GAAO6M,EAAElL,EAAE4Z,WAAWnN,EAAEzM,EAAE6Z,UAAUC,YAAYC,kBAAkB1b,IAAI6M,GAAG,EAAEuB,GAAG,GAAG+C,EAAEpF,QAAQkM,GAAG7X,KAAKub,WAAWvc,EAAEa,EAAE2a,EAAEtS,EAAEuE,EAAEuB,EAAziB,MAAY1E,GAAiiB,G,wBAAA,SAAWvJ,EAAER,EAAEP,EAAEa,EAAER,EAAEkC,GAAGxB,EAAEkF,QAAQ6L,aAAajR,EAAER,EAAEoM,EAAAA,EAAAA,aAAelK,EAAI,K,EAAhrCmY,CAAYhY,GAMtpB8Y,GAAAA,SAAAA,I,6BAAc,aAAa,6BAAC,eAAS7V,YAAgB6W,gBAAgB,EAAE,EAAKC,aAAa,KAAK,EAAKC,aAAa,IAAIC,WAAW,CAACC,EAAAA,GAAEC,EAAAA,KAAM,EAAKC,QAAQ,KAAK,EAAKC,SAAS,CAAC9P,OAAO,UAAUC,OAAO,UAAU5K,WAAW,IAAInB,IAAI,CAAC,CAAC,QAAQ,MAA7M,CAAoN,C,sCAAA,YAAU,uDAAgBH,KAAKgc,mBAAmBhc,KAAKic,SAAQC,EAAAA,EAAAA,IAAIlc,KAAKic,SAASjc,KAAK8b,SAAQI,EAAAA,EAAAA,IAAIlc,KAAK8b,QAAU,G,6BAAA,WAAkB,OAAOnC,EAAAA,EAAAA,IAAS,G,+BAAA,SAAkB5Z,GAAG,OAAOA,IAAI0N,EAAAA,EAAAA,WAAc,G,wBAAA,SAAW1N,EAAEf,EAAEa,EAAEW,EAAEe,EAAEjC,GAAG,IAAkBgK,EAAGvJ,EAAfsX,YAAiB,IAAGzR,EAAAA,EAAAA,GAAI0D,IAAI,YAAYA,EAAE/F,MAAK,yDAAiBxD,EAAEf,EAAEa,EAAEW,EAAEe,EAAEjC,OAAQ,CAAC,IAAMC,EAAES,KAAKmc,kBAAkBpc,EAAEf,EAAEa,EAAE0B,EAAEjC,GAAGU,KAAKoc,gBAAgBrc,EAAEf,EAAEO,EAAI,CAAC,G,6BAAA,SAAgBQ,EAAEf,EAAEa,GAAG,IAAcW,EAA4CT,EAApDkF,QAAkB1D,EAAkCxB,EAA1C+M,QAAuBxN,EAAmBS,EAAhC6Z,aAA6BtQ,EAAGvJ,EAAjBsF,cAAmBhG,EAAEkC,EAAE2L,gBAAgBC,WAAWnN,KAAK+b,UAAU,KAAGnW,EAAAA,EAAAA,GAAI0D,IAAKjK,EAAEiO,WAAd,CAAyC,IAAqB5M,EAAGpB,EAAlB+c,gBAAoBC,EAAAA,EAAAA,GAAI5b,EAAE,eAAe,IAAMc,EAAExB,KAAKuc,sBAAsB/b,EAAER,KAAK+b,SAASza,WAAW,CAACiK,SAAS,CAAC,CAAC/G,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,MAAQ8N,QAAQ,EAAEC,YAAW,EAAGnI,OAAO,EAAEoI,OAAO,MAAMjZ,EAAEmM,uBAAsB,GAAInM,EAAEoN,WAAWvO,GAAGA,EAAEkR,aAAa,mBAAmB,GAAGlR,EAAEkT,aAAa,YAAYvS,KAAK0b,aAAa,IAAIrc,EAAEkR,aAAa,YAAYtR,KAAKqa,IAAI5Y,EAAE8b,QAAQ,IAAInd,EAAEkR,aAAa,eAAekM,OAAOC,kBAAkB1c,KAAK0a,mBAAmBrb,EAAEU,EAAEf,GAAGwB,EAAEgW,YAAY3W,EAAEG,KAAK0b,aAAa,IAAIlb,EAAEmL,QAAQnK,GAAGhB,EAAEoL,WAAWC,EAAAA,EAAAA,OAAW,EAAE,OAAhjB,MAAYvC,GAA6iB,G,+BAAA,SAAkBvJ,EAAER,EAAEP,EAAEa,EAAEW,GAAG,IAAce,EAAkCxB,EAA1CkF,QAAuBqE,EAAmBvJ,EAAhC6Z,aAA6Bva,EAAGU,EAAjB8Z,cAAmBnZ,EAAEa,EAAEob,cAA8Bnb,EAAG8H,EAAlB+S,gBAAoBC,EAAAA,EAAAA,GAAI9a,EAAE,eAAe,IAAeuP,EAAsDvP,EAA/Dob,SAAkBxZ,EAA6C5B,EAApDqb,OAAoBjQ,EAAgCpL,EAA3Csb,WAA6Bpb,EAAcF,EAA9Bub,gBAA2B7U,EAAG1G,EAAZwb,SAAczb,EAAE0b,YAAY,EAAE,EAAE,IAAI,KAAK,IAAMtP,EAAEpM,EAAE2b,4BAA4BrF,EAAE7X,KAAKmd,WAAW5b,GAAGA,EAAE6b,gBAAgBvF,GAAGtW,EAAE8b,cAAc,EAAE,EAAE,EAAE,GAAG9b,EAAE+b,MAAM/b,EAAEgc,GAAGC,iBAAiBjc,EAAEgc,GAAGE,oBAAoBlc,EAAEoL,uBAAsB,GAAI,IAAM/M,EAAE,WAAE,EAAIP,EAAEE,EAAEyR,IAAIE,OAAO/I,EAAEuV,EAAAA,EAAIjQ,EAAEtF,EAAEsU,OAAOC,iBAAiBvU,EAAEsU,OAAOC,iBAAiBzS,EAAE,EAAErK,GAAG,EAAEA,GAAG4N,EAAEuD,EAAEhR,EAAEyF,MAAMmY,MAAM5M,EAAE,EAAE,OAAO/R,EAAEuR,aAAa,mBAAmB3Q,GAAGZ,EAAEuR,aAAa,qBAAqB9C,GAAGiQ,EAAAA,EAAIjB,OAAOC,iBAAiBgB,EAAAA,EAAIjB,OAAOC,mBAAmB1d,EAAE4e,oBAAoB,cAAcxa,GAAGpE,EAAE4R,cAAc,aAAahE,GAAG5N,EAAE4R,cAAc,uBAAuBlP,GAAG1C,EAAEuR,aAAa,aAAatR,KAAKqa,IAAI,EAAEpR,EAAEsF,EAAEvD,IAAIjK,KAAK6d,wBAAwBtc,EAAEvC,EAAEsK,EAAEnB,GAAG5G,EAAEuP,aAAajF,EAAAA,EAAAA,UAAchM,EAAE4L,EAAAA,EAAAA,aAAejL,GAAGe,EAAE0b,YAAYvc,EAAEwH,EAAExH,EAAEyH,EAAEzH,EAAEuH,MAAMvH,EAAE4G,QAAQ/F,EAAE6b,gBAAgBzP,GAAGkK,EAAEiG,YAAa,G,wBAAA,SAAW/d,GAAG,IAAGwF,EAAAA,EAAAA,GAAIvF,KAAKic,SAAS,CAAC,IAAkBpc,EAAE,CAACqb,OAAO6C,EAAAA,EAAAA,WAAeC,YAAYte,EAAAA,EAAAA,KAAOue,SAASC,EAAAA,EAAAA,cAAkBzM,aAAatI,EAAAA,EAAAA,QAAUgV,SAASC,EAAAA,EAAAA,cAAkBnW,MAAnI,IAA2IX,OAArI,KAA+I9G,EAAE,CAAC6d,YAAYC,EAAAA,EAAAA,QAAUC,mBAAmBC,EAAAA,EAAAA,6BAA+Bjd,EAAE,IAAIkd,EAAAA,EAAI1e,EAAE,CAACkI,MAA7O,IAAqPX,OAA/O,IAAwPoX,eAAeC,EAAAA,EAAAA,gBAAoB3e,KAAKic,QAAQ,IAAI2C,EAAAA,EAAI7e,EAAES,EAAEX,EAAE0B,EAAI,QAAOvB,KAAKic,OAAQ,G,8BAAA,WAAmB,GAAGjc,KAAKyb,aAAa,CAAC,IAAI,IAAI1b,EAAE,EAAEA,EAAEC,KAAKyb,aAAa1a,OAAOhB,IAAIC,KAAKyb,aAAa1b,GAAG0I,UAAUzI,KAAKyb,aAAa,IAAM,CAAC,G,qCAAA,SAAwB1b,EAAER,EAAEP,EAAEa,GAAG,IAAqBW,EAAGxB,EAAlBqd,gBAAoBC,EAAAA,EAAAA,GAAI9b,EAAE,eAAe,IAAMe,EAAEvB,KAAK6e,0BAA0B9e,EAAEF,EAAEW,EAAEse,MAAMvf,EAAEwf,cAAc,gBAAgB/e,KAAK0b,cAAc,IAAI,IAAIpc,EAAE,EAAEA,EAAEiC,EAAER,OAAOzB,IAAIS,EAAEyW,YAAYjV,EAAEjC,GAAGU,KAAK0b,aAAapc,GAAK,G,mCAAA,SAAsBS,EAAER,EAAEM,GAAG,IAAG0F,EAAAA,EAAAA,GAAIvF,KAAK8b,SAAS,CAAsC,IAArC,IAAUtb,EAAE,IAAIwe,WAAW,QAAkBjf,EAAE,EAAEA,EAAE,IAAIA,IAAI,IAAI,IAAIR,EAAE,EAAEA,EAAE,IAAIA,IAAIiB,EAAzE,GAA8EjB,EAAE,IAAIQ,IAAIR,EAAEiB,EAA1F,GAA+FjB,EAAE,IAAIQ,GAAG,GAAGA,EAAE,IAAMwB,EAAE2J,EAAAA,EAAAA,aAAiBnL,EAAEoL,EAAAA,EAAAA,YAAgB3K,GAAGR,KAAK8b,QAAQ,IAAIxQ,EAAAA,EAAIvL,EAAER,EAAEM,EAAE,CAAC0L,SAAShK,GAAG,KAAO,QAAOvB,KAAK8b,OAAQ,G,uCAAA,SAA0B/b,EAAER,EAAEP,GAAG,GAAGgB,KAAKwb,kBAAkBjc,GAAGS,KAAKif,QAAQjgB,IAAIgB,KAAKgc,mBAAmBhc,KAAKwb,gBAAgBjc,EAAES,KAAKif,MAAMjgB,GAAG,OAAOgB,KAAKyb,aAAa,CAAC,IAAMjb,EAAE,IAAI0e,EAAAA,GAAIlgB,GAAGgB,KAAKyb,aAAa,CAACzb,KAAKmf,wBAAwBpf,EAAER,EAAEiB,GAAGR,KAAKmf,wBAAwBpf,EAAER,EAAEiB,GAAK,QAAOR,KAAKyb,YAAa,G,qCAAA,SAAwB1b,EAAER,EAAEP,GAAmC,IAAhC,IAAMa,EAAE,IAAI8O,aAAapP,EAAEA,EAAE,GAAWiB,EAAE,EAAEA,EAAEX,EAAEkB,OAAOP,IAAIX,EAAEW,GAAGxB,EAAEogB,WAAW,OAAO,IAAIC,EAAAA,EAAItf,EAAE,CAACoe,SAASC,EAAAA,EAAAA,OAAWJ,YAAYte,EAAAA,EAAAA,KAAOue,SAASC,EAAAA,EAAAA,MAAUzM,aAAatI,EAAAA,EAAAA,QAAUlB,MAAM1I,EAAE+H,OAAO/H,GAAGM,EAAG,K,EAAn2H2a,CAAUd,GAMV4F,GAAI,CAACnF,OAAO,iBAAiBC,aAAa,CAAC7O,SAAS,CAAC,CAACoK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,iBAAiBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,gBAAkB,CAACkK,SAAS,EAAEnR,KAAK,uBAAuBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,gBAAkB,CAACkK,SAAS,EAAEnR,KAAK,OAAOoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,UAAUoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,cAAgB+N,YAAW,GAAI,CAAC7D,SAAS,EAAEnR,KAAK,iBAAiBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,cAAgB+N,YAAW,GAAI,CAAC7D,SAAS,EAAEnR,KAAK,wBAAwBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,kBAAoB6O,kBAAkB,CAAC,iBAAiB,gBAAsBiF,GAAAA,SAAAA,I,8HAAc,WAAW,G,6BAAA,WAAkB,OAAO5F,EAAAA,EAAAA,MAAW,G,+BAAA,SAAkBpa,GAAG,OAAOA,IAAIkO,EAAAA,EAAAA,SAAWlO,IAAIkO,EAAAA,EAAAA,SAAY,G,0BAAA,SAAazO,EAAEK,EAAEkC,EAAEE,GAAG,IAAc6H,EAAkEtK,EAA1EiG,QAAkB8L,EAAwD/R,EAAhE8N,QAAuBpL,EAAyC1C,EAAtD4a,aAAqBzR,EAAiCnJ,EAAvCwG,MAAoB+D,EAAmBvK,EAA/BqY,YAA4BjU,EAAGpE,EAAjBqG,cAAmB4E,EAAE9K,EAAAA,EAAAA,KAAOoC,EAAE0V,aAAaxJ,GAAEqM,EAAAA,EAAAA,GAAI7P,EAAE8P,MAAMyF,GAAI5Z,EAAAA,EAAAA,GAAI2D,IAAI,YAAYA,EAAEhG,KAAlJ,GAAqMyW,EAAAA,EAAAA,IAAIvM,EAAEwM,YAAYqF,IAAxD1S,EAA/J,EAAwJuN,OAAsBva,EAA9K,EAAiKwa,aAAiClS,EAAlM,EAAgLoS,kBAAgD9a,EAAEqM,EAAAA,EAAAA,UAAcY,GAAEiJ,EAAAA,EAAAA,GAAGzL,EAAE8P,KAAKna,GAAG4f,IAAM/S,EAAEzM,KAAKua,iBAAiBhZ,EAAE0V,YAAYxK,EAAEvE,GAAG1I,EAAEqM,EAAAA,EAAAA,QAAY,MAAoCY,EAAnBsB,EAAjB,EAAMzM,WAA2Bme,EAAjC,EAAmB3J,cAAmB0E,EAAEzJ,EAAE7D,gBAAgBuN,mBAAmBzb,EAAEiL,EAAE2C,EAAEmB,EAAEtM,GAAG,KAAGmE,EAAAA,EAAAA,GAAIxC,IAAKoc,GAAMhF,EAAElN,WAApB,CAA+ChE,EAAEsE,WAAW4M,GAAGvQ,EAAE6Q,gBAAgB/J,EAAEgK,eAAehE,aAAazN,EAAEkR,EAAEvQ,GAAE,GAAIjK,KAAK0a,mBAAmBF,EAAExb,EAAEK,GAAG,IAAM2Y,EAAE/N,EAAE+O,WAAW7Q,EAAEnD,gBAAgBmD,EAAE8N,YAAYuE,EAAEhK,oBAAoB,gBAAgBwH,GAAGhY,KAAKgb,mBAAmB/Q,EAAEuQ,EAAE9Y,EAAErC,GAAGW,KAAKib,8BAA8BhR,EAAEuQ,EAAE9Y,GAAG1B,KAAK0f,uBAAuBzV,EAAEuQ,EAAE9Y,GAAG,IAAM0D,EAAE7D,EAAE2Z,OAAOrF,OAAOvM,EAAEmW,EAAE1R,EAAEyR,GAAS/f,EAAE8B,EAAE4Z,WAAW3N,EAAEjM,EAAE6Z,UAAUC,YAAYC,kBAAkBkE,IAAM/f,GAAG,EAAE+N,GAAG,GAAGlE,EAAEqC,QAAQvG,GAAGpF,KAAK2f,aAAa3gB,EAAEK,EAAEmb,EAAEhb,EAAEC,EAAE+N,EAAEgS,GAAKlW,EAAEqC,QAAQ,KAAlf,MAAYvI,GAA6e,G,0BAAA,SAAa7D,EAAEQ,EAAEf,EAAEK,EAAEQ,EAAE0B,EAAEjC,GAAGC,EAAE0F,QAAQ6L,aAAazR,EAAEQ,EAAE4L,EAAAA,EAAAA,aAAelK,EAAI,K,EAAtoCge,CAAY7d,GAMzrBke,GAAIC,EAAAA,EAAAA,UAAc,sDAAsDC,GAAE,CAAC7T,OAAO,yBAAyBC,OAAO,yBAAyB5K,WAAW,IAAInB,IAAI,CAAC,CAAC,aAAa,MAAY4f,GAAAA,SAAAA,I,wIAAgB,SAAkBhgB,GAAG,OAAOA,IAAI0N,EAAAA,EAAAA,OAAU,G,qBAAA,YAAU,uDAAgBzN,KAAKggB,0BAAyB9D,EAAAA,EAAAA,IAAIlc,KAAKggB,0BAA0BhgB,KAAKigB,wBAAuB/D,EAAAA,EAAAA,IAAIlc,KAAKigB,wBAAwBjgB,KAAKkgB,yBAAwBhE,EAAAA,EAAAA,IAAIlc,KAAKkgB,yBAAyBlgB,KAAKmgB,WAAUjE,EAAAA,EAAAA,IAAIlc,KAAKmgB,UAAY,G,0BAAA,SAAapgB,EAAER,EAAEM,EAAER,GAAG,IAAckC,EAAGvB,KAAKogB,oBAAoBrgB,EAAEkF,SAAtCuM,SAA+C,2DAAmBzR,EAAER,EAAEM,EAAER,EAAC,kBAAKA,IAAL,OAAUkC,IAAGA,EAAI,G,0BAAA,SAAaxB,EAAER,EAAEM,EAAER,EAAEkC,EAAEf,EAAExB,GAAQ,IAASwC,EAAGzB,EAAXkF,QAAavE,EAAEc,EAAE0b,4BAA4Bzb,EAAED,EAAEmb,cAAc3c,KAAKqgB,uBAAuBtgB,EAAER,EAAEM,EAAEb,GAAGwC,EAAEsP,aAAazR,EAAEkC,EAAEkK,EAAAA,EAAAA,aAAejL,GAAGxB,GAAGgB,KAAKsgB,iBAAiBvgB,EAAER,EAAEmB,EAAEe,EAAI,G,oCAAA,SAAuB1B,EAAER,EAAEM,EAAER,GAAG,IAAckC,EAAyCxB,EAAjDkF,QAAuBzE,EAA0BT,EAAvC6Z,aAAqBpY,EAAkBzB,EAAxByF,MAAqBlG,EAAGS,EAAhBkR,aAAkC3H,EAAG9I,EAAlB6b,gBAAoBC,EAAAA,EAAAA,GAAIhT,EAAE,WAAW,IAAqB9J,EAA4B8J,EAA3CiX,eAAwBxP,EAAmBzH,EAA1BkX,OAAuBpd,EAAGkG,EAAjBmX,cAAmBzgB,KAAK0gB,eAAenf,GAAGvB,KAAK2gB,iBAAiBrX,GAAG,IAAMC,EAAEwH,GAAG,IAAIvR,EAAEA,EAAEgC,EAAEmc,MAAM,GAAnB,SAAsB,EAAIpe,EAAEyR,IAAIE,MAAM5R,GAAGO,EAAE0Q,aAAa,WAAWhH,GAAGlK,IAAIkC,EAAE6b,gBAAgBpd,KAAKigB,wBAAwBpgB,EAAE0Q,aAAa,kBAAkBnN,GAAG7B,EAAE0b,YAAY,EAAE,EAAEjd,KAAKigB,uBAAuBhY,MAAMjI,KAAKigB,uBAAuB3Y,QAAQ/F,EAAEgL,oBAAmB,GAAIhL,EAAEqf,iBAAiBnU,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,KAAOlL,EAAE8b,cAAc,EAAE,EAAE,EAAE,GAAG9b,EAAE+b,MAAMuD,EAAAA,EAAAA,kBAAwB,G,8BAAA,SAAiB9gB,EAAER,EAAEM,EAAER,GAAG,IAAckC,EAA4BxB,EAApCkF,QAAkBzE,EAAkBT,EAA1B+M,QAA4CxN,EAAlBS,EAAhB6Z,aAAmByC,gBAAoBC,EAAAA,EAAAA,GAAIhd,EAAE,WAAW,IAAamC,EAA+BnC,EAAtCkhB,OAAoBlX,EAAkBhK,EAA7BwhB,WAA0BthB,EAAGF,EAAhByhB,aAA2BhQ,EAAG/Q,KAAKogB,oBAAoB7e,GAApCiQ,QAAuCpO,EAAE5C,EAAE0M,gBAAgBC,WAAW2S,GAAE/O,GAAGxP,EAAEqM,WAAWxK,GAAGpD,KAAK0a,mBAAmBtX,EAAErD,EAAER,GAAGgC,EAAE6b,gBAAgBvd,GAAG0B,EAAE0b,YAAY,EAAE,EAAE5d,EAAE4I,MAAM5I,EAAEiI,QAAQ/F,EAAEqf,iBAAiBnU,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,qBAAuBlL,EAAEiV,YAAYxW,KAAKggB,yBAAyB,GAAGze,EAAEiV,YAAYxW,KAAKkgB,wBAAwB,GAAG9c,EAAEmP,aAAa,YAAY,GAAGnP,EAAEmP,aAAa,aAAa,GAAGnP,EAAEuX,aAAa,0BAA0BrR,EAAE,EAAE9J,GAAG4D,EAAEmN,aAAa,yBAAyB,GAAG9O,EAAEA,EAAExC,KAAKC,KAAKc,KAAKmgB,UAAUzb,MAAQ,G,4BAAA,SAAe3E,GAAE,YAAOR,EAAEQ,EAAEwD,OAAOyd,EAAAA,EAAAA,OAAX,EAAgEhhB,KAAKogB,oBAAoBrgB,GAAzDF,EAAhC,EAAuBoe,SAAwB5e,EAA/C,EAAkCoS,aAA2BjR,EAA7D,EAAiDygB,YAA2C,UAAAjhB,KAAKggB,gCAAL,QAAgChgB,KAAKggB,yBAAyB,IAAIX,EAAAA,EAAItf,EAAE,CAACmb,OAAO6C,EAAAA,EAAAA,WAAeC,YAAYze,EAAEG,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,KAAOgf,eAAenf,EAAEM,IAAIqe,EAAAA,EAAAA,MAAUgD,EAAAA,EAAAA,KAASA,EAAAA,EAAAA,KAASxhB,EAAAA,EAAAA,KAAOue,SAASpe,EAAE4R,aAAapS,EAAE8e,SAASC,EAAAA,EAAAA,cAAkBnW,MAAMhJ,KAAKmS,MAAM,IAAI5Q,GAAG8G,OAAOrI,KAAKmS,MAAM,IAAI5Q,MAArR,UAA2RR,KAAKigB,8BAAhS,QAAyTjgB,KAAKigB,uBAAuB,IAAIrB,EAAAA,EAAI7e,EAAE,CAAC,EAAEC,KAAKggB,2BAAvW,UAAkYhgB,KAAKkgB,+BAAvY,QAAialgB,KAAKkgB,wBAAwB,IAAIb,EAAAA,EAAItf,EAAE,CAACmb,OAAO6C,EAAAA,EAAAA,WAAeC,YAAYte,EAAAA,EAAAA,KAAOue,SAASC,EAAAA,EAAAA,cAAkBzM,aAAatI,EAAAA,EAAAA,OAASgV,SAASC,EAAAA,EAAAA,iBAA5iB,UAAikBpe,KAAKmgB,iBAAtkB,QAAklBngB,KAAKmgB,UAAU,IAAIvc,EAAI7D,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAM,G,8BAAA,SAAiBA,GAAG,IAAmBR,EAAcQ,EAA3BohB,aAAwBthB,EAAGE,EAAZqhB,SAAcphB,KAAKqhB,oBAAoB9hB,IAAIS,KAAKkgB,wBAAwBoB,OAAOzhB,EAAEkB,OAAO,EAAE,GAAGf,KAAKkgB,wBAAwBhW,QAAQrK,GAAGG,KAAKqhB,kBAAkB9hB,EAAI,G,iCAAA,SAAoBQ,GAAG,IAAGwF,EAAAA,EAAAA,GAAIvF,KAAKuhB,iBAAiB,CAAC,IAAgNjY,EAAE9J,EAAlN,EAAyCO,EAAEuK,aAAxB/K,EAAnB,EAAMgL,aAAgC1K,EAAtC,EAAqB2hB,iBAAiDniB,EAAiFE,EAA9FgL,aAAkChJ,EAA4DhC,EAA/EiL,mBAAsChK,EAAyCjB,EAA1DkiB,iBAA0CziB,EAAgBO,EAAvCmiB,uBAAoClgB,EAAGjC,EAAdoiB,WAA8BriB,EAAmCO,EAAhD0K,aAAgC7J,EAAgBb,EAAjC4hB,iBAA8BhgB,EAAG5B,EAAd+hB,WAA8Bxe,EAAE/D,GAAGC,GAAGmC,EAAE8H,EAAE/I,GAAGE,EAAE0C,GAAG7B,GAAG+H,EAAE4U,EAAAA,EAAAA,MAAU1e,EAAE2J,EAAAA,EAAAA,QAAUI,GAAGvK,GAAGsK,EAAE9H,EAAEhC,EAAE2J,EAAAA,EAAAA,QAAU/F,GAAGkG,EAAE4U,EAAAA,EAAAA,MAAU1e,EAAE2J,EAAAA,EAAAA,SAAWI,GAAGD,EAAE9H,EAAEhC,EAAE2J,EAAAA,EAAAA,SAAWyW,GAAIiC,MAAM,yCAAyCriB,IAAI2J,EAAAA,EAAAA,SAAWyW,GAAIkC,SAAS,gFAAgF9hB,KAAKuhB,gBAAgB,CAACtD,SAAS3U,EAAEmI,aAAajS,EAAEyhB,YAAY,GAAGzP,QAAQlI,IAAI9H,EAAE,CAAC,6BAA6B,GAAK,QAAOxB,KAAKuhB,eAAgB,K,EAA98GxB,CAAYR,IAMrM1f,GAAE,CAACsB,QAAQ,CAACC,aAAa9B,EAAE,0BAA0B+B,eAAe/B,EAAE,2BAA2BgC,WAAW,IAAInB,IAAI,CAAC,CAAC,QAAQ,MAM9Hsf,GAAE,IAAevX,GAAAA,SAAAA,I,6BAAY,aAAa,6BAAC,eAASvD,YAAgB2Q,QAAOC,EAAAA,EAAAA,GAAI,EAAE,EAAE,EAAE,GAA3C,CAA+C,C,sCAAA,WAAUvV,KAAK+hB,kBAAkB/hB,KAAK+hB,gBAAgBtZ,UAAUzI,KAAK+hB,gBAAgB,MAAM/hB,KAAKgiB,mBAAmBhiB,KAAKgiB,iBAAiBvZ,UAAUzI,KAAKgiB,iBAAiB,MAAMhiB,KAAKiiB,4BAA4BjiB,KAAKiiB,0BAA0BxZ,UAAUzI,KAAKiiB,0BAA0B,MAAMjiB,KAAKkiB,6BAA6BliB,KAAKkiB,2BAA2BzZ,UAAUzI,KAAKkiB,2BAA2B,MAAMliB,KAAKmiB,QAAQ,IAAM,G,0BAAA,YAAyB,IAAH5iB,EAAG,EAAX0F,QAAY1F,EAAEgN,oBAAmB,GAAIhN,EAAEiN,yBAAyBC,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,oBAAsBA,EAAAA,EAAAA,IAAMA,EAAAA,EAAAA,qBAAuBlN,EAAE2F,cAAa,GAAG,GAAG,GAAG,GAAI3F,EAAEmN,oBAAoB,GAAGnN,EAAEoN,uBAAsB,EAAK,G,kBAAA,SAAK5M,EAAEF,GAAG,IAAc0B,EAAmBxB,EAA3BkF,QAAwBjG,EAAGe,EAAjBsF,cAAmB,GAAIxF,EAAEuW,QAAe,GAAGpW,KAAKoiB,kBAAkB7gB,KAAGqE,EAAAA,EAAAA,GAAI5G,IAAMgB,KAAK+hB,gBAAgBzU,YAAatN,KAAKgiB,iBAAiB1U,WAA/F,CAA2H/L,EAAEoK,QAAQ3L,KAAKiiB,2BAA2B1gB,EAAEqM,WAAW5N,KAAK+hB,iBAAiB/hB,KAAK+hB,gBAAgBvR,oBAAoB,YAAY3Q,EAAEgG,WAAWC,KAAK9F,KAAK+hB,gBAAgBpH,aAAa,gBAAgB9a,EAAEwiB,OAAOxiB,EAAEyiB,QAAQtiB,KAAK+hB,gBAAgBxR,aAAa,UAAU,GAAGvQ,KAAK+hB,gBAAgBnR,cAAc,UAAU5Q,KAAKsV,QAAQ/T,EAAEqK,WAAWC,EAAAA,EAAAA,WAAe,EAAE,GAAG,IAAMrL,EAAER,KAAKuiB,YAAYhhB,EAAE1B,GAAGW,GAAGe,EAAEoK,QAAQ3L,KAAKkiB,4BAA4B3gB,EAAEqM,WAAW5N,KAAKgiB,kBAAkBzgB,EAAEiV,YAAYhW,EAAE,GAAGR,KAAKgiB,iBAAiBxR,oBAAoB,YAAY3Q,EAAEgG,WAAWC,KAAK9F,KAAKgiB,iBAAiBzR,aAAa,UAAU,GAAGvQ,KAAKgiB,iBAAiBrH,aAAa,gBAAgB9a,EAAEwiB,OAAOxiB,EAAEoI,MAAMpI,EAAEyiB,OAAOziB,EAAEyH,QAAQtH,KAAKgiB,iBAAiBrH,aAAa,UAAU,EAAE,GAAG3a,KAAKgiB,iBAAiBrH,aAAa,eAAena,EAAEgiB,WAAWva,MAAMzH,EAAEgiB,WAAWlb,QAAQ/F,EAAEqK,WAAWC,EAAAA,EAAAA,eAAmB,EAAE,GAAGtK,EAAEoK,WAAWpK,EAAEoK,SAAr4B,MAAY3M,GAAo4B,G,+BAAA,SAAkBO,GAAG,IAAGS,KAAK+hB,kBAAiB/hB,KAAKgiB,iBAA9B,CAAsD,IAAMliB,GAAIkW,EAAAA,EAAAA,GAAIzW,EAAEQ,GAAGwB,GAAEyU,EAAAA,EAAAA,GAAIzW,EAAEM,IAAGR,EAAE,IAAIojB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI/hB,EAAEwK,EAAAA,EAAAA,aAAiB3L,EAAE4L,EAAAA,EAAAA,YAAgB9L,GAAGoC,EAAE,IAAI6J,EAAAA,EAAI/L,EAAEQ,EAAEuB,WAAWohB,EAAAA,EAAI,CAACnX,SAAS7K,IAAI6I,EAAE,IAAIkZ,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAIrf,EAAE8H,EAAAA,EAAAA,aAAiB3L,EAAE4L,EAAAA,EAAAA,YAAgB5B,GAAG/J,EAAE,IAAI8L,EAAAA,EAAI/L,EAAEM,GAAEyB,WAAWohB,EAAAA,EAAI,CAACnX,SAASnI,IAAIpD,KAAK+hB,gBAAgBjiB,EAAIE,KAAKgiB,iBAAiBzgB,EAAEvB,KAAKiiB,0BAA0BxgB,EAAEzB,KAAKkiB,2BAA2B1iB,CAA7X,CAAgY,G,yBAAA,SAAYD,EAAEQ,GAAG,GAAGA,EAAEuW,SAASvW,EAAE4iB,+BAA+B5iB,EAAE6iB,cAAc,OAAO7iB,EAAEuW,QAAQvW,EAAE4iB,6BAA6B5iB,EAAE6iB,cAAc5iB,KAAKmiB,UAAUniB,KAAKmiB,QAAQU,SAASC,cAAc,UAAU9iB,KAAKmiB,QAAQY,aAAa,KAAK,YAAY/iB,KAAKmiB,QAAQY,aAAa,QAA1B,UAAqCtD,KAAKzf,KAAKmiB,QAAQY,aAAa,SAA1B,UAAt/E,KAAiiF/iB,KAAKmiB,QAAQY,aAAa,QAAQ,iBAAiB,IAAMljB,EAAEE,EAAE6iB,cAAkBrhB,EAAExB,EAAEiR,IAAIgS,GAAGjjB,EAAE6iB,cAAc,IAAIrhB,GAAC,YAAO1B,IAAK,IAAMb,EAAEgB,KAAKmiB,QAAQ3hB,EAAExB,EAAEikB,WAAW,MAAM,OAAOziB,EAAE0iB,KAAK,kBAAkB1iB,EAAE2iB,UAAU,OAAO3iB,EAAE4iB,aAAa,MAAM5iB,EAAE6iB,UAAU,EAAE,EAAE5D,GAA9xF,IAAmyF5f,EAAE,KAAKW,EAAE8iB,UAAU,MAAM9iB,EAAE+iB,SAAS,EAAE,EAAE9D,GAA30F,IAAg1Fjf,EAAE8iB,UAAU,UAAU9iB,EAAE6iB,UAAU,EAAE,EAAE5D,GAAt3F,IAA23Fjf,EAAE8iB,UAAU,QAAQ9iB,EAAEgjB,SAASjiB,EAAE,EAAE,GAAGxB,EAAEuW,QAAQ,IAAI+I,EAAAA,EAAI9f,EAAE,CAAC2b,OAAO6C,EAAAA,EAAAA,WAAeC,YAAYte,EAAAA,EAAAA,KAAOue,SAASC,EAAAA,EAAAA,cAAkBzM,aAAatI,EAAAA,EAAAA,QAAUgV,SAASC,EAAAA,EAAAA,eAAmBpf,GAAGe,EAAEuW,OAAQ,K,EAAjjGpO,CAAU7I,GAM3BokB,GAAAA,SAAAA,I,wIAAgB,SAAkB5jB,GAAG,OAAOA,IAAI4N,EAAAA,EAAAA,SAAY,G,0BAAA,SAAazO,EAAEa,EAAEW,EAAElB,EAAEoB,EAAE0C,EAAE5B,GAAQ,IAASD,EAAGvC,EAAXiG,QAAgD5F,EAAlBL,EAAhB4a,aAAmByC,gBAAoBC,EAAAA,EAAAA,GAAIjd,EAAE,aAAamB,EAAEoQ,cAAc,WAAWvR,EAAEwd,QAAQrc,EAAEoQ,cAAc,iBAAiBvR,EAAEqkB,cAAcljB,EAAEoQ,cAAc,gBAAgBvR,EAAEskB,aAAanjB,EAAEoQ,cAAc,iBAAiBvR,EAAEukB,cAAcpjB,EAAE+P,aAAa,eAAelR,EAAEwkB,gBAAgBrjB,EAAE+P,aAAa,oBAAoBlR,EAAEykB,iBAAiBtjB,EAAE+P,aAAa,iBAAiBlR,EAAE0kB,cAAcxiB,EAAEuP,aAAaxR,EAAEoB,EAAE+K,EAAAA,EAAAA,aAAerI,EAAI,K,EAAxhBqgB,CAAYlE,IAMZyE,GAAAA,SAAAA,I,6BAAc,aAAa,6BAAC,eAASrf,YAAgB2Q,QAAOC,EAAAA,EAAAA,GAAI,EAAE,EAAE,EAAE,GAAG,EAAK0O,cAAa,EAAhE,CAAoE,C,sCAAA,WAAUjkB,KAAKkkB,gBAAgBlkB,KAAKkkB,cAAczb,UAAUzI,KAAKkkB,cAAc,MAAMlkB,KAAKmkB,0BAA0BnkB,KAAKmkB,wBAAwB1b,UAAUzI,KAAKmkB,wBAAwB,KAAO,G,0BAAA,WAAyB5kB,GAAE,IAALM,EAAK,EAAboF,QAAcpF,EAAEukB,sBAAqB,GAAIvkB,EAAEwkB,qBAAoB,GAAIxkB,EAAE8M,uBAAsB,GAAI9M,EAAE0M,oBAAmB,GAAI1M,EAAEqF,cAAa,GAAG,GAAG,GAAG,GAAIrF,EAAE6P,aAAaC,EAAAA,EAAAA,KAASA,EAAAA,EAAAA,KAASA,EAAAA,EAAAA,SAAa9P,EAAE6M,oBAAoB,KAAK7M,EAAEykB,2BAA2B9E,EAAAA,EAAAA,eAAmBpa,EAAAA,EAAAA,QAAU7F,EAAE4H,WAAW,IAAM,G,kBAAA,SAAK5H,EAAEQ,GAAG,IAAcwB,EAAmBhC,EAA3B0F,QAAwBzE,EAAGjB,EAAjB8F,cAAmBrF,KAAKikB,cAAcjkB,KAAKukB,YAAYhjB,KAAIqE,EAAAA,EAAAA,GAAIpF,IAAIR,KAAKkkB,cAAc5W,YAAY/L,EAAEoK,QAAQ3L,KAAKmkB,yBAAyB5iB,EAAEqM,WAAW5N,KAAKkkB,eAAelkB,KAAKkkB,cAAc1T,oBAAoB,YAAYzQ,EAAE8F,WAAWC,KAAK9F,KAAKkkB,cAAc5T,cAAc,gBAAgB,CAACvQ,EAAEsiB,OAAOtiB,EAAEuiB,SAAStiB,KAAKkkB,cAAc3T,aAAa,UAAU,GAAGvQ,KAAKkkB,cAActT,cAAc,UAAU5Q,KAAKsV,QAAQ/T,EAAEqK,WAAWC,EAAAA,EAAAA,eAAmB,EAAE,GAAGtK,EAAEoK,WAAWnL,GAAK,G,yBAAA,SAAYX,GAAG,GAAGG,KAAKikB,aAAa,OAAO,EAAG,IAAM1kB,GAAEyW,EAAAA,EAAAA,GAAInW,EAAEE,GAAG,IAAIR,EAAE,OAAO,EAAG,IAAMgC,EAAE,IAAIkhB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAIpjB,EAAE6L,EAAAA,EAAAA,aAAiBrL,EAAEsL,EAAAA,EAAAA,YAAgB5J,GAAGb,EAAE,IAAI4K,EAAAA,EAAIzL,EAAEE,EAAEuB,WAAWohB,EAAAA,EAAI,CAACnX,SAASlM,IAAI,OAAOW,KAAKkkB,cAAc3kB,EAAES,KAAKmkB,wBAAwBzjB,EAAEV,KAAKikB,cAAa,GAAG,CAAG,K,EAAh2CD,CAAY3kB,GAMZiK,GAAAA,SAAAA,I,6BAAY,aAAa,6BAAC,eAAS3E,YAAgB2Q,QAAOC,EAAAA,EAAAA,GAAI,EAAE,EAAE,EAAE,GAAG,EAAKiP,gBAAezf,EAAAA,EAAAA,KAAM,EAAK0f,gBAAgB,CAACzB,IAAG,EAAG0B,SAAQ,GAA5G,CAAiH,C,sCAAA,WAAU1kB,KAAKqL,OAAOrL,KAAKqL,KAAK5C,UAAUzI,KAAKqL,KAAK,KAAO,G,sBAAA,SAAStL,EAAEf,GAAG,IAAc+R,EAA6ChR,EAArDkF,QAAkBxD,EAAmC1B,EAA3C+M,QAAwBpL,EAAmB3B,EAAjC4kB,cAA8Bpb,EAAGxJ,EAAjBsF,cAAmBrF,KAAKoiB,kBAAkBriB,GAAG,IAAiS4N,EAAE8R,EAA7RnW,EAAEvJ,EAAEkR,aAAazR,EAAEO,EAAE6kB,WAAWhlB,EAAEJ,EAAEqlB,mBAAmBnU,EAAEjP,EAAEqjB,2BAA2BtX,EAAEhO,EAAEulB,cAAc,mBAAmBzb,GAAGnB,EAAE3I,EAAEulB,cAAc,qBAAqBzb,GAAG7J,EAAED,EAAEulB,cAAc,qBAAqBzb,GAAGpB,OAAE,IAASzI,EAAEuO,EAAER,EAAE,GAAGrF,EAAE4F,EAAE,EAAE0O,OAAOC,iBAAiBb,EAAI9b,EAAEilB,aAA2BtlB,EAAEqO,EAAEkX,EAAAA,GAAI,EAAE,EAAEC,EAAInlB,EAAEolB,YAAYC,EAAAA,EAAAA,QAAY3Y,EAAEzM,KAAKykB,gBAAgBhY,EAAEuW,GAAGkC,EAAIzY,EAAEiY,QAAQxc,EAAE,IAAMmd,EAAE3U,EAAE+J,mBAAmB1J,EAAEnR,EAAE6M,GAAG,KAAI7G,EAAAA,EAAAA,GAAI2D,IAAI2b,GAAKG,EAAE/X,WAAW,CAAC,GAAGyD,EAAEpF,QAAQ3L,KAAKqL,MAAM0F,EAAEnD,WAAWyX,GAAGnd,EAAE,CAAC,IAAM3I,EAAEsc,EAAIyJ,sBAAsB7lB,GAAE,GAAI,IAAGmG,EAAAA,EAAAA,GAAIrG,GAAG,CAAC,IAASQ,EAAeR,EAAlBgmB,GAAQvmB,EAAUO,EAAbimB,GAAUhlB,EAAGjB,EAARkmB,KAAU9X,EAAE3O,EAAE,GAAGe,EAAE,GAAG0f,EAAEzgB,EAAE,GAAGe,EAAE,GAAG,IAAMV,EAAEwc,EAAI6J,YAAYllB,IAAGoF,EAAAA,EAAAA,GAAIvG,KAAKwc,EAAIxJ,KAAKtB,EAAE5H,EAAAA,EAAAA,OAAS3I,EAAEmlB,EAAAA,IAAGN,EAAEO,aAAa,SAAS7lB,EAAE,GAAGA,EAAE,GAAGf,EAAE,GAAGA,EAAE,IAAIqmB,EAAE/U,cAAc,eAAejR,GAAGgmB,EAAE9S,aAAa,YAAYoT,EAAAA,IAAK,CAAAN,EAAE9U,aAAa,YAAYpI,EAAI,MAAKnI,KAAKsV,OAAO,GAAGtH,EAAER,EAAE,GAAGxN,KAAKsV,OAAO,GAAGtH,EAAER,EAAE,GAAGxN,KAAKsV,OAAO,GAAGtH,EAAER,EAAE,GAAGxN,KAAKsV,OAAO,GAAGtH,EAAEqX,EAAEzU,cAAc,UAAU5Q,KAAKsV,QAAQ,GAAG+P,EAAE9U,aAAa,UAAU/Q,EAAEqmB,GAAG,GAAGX,EAAI,CAAC,IAAM3lB,GAAEumB,EAAAA,EAAAA,GAAIpkB,EAAE,GAAG2jB,EAAEzU,cAAc,OAAOrR,EAAI,CAAhjB,gBAA+jBP,GAA/jB,IAAgjB,2BAAiB,KAAPa,EAAO,QAAC,GAAGwlB,EAAE9U,aAAa,gBAAgB1Q,EAAEwiB,QAAQgD,EAAE7U,oBAAoB,YAAY3Q,EAAEgG,WAAWC,KAAKoC,EAAE,CAAC,IAAMnI,EAAEd,KAAKqa,IAALra,KAAA,IAAS,EAAIA,KAAKmS,MAAM9H,GAAGzJ,EAAEmR,IAAIE,OAAO,GAAGlS,EAAEU,EAAEG,EAAEoI,MAAMlI,EAAEwB,EAAEvC,GAAE+mB,EAAAA,EAAAA,IAAIpY,GAAGnN,EAAExB,GAAE+mB,EAAAA,EAAAA,IAAItG,GAAGzf,KAAKwkB,eAAe,GAAGjjB,EAAEvB,KAAKwkB,eAAe,GAAGhkB,EAAE6kB,EAAE7U,oBAAoB,mBAAmBxQ,KAAKwkB,eAAiB,CAAAzT,EAAE5L,mBAAmBC,EAAAA,EAAAA,MAAQvF,EAAEsH,WAAW,KAAK4J,EAAEnF,WAAWC,EAAAA,EAAAA,eAAmB,EAAE,EAAI,CAAl8B,+BAAm8B,MAAKtC,GAAK,G,+BAAA,SAAkBhK,GAAG,IAAGS,KAAKqL,KAAR,CAAoB,IAAcxL,EAAgBN,EAAxB0F,QAA0BjG,EAAFO,EAAdqlB,WAAoBC,mBAAmBtjB,EAAE,IAAIkhB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAIjiB,EAAE0K,EAAAA,EAAAA,aAAiBrL,EAAEsL,EAAAA,EAAAA,YAAgB5J,GAAGlC,EAAE,IAAIiM,EAAAA,EAAIzL,EAAEb,EAAEgnB,wBAAwBhnB,EAAEinB,gBAAgB,CAAC1a,SAAS/K,IAAIR,KAAKqL,KAAKhM,CAAnN,CAAsN,K,EAAx7DiK,CAAUjK,GAMV6mB,GAAAA,SAAAA,I,6BAAc,aAAa,6BAAC,eAASvhB,YAAgB8f,gBAAgB,CAACzB,IAAG,GAA9C,CAAmD,C,sCAAA,WAAW,G,sBAAA,SAAS3jB,EAAE0R,GAAG,IAActP,EAA+GpC,EAAvH4F,QAAuB7B,EAAgG/D,EAA7G4R,aAA6BzP,EAAgFnC,EAA9Fwa,cAAsBvQ,EAAwEjK,EAA9EmG,MAAkB9D,EAA4DrC,EAAtE8lB,UAAoBhd,EAAkD9I,EAA1DyN,QAAuBlN,EAAmCP,EAAhD2lB,aAA6BtU,EAAmBrR,EAAjCslB,cAA8B1a,EAAG5K,EAAjBgG,cAAmB,GAAI0L,EAAElG,MAAM,SAAA9K,GAAC,mCAAEA,EAAEomB,UAAU9lB,IAAIqQ,UAAlB,aAAE,EAAoB0V,wBAAtB,YAAb,CAAiE,IAAM3mB,EAAEJ,EAAEulB,WAAWhY,EAAEnN,EAAE4mB,eAAene,EAAEC,EAAE2c,2BAAmC/W,EAAEtO,EAAEslB,cAAc,mBAAmB3hB,GAAGmG,EAAE9J,EAAEslB,cAAc,0BAA0B3hB,GAAG5D,EAAEkC,IAAI0jB,EAAAA,EAAAA,QAAYjc,EAAEnJ,KAAKykB,gBAAgBtb,EAAE6Z,GAAGxjB,EAAE,IAAMiN,EAAEvE,EAAEuS,mBAAmBhZ,EAAEmL,EAAEzD,GAAG,GAAI3J,KAAGoG,EAAAA,EAAAA,GAAIqE,IAAKwC,EAAEa,WAAlB,CAA6C7L,EAAEmM,WAAWnB,GAAGA,EAAE+D,oBAAoB,gBAAgBjH,IAAI+c,EAAAA,EAAAA,SAAahd,EAAE2M,YAAY3M,EAAEtE,iBAAiByH,EAAE6D,cAAc,sBAAsBvC,GAAGtB,EAAE8D,aAAa,UAAU9Q,EAAEomB,GAAGpZ,EAAE8D,aAAa,sBAA1Z,KAAqb,IAAI9C,GAAG,EAAE,GAAGjO,EAAE,CAAC,IAAMO,GAAE+lB,EAAAA,EAAAA,GAAIpV,EAAE,GAAGjE,EAAEmE,cAAc,OAAO7Q,EAAI,CAA5vB,gBAA2wBgR,GAA3wB,IAA4vB,2BAAiB,KAAPhR,EAAO,QAAC,GAAIA,EAAEomB,UAAU/lB,IAAIsQ,GAApB,CAAgC3Q,EAAEiR,IAAIE,QAAQzD,IAAIA,EAAE1N,EAAEiR,IAAIE,MAAMtE,EAAE2Z,gBAAgB9Z,EAAErJ,EAAE3D,EAAEgO,EAAE7N,IAAI,IAAMC,EAAEE,EAAEomB,UAAU9lB,IAAIqQ,GAAG,GAAI7Q,EAAEumB,iBAAN,CAAgCvmB,EAAE2mB,oBAAoB/kB,GAAG,IAAMF,EAAE1B,EAAE4mB,yBAAwBlhB,EAAAA,EAAAA,GAAIhE,KAAKE,EAAEkK,QAAQpK,GAAGkL,EAAE+D,oBAAoB,YAAYzQ,EAAE8F,WAAWC,KAAKtE,IAAIzB,EAAEiR,IAAIE,MAAMzP,EAAE0D,mBAAmBC,EAAAA,EAAAA,MAAQrF,EAAEoH,WAAW,KAAK1F,EAAE0D,mBAAmBC,EAAAA,EAAAA,QAAU,IAAI,KAAK3D,EAAEqP,aAAajF,EAAAA,EAAAA,UAAchM,EAAEumB,iBAAiB3a,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkBzb,EAAE6mB,kBAAkB3mB,EAAE6iB,eAAe/iB,EAAEumB,iBAAiB,EAAlY,CAAzH,CAA+f,CAA5yC,+BAAwd,MAAYnc,GAApS,CAA6mC,K,EAAn5Cic,CAAY7mB,GAMZ0R,GAAE,EAAE,MAAY4V,GAAAA,SAAAA,I,6BAAc,aAAa,6BAAC,eAAShiB,YAAgBiiB,oBAAoB,CAAC5D,IAAG,EAAG0B,SAAQ,GAAI,EAAKmC,uBAAuB,CAAC7D,IAAG,GAAjG,CAAsG,C,sCAAA,WAAW,G,sBAAA,SAASzjB,EAAEQ,GAAG,IAAD,EAAoBwB,EAA2DhC,EAAxE0R,aAAyBpR,EAA+CN,EAAzD4lB,UAAuB7lB,EAAkCC,EAA7CuQ,WAA0BtP,EAAmBjB,EAAhCylB,aAA6BtkB,EAAGnB,EAAjBolB,cAAuBvhB,GAAE,EAAvF,UAAyGrD,GAAzG,IAA0F,2BAAiB,KAAPV,EAAO,WAAGA,EAAE8mB,UAAU/lB,IAAIM,GAAG,CAAC,IAAMnB,EAAEF,EAAE8mB,UAAU9lB,IAAIK,GAAG,GAAGnB,EAAEunB,eAAe,GAAGvnB,EAAEwnB,kBAAkB,EAAE,CAAC3jB,GAAE,EAAG,KAAM,CAAC,EAAvN,+BAAuN,GAAIA,EAAJ,CAAa,IAA+F1B,EAAzFF,EAAEjC,EAAEqlB,WAAWtb,EAAE9H,EAAEwlB,iBAAiB,gBAAgBjW,OAAE,IAASzH,EAAE7H,EAAEsP,GAAGzH,EAAE2d,aAAmB,GAAGlW,IAAItP,EAAE,CAAC,IAAMlC,EAAE+J,EAAE4d,SAAS3lB,GAAGG,EAAElB,EAAE8kB,sBAAsB/lB,GAAE,EAAK,KAAM4I,GAAG4I,GAAGvP,EAAEujB,cAAc,iBAAiBxjB,GAAO3B,GAAE,EAAG2J,EAAE,EAAE,IAAIwH,EAAE,CAAC,IAAMxR,EAAEiC,EAAEwlB,iBAAiB,cAAcjnB,EAAEyB,EAAEwlB,iBAAiB,gBAAgB,IAAG,OAACznB,QAAD,IAACA,IAAAA,EAAG0nB,gBAAc,OAAClnB,QAAD,IAACA,IAAAA,EAAGknB,cAAa,CAAC,IAAM1nB,EAAEiC,EAAEujB,cAAc,aAAaxjB,IAAGgI,EAAE/H,EAAEujB,cAAc,eAAexjB,GAAGhC,EAAE,KAAM,IAAIK,GAAE,EAAK,CAAC,KAAGA,GAAG,WAAWN,EAAjB,CAA0B,IAAI2K,EAAEpK,IAAIulB,EAAAA,EAAAA,UAAcnb,GAAE6b,EAAAA,EAAAA,GAAIplB,EAAE,IAAI,IAAMgQ,EAAElP,EAAEujB,cAAc,iBAAiBxjB,GAAG9B,EAAE+B,EAAEujB,cAAc,wBAAwBxjB,IAAI3B,GAAG,gBAAgBN,IAAIU,KAAKmnB,UAAU5nB,EAAEmB,EAAEc,EAAEzB,EAAE2Q,EAAEjR,EAAEsR,EAAErP,EAAED,EAAEwI,GAAG,IAAMvK,GAAG8B,EAAE4lB,2BAA2B5lB,EAAE6lB,sBAAsB9d,EAAE,EAAEpB,GAAG,WAAW7I,IAAII,GAAGM,KAAKsnB,aAAa/nB,EAAEmB,EAAEc,EAAEzB,EAAE2Q,EAAEjR,EAAEwK,EAA/S,CAArd,CAAwwB,G,uBAAA,SAAUjL,EAAEwB,EAAEiB,EAAEC,EAAEyG,EAAEvI,EAAE2J,EAAEU,EAAEyG,EAAEjR,GAAG,IAAG8J,GAAImH,KAAGnL,EAAAA,EAAAA,GAAI0E,GAAd,CAAwB,IAAcvK,EAA8FV,EAAtGiG,QAAuBigB,EAA+ElmB,EAA5FiS,aAAuBrE,EAAqE5N,EAA3EwG,MAAkBuI,EAAyD/O,EAAnEmmB,UAAoBjd,EAA+ClJ,EAAvD8N,QAAqBtN,EAAkCR,EAA7CwI,WAA0BqQ,EAAmB7Y,EAAhCgmB,aAA6BvX,EAAGzO,EAAjBqG,cAAmBoH,EAAEhL,EAAE8lB,aAAapoB,EAAE+I,EAAE4c,2BAA2BnX,EAAEnO,EAAEylB,EAAAA,GAAI,EAAE,EAAEpJ,EAAI9N,IAAIqX,EAAAA,EAAAA,QAAY3F,EAAEzf,KAAK4mB,oBAAoBnH,EAAEuD,GAAGnH,EAAI4D,EAAEiF,QAAQnb,EAAE,IAAMqO,EAAIzY,EAAEsb,mBAAmB/a,EAAE+M,EAAEgT,GAAG,KAAG7Z,EAAAA,EAAAA,GAAI6H,IAAKoO,GAAMjE,EAAItK,WAAtB,CAAiD,GAAG5N,EAAEkO,WAAWgK,IAAKhS,EAAAA,EAAAA,GAAIqE,GAAG,CAAM,IAAM1K,EAAG0K,EAARwb,KAAUlkB,EAAEsW,EAAE6N,YAAYnmB,IAAGqG,EAAAA,EAAAA,GAAIrE,KAAKsW,EAAExF,KAAK3S,EAAEyJ,EAAAA,EAAAA,OAAS5J,EAAEomB,EAAAA,IAAG/N,EAAItH,cAAc,eAAe/O,GAAGqW,EAAIrF,aAAa,YAAYoT,EAAAA,IAAK,CAAA/N,EAAIpH,oBAAoB,gBAAgB5Q,IAAI0mB,EAAAA,EAAAA,SAAa1Z,EAAEqJ,YAAYrJ,EAAE5H,iBAAiB4S,EAAItH,cAAc,oBAAoBnI,GAAGyP,EAAIrH,aAAa,UAAU9O,EAAEokB,EAAE9U,IAAG8K,GAAKjE,EAAIhH,cAAc,OAAOnR,GAAG,IAA1sB,EAA8sB+e,GAAG,EAAjtB,UAAkuB9c,GAAluB,IAAmtB,2BAAiB,KAAPH,EAAO,QAAC,GAAIA,EAAE4kB,UAAU/lB,IAAII,GAApB,CAAgCe,EAAEyP,IAAIE,QAAQsN,IAAIA,EAAEjd,EAAEyP,IAAIE,MAAMzE,EAAE8Z,gBAAgB3O,EAAIsN,EAAIzjB,EAAE+c,EAAE3G,IAAI,IAAMvY,EAAEiC,EAAE4kB,UAAU9lB,IAAIG,GAAG,GAAIlB,EAAEwnB,eAAN,CAA8BxnB,EAAEknB,oBAAoB9mB,GAAG,IAAML,EAAEC,EAAEkoB,sBAAsB,KAAIjiB,EAAAA,EAAAA,GAAIlG,GAAG,CAAC,GAAGK,EAAEiM,QAAQtM,GAAGuY,EAAIpH,oBAAoB,YAAYjP,EAAEsE,WAAWC,KAAKpG,EAAEyF,mBAAmBC,EAAAA,EAAAA,MAAQ7D,EAAE4F,WAAW,KAAKoC,EAAE,CAAC,IAAMhK,EAAEN,KAAKqa,IAALra,KAAA,IAAS,EAAIA,KAAKmS,MAAM8T,GAAK3jB,EAAEyP,IAAIE,OAAO,GAAGnR,EAAEwB,EAAE8gB,QAAQ1U,EAAEpM,EAAE0G,MAAM1I,GAAGqY,EAAIrH,aAAa,kBAAkBxQ,EAAI,IAAG2Q,EAAE,CAAC,IAAMnR,EAAED,EAAEmoB,WAAW,IAAIloB,EAAE,SAA5B,gBAAsDA,GAAtD,IAAqC,2BAAmB,0BAATgC,EAAS,KAAPjC,EAAO,KAAOC,EAAEsY,EAAE6N,YAAYnkB,IAAGqE,EAAAA,EAAAA,GAAIrG,KAAKsY,EAAExF,KAAK3S,EAAEyJ,EAAAA,EAAAA,OAAS5H,EAAEokB,EAAAA,IAAG/N,EAAItH,cAAc,eAAe/Q,GAAGqY,EAAIrF,aAAa,YAAYoT,EAAAA,IAAGjmB,EAAEoR,aAAajF,EAAAA,EAAAA,UAAcvM,EAAE,GAAGmM,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkBhc,EAAE,IAAM,CAA7Q,+BAA8Q,MAAKI,EAAEoR,aAAajF,EAAAA,EAAAA,UAAcvM,EAAEwnB,eAAerb,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkBhc,EAAEooB,gBAAgBnmB,EAAEqhB,eAAetjB,EAAEwnB,eAAe,CAAG,CAA7tB,CAA3H,CAAy1B,CAA7lD,+BAA8U,MAAYrZ,GAAlU,CAAskD,G,0BAAA,SAAa5N,EAAEP,EAAEN,EAAEwB,EAAEE,EAAEe,EAAEC,GAAG,IAAcyG,EAA8FtI,EAAtGoF,QAAuBrF,EAA+EC,EAA5FoR,aAAqB1H,EAAuE1J,EAA7E2F,MAAkByE,EAA2DpK,EAArEslB,UAAoBzU,EAAiD7Q,EAAzDiN,QAAqBrN,EAAoCI,EAA/C2H,WAA0B9H,EAAqBG,EAAlCmlB,aAA6BE,EAAKrlB,EAAnBwF,cAAqBuH,EAAE5N,EAAE2oB,gBAAgB5Z,EAAE2C,EAAEoU,2BAA2B5c,EAAE,IAAIzI,EAAED,EAAEyK,IAAImb,EAAAA,EAAAA,QAAYvN,EAAE7X,KAAK6mB,uBAAuBhP,EAAEmL,GAAGxjB,EAAE,IAAMiO,EAAEM,EAAE0M,mBAAmBtS,EAAEyE,EAAEiL,GAAG,KAAGjS,EAAAA,EAAAA,GAAIsf,IAAO1lB,GAAIiO,EAAEH,WAApB,CAAiDnF,EAAEyF,WAAWH,GAAGA,EAAE+C,oBAAoB,gBAAgB/O,IAAI6kB,EAAAA,EAAAA,SAAa/c,EAAE0M,YAAY1M,EAAEvE,iBAAiByI,EAAE6C,cAAc,oBAAoB5P,GAAG+M,EAAE8C,aAAa,UAAUvR,EAAE6mB,EAAE9U,IAAGtD,EAAE8C,aAAa,kBAAkBrI,GAAG1I,GAAGiO,EAAEmD,cAAc,OAAOlP,GAAG,IAAtiB,EAA0iB+K,GAAG,EAA7iB,UAA8jBjM,GAA9jB,IAA+iB,2BAAiB,KAAPT,EAAO,QAAC,GAAIA,EAAEomB,UAAU/lB,IAAId,GAApB,CAAgCS,EAAEiR,IAAIE,QAAQzE,IAAIA,EAAE1M,EAAEiR,IAAIE,MAAMtE,EAAE2Z,gBAAgB9Y,EAAE7N,EAAEZ,EAAEyN,EAAE/M,IAAI,IAAM6B,EAAExB,EAAEomB,UAAU9lB,IAAIf,GAAG,GAAGiC,EAAEilB,oBAAoBre,GAAI5G,EAAEwlB,kBAA/B,CAA0D,IAAMlnB,EAAE0B,EAAEqmB,0BAAyBriB,EAAAA,EAAAA,GAAI1F,KAAKsI,EAAEwD,QAAQ9L,GAAG4N,EAAE+C,oBAAoB,YAAYzQ,EAAE8F,WAAWC,KAAKqC,EAAEhD,mBAAmBC,EAAAA,EAAAA,MAAQrF,EAAEoH,WAAW,KAAKgB,EAAE2I,aAAajF,EAAAA,EAAAA,UAActK,EAAEwlB,kBAAkBtb,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkB/Z,EAAEsmB,mBAAmB9nB,EAAE6iB,eAAerhB,EAAEwlB,kBAAkB,EAArT,CAAnJ,CAA4c,CAA5iC,+BAAoS,MAAY7B,GAA6vB,K,EAAx0HyB,CAAYtnB,GAM5BmC,GAAAA,SAAAA,I,6BAAY,aAAa,6BAAC,eAASmD,YAAgB8f,gBAAgB,CAACzB,IAAG,EAAG0B,SAAQ,EAAGoD,KAAI,GAAhE,CAAqE,C,sCAAA,WAAW,G,sBAAA,SAAS9oB,EAAEwC,GAAG,IAAcuP,EAA4G/R,EAApHiG,QAAuBqE,EAA6FtK,EAA1GiS,aAAqBvP,EAAqF1C,EAA3FwG,MAAkB5F,EAAyEZ,EAAnFmmB,UAAoBhd,EAA+DnJ,EAAvE8N,QAAqB7C,EAAkDjL,EAA7DwI,WAA0B/H,EAAmCT,EAAhDgmB,aAA6Bzb,EAAmBvK,EAAjC2lB,cAA8BjU,EAAG1R,EAAjBqG,cAAmB,GAAI7D,EAAEqJ,MAAM,SAAA9K,GAAC,mCAAEA,EAAEomB,UAAU9lB,IAAIkJ,UAAlB,aAAE,EAAoBwe,sBAAtB,YAAb,CAA+D,IAAsO5oB,EAAEsN,EAAlOsB,EAAE/O,EAAE4lB,WAAWM,EAAInX,EAAEia,aAAatoB,EAAEyI,EAAE2c,2BAA2B5c,EAAE6F,EAAEgX,cAAc,iBAAiBzb,GAAGsD,EAAEmB,EAAEgX,cAAc,wBAAwBzb,GAAGmE,EAAEM,EAAEiZ,iBAAiB,gBAAgBnP,OAAE,IAASpK,EAAEoO,EAAIhE,GAAGpK,EAAEwZ,aAAqB,GAAGpP,IAAIgE,EAAI,CAAC,IAAM9b,EAAE0N,EAAEyZ,SAAS5d,GAAGnK,EAAEM,EAAE6lB,sBAAsBvlB,EAAI,KAAIye,GAAE,EAAG,IAAI3G,EAAE,CAAC,IAAM9X,EAAEgO,EAAEiZ,iBAAiB,kBAAkB,GAAgBxI,GAAb/R,OAAE,IAAS1M,IAAOA,EAAEknB,aAAaxa,IAAI+R,EAAE,CAAC,IAAMjf,EAAEQ,EAAEmnB,SAAS5d,GAAG/H,EAAEwM,EAAEka,WAAW1oB,EAAEwO,EAAEma,eAAe,WAAW5e,IAAInK,EAAEM,EAAE6lB,sBAAsB/jB,EAAI,CAAC,KAAM/B,EAAE,EAAEyK,EAAEwV,EAAE7f,IAAIwlB,EAAAA,EAAAA,QAAYpX,EAAEhO,KAAKykB,gBAAgBzW,EAAEgV,GAAGvD,EAAEzR,EAAE0W,QAAQ7M,EAAE7J,EAAE8Z,IAAIrb,EAAE,IAAMkB,EAAEjO,EAAE+a,mBAAmB1J,EAAEmU,EAAIlX,GAAG,KAAGpI,EAAAA,EAAAA,GAAI8K,IAAK+O,GAAI9R,EAAEL,WAAlB,CAA6C,GAAGyD,EAAEnD,WAAWD,GAAGA,EAAE6C,oBAAoB,oBAAoB9O,EAAEsD,iBAAiB2I,EAAE6C,oBAAoB,gBAAgB5D,IAAI0Z,EAAAA,EAAAA,SAAa5kB,EAAEuU,YAAYvU,EAAEsD,iBAAiB2I,EAAE2C,cAAc,oBAAoBpI,GAAGyF,EAAE4C,aAAa,UAAUxC,EAAE8X,GAAGlY,EAAE4C,aAAa,iBAAiB/Q,GAAGigB,EAAE,CAAC,IAAM1f,GAAE+lB,EAAAA,EAAAA,GAAIvc,EAAE,GAAGoE,EAAEiD,cAAc,OAAO7Q,EAAI,IAAGZ,IAAGyG,EAAAA,EAAAA,GAAIzG,GAAG,CAAC,IAAWI,EAAGJ,EAARsmB,KAAUlkB,EAAE9B,EAAEimB,YAAYnmB,IAAGqG,EAAAA,EAAAA,GAAIrE,KAAK9B,EAAE4S,KAAKtB,EAAE5H,EAAAA,EAAAA,OAAS5J,EAAEomB,EAAAA,IAAGhY,EAAE2C,cAAc,eAAe/O,GAAGoM,EAAE4E,aAAa,YAAYoT,EAAAA,IAAK,KAAzyC,EAA6yCnY,GAAG,EAAhzC,UAAi0ChM,GAAj0C,IAAkzC,2BAAiB,KAAPD,EAAO,QAAC,GAAIA,EAAE4kB,UAAU/lB,IAAImJ,GAApB,CAAgChI,EAAEyP,IAAIE,QAAQ1D,IAAIA,EAAEjM,EAAEyP,IAAIE,MAAMgU,EAAIqB,gBAAgB5Y,EAAErE,EAAEyE,EAAEP,EAAE/N,IAAI,IAAMI,EAAE,WAAIyJ,EAAEkE,GAAGvD,EAAE0D,EAAE4C,aAAa,eAAe1Q,GAAG,IAAMR,EAAEkC,EAAE4kB,UAAU9lB,IAAIkJ,GAAG,GAAIlK,EAAE0oB,eAAN,CAA8B1oB,EAAEmnB,oBAAoBzV,GAAG,IAAM/R,EAAEK,EAAE8oB,sBAAsB,KAAI5iB,EAAAA,EAAAA,GAAIvG,GAAG,CAAC,GAAG+R,EAAEpF,QAAQ3M,GAAG2O,EAAE6C,oBAAoB,YAAYjP,EAAEsE,WAAWC,KAAKiL,EAAE5L,mBAAmBC,EAAAA,EAAAA,MAAQ7D,EAAE4F,WAAW,KAAK0U,GAAK2C,EAAE,CAAC,IAAMjf,EAAEF,EAAEooB,WAAW,IAAIloB,EAAE,SAA5B,gBAAsDA,GAAtD,IAAqC,2BAAmB,0BAATgC,EAAS,KAAP1B,EAAO,KAAON,GAAEE,EAAEimB,YAAYnkB,IAAGqE,EAAAA,EAAAA,GAAIrG,MAAKE,EAAE4S,KAAKtB,EAAE5H,EAAAA,EAAAA,OAAS5H,EAAEokB,EAAAA,IAAGhY,EAAE2C,cAAc,eAAe/Q,IAAGoO,EAAE4E,aAAa,YAAYoT,EAAAA,IAAG5U,EAAED,aAAajF,EAAAA,EAAAA,UAAchM,EAAE,GAAG4L,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkBzb,EAAE,IAAM,CAAzQ,iCAA0Q,MAAKkR,EAAED,aAAajF,EAAAA,EAAAA,UAAcxM,EAAE0oB,eAAetc,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkBjc,EAAE+oB,gBAAgB7mB,EAAEqhB,eAAevjB,EAAE0oB,eAAe,CAAG,CAAjmB,CAA7K,CAA+wB,CAAlnE,iCAAu0B,MAAYrX,GAAxpB,CAAw7D,K,EAAzuElP,CAAUnC,GAMMI,GAAAA,SAAAA,I,6BAAY,aAAa,6BAAC,eAASkF,YAAgB0jB,oBAAoB,CAACrF,IAAG,EAAG8E,KAAI,GAAI,EAAKQ,mBAAmB,CAACtF,IAAG,GAAI,EAAKuF,qBAAoBC,EAAAA,EAAAA,KAAtH,CAA6H,C,sCAAA,WAAW,G,sBAAA,SAASzoB,EAAER,GAAG,IAAwDiB,EAAxCe,EAAmBxB,EAA7BolB,UAA0B9lB,EAAGU,EAAjB4kB,cAAmB9kB,EAAEE,EAAE6kB,WAAiBrjB,IAAI6jB,EAAAA,EAAAA,UAAc5kB,GAAEslB,EAAAA,EAAAA,GAAIzmB,EAAE,IAAIW,KAAKyoB,WAAW1oB,EAAEF,EAAEN,EAAEiB,GAAGR,KAAK0oB,UAAU3oB,EAAEF,EAAEN,EAAEiB,EAAI,G,wBAAA,SAAWe,EAAElC,EAAE+D,EAAE1B,GAAG,IAAmKuI,EAApK,EAAe8G,EAA+FxP,EAAvG0D,QAAuBqE,EAAgF/H,EAA7F0P,aAAyBrR,EAAoE2B,EAA9E4jB,UAAoBhd,EAA0D5G,EAAlEuL,QAAuBvD,EAA2ChI,EAAxDyjB,aAAqBxlB,EAAmC+B,EAAzCiE,MAAsB/F,EAAmB8B,EAAjCojB,cAA8BjlB,EAAG6B,EAAjB8D,cAAmBuH,EAAEvN,EAAEspB,aAAa5a,EAAE5F,EAAE2c,2BAAiC5c,GAAE,EAAxK,UAA0L9E,GAA1L,IAA2K,2BAAiB,KAAPrD,EAAO,WAAGA,EAAEomB,UAAU/lB,IAAIX,KAAKwK,EAAElK,EAAEomB,UAAU9lB,IAAIZ,IAAKmpB,uBAAuB1S,KAAK,EAAG,CAAChO,GAAE,EAAG,KAAM,EAAtR,+BAAsR,GAAIA,EAAJ,CAAa,IAAMwI,EAAErR,EAAE0lB,cAAc,iBAAiBzb,GAAGlE,EAAE/F,EAAE0lB,cAAc,wBAAwBzb,GAAOmE,EAAEpO,EAAE6oB,eAAe,0BAA0B5e,GAAGmE,IAAIob,EAAAA,EAAAA,OAAWpb,EAAEpO,EAAE6oB,eAAe,mBAAmB5e,KAAKwf,EAAAA,EAAAA,MAAUD,EAAAA,EAAAA,SAAaA,EAAAA,EAAAA,KAAS,IAAMhR,EAAEpK,IAAIob,EAAAA,EAAAA,IAAQrK,EAAEnf,EAAE6oB,eAAe,oBAAoB5e,IAAIuO,EAAEpL,EAAExC,EAAE8e,UAAUpb,EAAE/N,IAAIwlB,EAAAA,EAAAA,QAAY3F,EAAEzf,KAAKqoB,oBAAoB5I,EAAEuD,GAAGrV,EAAE8R,EAAEqI,IAAIrb,EAAE,IAAMtD,EAAE4E,EAAE0M,mBAAmB1J,EAAEnE,EAAE6S,GAAG,KAAG7Z,EAAAA,EAAAA,GAAIlG,IAAKiO,GAAIxE,EAAEmE,WAAlB,CAA6CyD,EAAEnD,WAAWzE,GAAGA,EAAEqH,oBAAoB,oBAAoB/C,IAAIob,EAAAA,EAAAA,IAAQrpB,EAAEwF,gBAAgBxF,EAAEyW,aAAa9M,EAAEqH,oBAAoB,gBAAgBpL,IAAIkhB,EAAAA,EAAAA,SAAa9mB,EAAEyW,YAAYzW,EAAEwF,iBAAiBmE,EAAEmH,cAAc,oBAAoBI,GAAGvH,EAAEoH,aAAa,UAAUlR,EAAEwmB,GAAG1c,EAAEoH,aAAa,iBAAgByY,EAAAA,EAAAA,GAAIxpB,EAAEkI,WAAWyB,EAAEoH,aAAa,gBAAgBiO,EAAE,EAAE,GAAGrV,EAAEoH,aAAa,UAAU,GAAGjH,GAAGH,EAAEoJ,aAAa,YAAYoT,EAAAA,IAAGxc,EAAEoH,aAAa,iBAAiB0Y,EAAAA,EAAI,KAAKtb,GAAGxE,EAAEyH,cAAc,OAAOlP,GAAG,IAAnsC,EAAusC8Y,GAAG,EAA1sC,UAA2tCpX,GAA3tC,IAA4sC,2BAAiB,KAAPrD,EAAO,QAAC,GAAIA,EAAEomB,UAAU/lB,IAAIX,KAAeM,EAAEiR,IAAIE,QAAQsJ,IAAIA,EAAEza,EAAEiR,IAAIE,MAAMtE,EAAE2Z,gBAAgBpd,EAAEG,EAAEjK,EAAEmb,EAAEjR,IAAyB,KAArBU,EAAElK,EAAEomB,UAAU9lB,IAAIZ,IAASmpB,uBAAuB1S,MAAnH,CAAiIjM,EAAEuc,oBAAoBzV,GAAG9G,EAAEif,oBAAoB,IAAMrpB,EAAEoK,EAAEkf,sBAAsB,KAAI5jB,EAAAA,EAAAA,GAAI1F,GAAG,CAACkR,EAAEpF,QAAQ9L,GAAGsJ,EAAEqH,oBAAoB,YAAYzQ,EAAE8F,WAAWC,KAAKqD,EAAEoH,aAAa,UAAU6Y,YAAYC,MAAMpf,EAAEqf,mBAAmB,KAAlI,gBAAwJrf,EAAE2e,wBAA1J,IAAuI,2BAA0C,0BAAhCrpB,EAAgC,KAA9BF,EAA8B,KAAAW,KAAKupB,iBAAiBhoB,EAAE4H,EAAE9J,EAAEE,EAAEQ,EAAG,CAAlN,+BAAmN,CAA9S,CAA+S,CAA7qD,+BAAstB,MAAYL,GAAhc,CAA44C,G,8BAAA,SAAiBK,EAAER,EAAEgC,EAAElC,EAAEQ,GAAG,IAAcW,EAAkBT,EAA1BkF,QAAuB3F,EAAGS,EAAhBilB,aAAkBhlB,KAAKuoB,oBAAoB,GAAGjpB,EAAEkqB,SAASnqB,GAAG,EAAEW,KAAKuoB,oBAAoB,GAAGjpB,EAAEmqB,UAAUpqB,GAAG,EAAEE,EAAE+Q,cAAc,eAAetQ,KAAKuoB,qBAAqBjpB,EAAE+S,KAAK7R,EAAE2I,EAAAA,EAAAA,OAAS9J,EAAEsmB,EAAAA,IAAGnlB,EAAEmM,uBAAsB,GAAInM,EAAE2E,mBAAmBC,EAAAA,EAAAA,QAAU,IAAI,KAAK5E,EAAEkM,oBAAoB,GAAGlM,EAAEsQ,aAAajF,EAAAA,EAAAA,UAActK,EAAE,GAAGkK,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkB/Z,EAAE,IAAI1B,EAAE+iB,eAAerhB,EAAE,GAAG,CAAG,G,uBAAA,SAAUA,EAAEb,EAAEgB,EAAEqP,GAAE,IAAiM8G,EAAjM,SAAevO,EAA0H/H,EAAlI0D,QAAuBkD,EAA2G5G,EAAxH0P,aAAyB1H,EAA+FhI,EAAzG4jB,UAAwB1lB,EAAiF8B,EAA7FmoB,YAAsBhqB,EAAuE6B,EAA/EuL,QAAqBF,EAA0DrL,EAArEiG,WAA0BuG,EAA2CxM,EAAxDyjB,aAAqB/a,EAAmC1I,EAAzCiE,MAAsB0C,EAAmB3G,EAAjCojB,cAA8BjU,EAAGnP,EAAjB8D,cAAmB6f,EAAIxkB,EAAEipB,aAAalc,EAAE/N,EAAEolB,2BAAiCtG,GAAE,EAArM,UAAuN9c,GAAvN,IAAwM,2BAAiB,KAAP3B,EAAO,WAAGA,EAAEomB,UAAU/lB,IAAI8H,KAAK2P,EAAE9X,EAAEomB,UAAU9lB,IAAI6H,IAAK0hB,wBAAwB1T,KAAK,EAAG,CAACsI,GAAE,EAAG,KAAM,EAApT,+BAAoT,GAAIA,EAAJ,CAAa,IAAM/R,EAAE/L,EAAEsmB,iBAAiB,gBAAgB,IAAGva,GAAIA,EAAEwa,cAAc,IAAIxa,EAAEya,SAAS/e,GAAtC,CAAgD,IAAMwF,EAAEjN,EAAEsmB,iBAAiB,cAAcvH,GAAG9R,GAAGA,EAAEsZ,cAActZ,EAAEuZ,SAAS/e,GAAG,GAAG,EAAEgB,EAAEzI,EAAEsmB,iBAAiB,mBAAmBxM,EAAE9Z,EAAEsmB,iBAAiB,mBAAmB7nB,IAAIgK,GAAGA,EAAE8d,cAAc9d,EAAE+d,SAAS/e,GAAG,MAAMqS,GAAGA,EAAEyM,cAAczM,EAAE0M,SAAS/e,GAAG,GAAG,GAAG,GAAIsX,GAAItgB,EAAR,CAAiB,IAAiB0mB,EAAEnlB,EAAEwnB,eAAe,0BAA0B/f,GAAG0d,IAAIgD,EAAAA,EAAAA,OAAWhD,EAAEnlB,EAAEwnB,eAAe,mBAAmB/f,KAAK2gB,EAAAA,EAAAA,MAAUD,EAAAA,EAAAA,SAAaA,EAAAA,EAAAA,KAAS,IAAMxD,EAAEQ,IAAIgD,EAAAA,EAAAA,IAAQ7a,EAAEtN,EAAEwnB,eAAe,oBAAoB/f,IAAIkd,EAAErN,EAAEzO,IAAI6b,EAAAA,EAAAA,QAAYyE,EAAE,GAAxO,EAA6Ojd,EAAE5M,KAAK8pB,oBAAoB9pB,KAAK8pB,mBAAkBrgB,EAAAA,EAAAA,GAAIhK,EAAEwI,MAAM,EAAExI,EAAE6H,OAAO,IAAI,IAAMmE,EAAE/K,EAAEqkB,cAAc,iBAAiB5c,GAAG2X,EAAEpf,EAAEqkB,cAAc,wBAAwB5c,GAAGwP,EAAE3X,KAAKsoB,mBAAmB3Q,EAAEqL,GAAGhL,EAAE,IAAM+R,EAAEtc,EAAEgN,mBAAmBnR,EAAE4b,EAAIvN,GAAG,KAAG/R,EAAAA,EAAAA,GAAI8K,IAAKsH,GAAI+R,EAAEzc,WAAlB,CAA6ChE,EAAEsE,WAAWmc,GAAGA,EAAEvZ,oBAAoB,oBAAoBqV,IAAIgD,EAAAA,EAAAA,IAAQ5e,EAAEjF,gBAAgBiF,EAAEgM,aAAa8T,EAAEvZ,oBAAoB,gBAAgBsP,IAAIwG,EAAAA,EAAAA,SAAarc,EAAEgM,YAAYhM,EAAEjF,iBAAiB+kB,EAAEzZ,cAAc,oBAAoB7E,GAAGse,EAAExZ,aAAa,UAAU7P,EAAEmlB,EAA73H,kBAAk4HkE,EAAEzZ,cAAc,eAAetQ,KAAK8pB,mBAAmBC,EAAExZ,aAAa,iBAAgByY,EAAAA,EAAAA,GAAI/e,EAAEvC,WAAWqiB,EAAExZ,aAAa,gBAAgBvC,EAAE,EAAE,GAAG+b,EAAExZ,aAAa,UAAU,GAAGpI,GAAG4hB,EAAExX,aAAa,YAAYyX,EAAAA,IAAGD,EAAExZ,aAAa,sBAAsBsZ,GAAGE,EAAExZ,aAAa,iBAAiB0Y,EAAAA,EAAI,KAAKjR,GAAG+R,EAAEnZ,cAAc,OAAOG,GAAG,IAA9uD,EAAkvDuN,GAAG,EAArvD,UAAswD5c,GAAtwD,yBAAiwD3B,EAAjwD,QAAywD,IAAIA,EAAEomB,UAAU/lB,IAAI8H,GAAG,iBAAS,GAAGnI,EAAEiR,IAAIE,QAAQoN,IAAIA,EAAEve,EAAEiR,IAAIE,MAAMgU,EAAIqB,gBAAgBwD,EAAE5hB,EAAEzH,EAAE4d,EAAEvQ,IAAyB,KAArB8J,EAAE9X,EAAEomB,UAAU9lB,IAAI6H,IAAS0hB,wBAAwB1T,KAAK,iBAAS2B,EAAE2O,oBAAoBld,GAAGuO,EAAEqR,oBAAoB,IAAM3nB,EAAEsW,EAAEoS,sBAAsB,IAAG1kB,EAAAA,EAAAA,GAAIhE,GAAG,iBAAS+H,EAAEqC,QAAQpK,GAAGwoB,EAAEvZ,oBAAoB,YAAYzQ,EAAE8F,WAAWC,KAAKwD,EAAEqD,uBAAsB,GAAIrD,EAAEnE,mBAAmBC,EAAAA,EAAAA,QAAU,IAAI,KAAKkE,EAAEoD,oBAAoB,GAAG,IAAMrN,GAAG+pB,YAAYC,MAAMxR,EAAEyR,mBAAmB,IAAIS,EAAExZ,aAAa,SAASlR,GAAGwY,EAAE+R,wBAAwB5oB,SAAS,SAACzB,EAAEgC,GAAK,EAAK2oB,kBAAkB5gB,EAAE/J,EAAEgC,EAAE9B,EAAEsqB,EAAE5qB,EAAEsgB,EAAE1f,EAAI,GAAh1E,EAAuvD,2BAAiB,GAAxwD,+BAAgqC,MAAY2Q,GAA5gB,CAArQ,CAA3F,CAAqhE,G,+BAAA,SAAkB3Q,EAAER,EAAEgC,EAAElC,EAAEQ,EAAEW,EAAElB,EAAEN,GAAGK,EAAEgT,KAAKtS,EAAEoJ,EAAAA,EAAAA,OAAS5H,EAAEyoB,EAAAA,IAAGxpB,IAAIX,EAAE0Q,aAAa,SAAS,GAAGxQ,EAAE+Q,aAAajF,EAAAA,EAAAA,UAActM,EAAE,GAAGkM,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkB/b,EAAE,IAAIP,EAAE4jB,eAAerjB,EAAE,GAAG,GAAGD,IAAIO,EAAE0Q,aAAa,SAAS,GAAGxQ,EAAE+Q,aAAajF,EAAAA,EAAAA,UAActM,EAAE,GAAGkM,EAAAA,EAAAA,aAAe4P,YAAYC,kBAAkB/b,EAAE,IAAIP,EAAE4jB,eAAerjB,EAAE,GAAG,EAAI,K,EAAxmKE,CAAUJ,GAMkkBqB,GAAAA,SAAAA,I,8HAAY,WAAW,G,6BAAA,WAAkB,OAAOiZ,EAAAA,EAAAA,KAAU,G,+BAAA,SAAkB5Z,GAAG,OAAO,CAAG,G,0BAAA,SAAaR,EAAEP,EAAEK,EAAEqB,GAAG,IAAcc,EAAkEjC,EAA1E0F,QAAkBvD,EAAwDnC,EAAhEuN,QAAgBiE,EAAgDxR,EAAtDiG,MAAqB8D,EAAiC/J,EAA9Cqa,aAA2BxW,EAAmB7D,EAA/B8X,YAA4BlP,EAAG5I,EAAjB8F,cAAmBkE,EAAE4gB,EAAAA,EAAAA,KAAS9qB,EAAE4X,aAAahN,GAAErE,EAAAA,EAAAA,GAAIxC,IAAI,YAAYA,EAAEG,KAAKpE,EAAEoK,EAAE6gB,WAAW,EAAE,EAAE,GAAIjrB,KAAGF,KAAKorB,IAAIrrB,EAAEgS,IAAIE,MAAMjS,KAAKmS,MAAM,IAAI7R,EAAE0R,cAAc,MAAM,GAAjE,CAA0E,MAA76B,SAAAlR,GAAC,OAAE2V,EAAAA,EAAAA,GAAG3V,EAAEga,KAAK,CAACxO,SAAS,CAAC,CAACoK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,OAAOoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,UAAUoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,cAAgB+N,YAAW,GAAI,CAAC7D,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,cAAgB+N,YAAW,GAAI,CAAC7D,SAAS,EAAEnR,KAAK,eAAeoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,gCAAgCoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,iBAAiBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,kBAA5jB,CAAg9B6e,CAAI/gB,GAApBkE,EAApB,EAAMqI,cAA2B/H,EAAjC,EAAsBzM,WAAqBsL,EAAElL,EAAEwL,gBAAgBuN,mBAAmBlb,EAAEgK,EAAE,kBAAkBwE,EAAErN,GAAG,KAAGkF,EAAAA,EAAAA,GAAIuC,IAAK8B,GAAI2C,EAAEU,WAAlB,CAA6C/N,EAAE0F,QAAQE,mBAAmBC,EAAAA,EAAAA,MAAQ,EAAE,KAAK5D,EAAEoM,WAAWhB,GAAG5M,KAAK0a,mBAAmB9N,EAAErN,EAAEP,GAAG0C,EAAEqZ,eAAehE,aAAavV,EAAEoL,EAAErD,GAAG,IAAM3J,EAAE,IAAIT,EAAE4R,EAAE/L,gBAAgB+L,EAAEkF,YAAYjW,KAAKgb,mBAAmBzR,EAAEqD,EAAEtD,EAAEtK,GAAG4N,EAAE2D,aAAa,gBAAgBtR,KAAKsrB,MAAMxZ,EAAErJ,SAAS,IAAI,MAAMkF,EAAE2D,aAAa,eAAepR,GAAGyN,EAAE4D,oBAAoB,gBAAgB5Q,GAAGgN,EAAE2D,aAAa,YAAY,GAAG3D,EAAE0D,cAAc,eAAe/Q,EAAEiG,MAAM0Q,MAAMtJ,EAAE2D,aAAa,WAAW,GAAG,IAAMyH,EAAE3Y,EAAE6b,OAAOrF,OAAOrU,EAAEiM,EAAEM,GAAGqX,EAAI/lB,EAAE+b,UAAUC,YAAYC,kBAAkB9Z,EAAEmK,QAAQqM,GAAGxW,EAAEsP,aAAajF,EAAAA,EAAAA,UAAcxM,EAAE8b,WAAW1P,EAAAA,EAAAA,aAAe2Z,GAAKxY,EAAE2D,aAAa,WAAW,GAAG/O,EAAEsP,aAAajF,EAAAA,EAAAA,UAAcxM,EAAE8b,WAAW1P,EAAAA,EAAAA,aAAe2Z,GAAK5jB,EAAEmL,uBAAsB,GAAInL,EAAE+K,oBAAmB,EAApvB,MAAYpE,GAAvJ,CAAo4B,K,EAAxtCzH,CAAUgB,GAM7B8oB,GAAAA,SAAAA,I,8HAAc,WAAW,G,6BAAA,WAAkB,OAAO7Q,EAAAA,EAAAA,IAAS,G,+BAAA,SAAkB5Z,GAAG,OAAO,CAAG,G,0BAAA,SAAaR,EAAEP,EAAEK,EAAEoC,GAAG,IAAcf,EAAyEnB,EAAjF0F,QAAkB8L,EAA+DxR,EAAvEuN,QAAuBtL,EAAgDjC,EAA7Dqa,aAA4BlY,EAAiCnC,EAA9C0R,aAA2B9I,EAAmB5I,EAA/B8X,YAA4B/N,EAAG/J,EAAjB8F,cAAmBkE,EAAEkhB,EAAAA,EAAAA,KAASprB,EAAE4X,aAAa7T,GAAEwC,EAAAA,EAAAA,GAAIuC,IAAI,YAAYA,EAAE5E,KAAS0G,EAAz0B,SAAAlK,GAAC,OAAE2V,EAAAA,EAAAA,GAAG3V,EAAEga,KAAK,CAACxO,SAAS,CAAC,CAACoK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,OAAOoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,UAAUoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,cAAgB+N,YAAW,GAAI,CAAC7D,SAAS,EAAEnR,KAAK,oBAAoBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,MAAQ,CAACkK,SAAS,EAAEnR,KAAK,oCAAoCoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,gBAAkB,CAACkK,SAAS,EAAEnR,KAAK,SAASoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,gBAAkB,CAACkK,SAAS,EAAEnR,KAAK,qBAAqBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,MAAQ,CAACkK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,gBAAkB,CAACkK,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,kBAAziB,CAA00Bif,CAAInhB,GAAGpK,EAAE0M,EAAAA,EAAAA,UAAczI,IAAI6G,EAAEjK,KAAKua,iBAAiBlb,EAAE4X,YAAYhN,GAAG9K,EAAE0M,EAAAA,EAAAA,QAAY,MAAoC5B,EAAnBrK,EAAjB,EAAM0B,WAA2BmM,EAAjC,EAAmBqI,cAAmBlJ,EAAEmE,EAAE7D,gBAAgBuN,mBAAmBlb,EAAEgK,EAAE,iBAAiB3J,EAAE6B,GAAG,KAAGmE,EAAAA,EAAAA,GAAI0D,IAAKlG,GAAIwJ,EAAEU,WAAlB,CAA6C,IAAMS,EAAE,EAAExO,EAAEiI,WAAe9G,EAAEkN,WAAWhB,GAAG5M,KAAK0a,mBAAmB9N,EAAErN,EAAEP,GAAGuK,EAAEuR,gBAAgB/J,EAAEgK,eAAehE,aAAarW,EAAEkM,EAAErD,GAAG,IAAMnE,EAAC,SAAC,EAAI1D,EAAE1C,EAAEgS,IAAIE,OAAOtE,EAAE2D,aAAa,eAAenL,GAAGwH,EAAE2D,aAAa,SAAnL,EAA8LxC,GAAGnB,EAAE2D,aAAa,iBAAiBxC,GAAG/N,KAAKgb,mBAAmBzR,EAAEqD,EAAEpL,EAAExC,GAAGgB,KAAKib,8BAA8B1R,EAAEqD,EAAEpL,GAAGd,EAAE+U,uBAAsB,GAAI,IAAMjI,EAAEnO,EAAE6b,OAAOrF,OAAOnV,EAAE+M,EAAE7N,EAAEwD,GAAO8E,EAAE7I,EAAE8b,WAAWtD,EAAExY,EAAE+b,UAAUC,YAAYC,kBAAkBlY,IAAI8E,GAAG,EAAE2P,GAAG,GAAGnX,EAAEiL,QAAQ6B,GAAG9M,EAAEoQ,aAAa3R,EAAE+I,EAAEuD,EAAAA,EAAAA,aAAeoM,EAAlhB,MAAYvO,GAA0gB,K,EAAl/BkhB,CAAY9oB,GAM1BD,GAAAA,SAAAA,I,8HAAY,WAAW,G,6BAAA,WAAkB,OAAOkY,EAAAA,EAAAA,IAAS,G,+BAAA,SAAkBpa,GAAG,OAAO,CAAG,G,0BAAA,SAAaQ,EAAEf,EAAEK,EAAEoC,GAAG,IAAcf,EAAkEX,EAA1EkF,QAAkBvD,EAAwD3B,EAAhE+M,QAAuBtL,EAAyCzB,EAAtD6Z,aAAqBzR,EAAiCpI,EAAvCyF,MAAoB8D,EAAmBvJ,EAA/BsX,YAA4B9N,EAAGxJ,EAAjBsF,cAAmB0L,EAAE4Z,EAAAA,EAAAA,KAAStrB,EAAE4X,aAAa7T,GAAEwC,EAAAA,EAAAA,GAAI0D,IAAI,YAAYA,EAAE/F,KAApI,EAAvqB,SAAAhE,GAAC,OAAEmW,EAAAA,EAAAA,GAAGnW,EAAEwa,KAAK,CAACxO,SAAS,CAAC,CAACoK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,OAAOoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,UAAUoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,cAAgB+N,YAAW,GAAI,CAAC7D,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,cAAgB+N,YAAW,GAAI,CAAC7D,SAAS,EAAEnR,KAAK,gBAAgBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,eAAiB,CAACkK,SAAS,EAAEnR,KAAK,QAAQoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,MAAQ,CAACkK,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,gBAAkB,CAACkK,SAAS,EAAEnR,KAAK,iBAAiBoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,OAAS,CAACkK,SAAS,EAAEnR,KAAK,cAAcoR,MAAM,EAAErS,KAAKkI,EAAAA,EAAAA,kBAA7hB,CAA80BjL,CAAEuQ,GAAlB9G,EAAxJ,EAA0I6L,cAA2B3W,EAArK,EAA0JmC,WAAmBmM,EAAE/L,EAAEwL,gBAAgBuN,mBAAmB1a,EAAEgR,EAAE,iBAAiB5R,EAAEsC,GAAG,KAAGmE,EAAAA,EAAAA,GAAI2D,IAAKnG,GAAIqK,EAAEH,WAAlB,CAA6C5M,EAAEkN,WAAWH,GAAG,IAAIb,EAAEf,EAAAA,EAAAA,UAAczI,IAAIwJ,EAAEf,EAAAA,EAAAA,QAAY7L,KAAK0a,mBAAmBjN,EAAE1N,EAAEf,GAAG0C,EAAEqZ,eAAehE,aAAarW,EAAE+M,EAAEsD,GAAGtD,EAAE+C,oBAAoB,gBAAgBrI,EAAE8N,aAAaxI,EAAE+C,oBAAoB,oBAAoBrI,EAAEnD,iBAAiBhF,KAAKgb,mBAAmBjK,EAAEtD,EAAEjM,EAAExC,GAAGgB,KAAKib,8BAA8BlK,EAAEtD,EAAEjM,GAAGxB,KAAK0f,uBAAuB3O,EAAEtD,EAAEjM,GAAGiM,EAAE8C,aAAa,WAAW,GAAG,IAAMxC,EAAE1O,EAAE6b,OAAOrF,OAAOnV,EAAEuJ,EAAE9K,GAAG+I,EAAE7I,EAAE+b,UAAUC,YAAYC,kBAAkB5a,EAAEiL,QAAQoC,GAAGrN,EAAEoQ,aAAajF,EAAAA,EAAAA,UAAcxM,EAAE8b,WAAW1P,EAAAA,EAAAA,aAAevD,GAAGuF,EAAE8C,aAAa,WAAW,GAAG7P,EAAEoQ,aAAalE,EAAEvN,EAAE8b,WAAW1P,EAAAA,EAAAA,aAAevD,EAArmB,MAAYqB,GAA6lB,K,EAAl+B9H,CAAUC,GAMrkBmoB,GAAE,CAACe,OAAOrL,GAAI9L,KAAK+W,GAAIpX,KAAKsG,EAAI9F,KAAKnS,GAAE+R,MAAM9S,GAAEmqB,KAAKznB,EAAE4R,QAAQgP,GAAIvP,OAAO3C,EAAI+B,QAAQsC,EAAI3B,OAAO1I,EAAIgf,SAASvb,EAAIoF,KAAKpT,EAAE0T,SAAS/M,GAAE6iB,cAAczhB,GAAE0hB,QAAQrE,GAAIsE,QAAQzpB,GAAE0pB,UAAUhF,GAAIiF,UAAU1rB,GAAE2rB,WAAW5Q,GAAEzH,QAAQgN,GAAIsL,SAAS5H,IAAKtb,GAAE,CAAC4iB,cAAczhB,GAAE0hB,QAAQrE,GAAIsE,QAAQzpB,GAAE0pB,UAAUhF,GAAIiF,UAAU1rB,G","sources":["../node_modules/raleigh-stencil-components/dist/esm/GeometryUtils-544c258a.js","../node_modules/raleigh-stencil-components/dist/esm/ProgramTemplate-80cebc67.js","../node_modules/raleigh-stencil-components/dist/esm/StyleDefinition-b27f779b.js","../node_modules/raleigh-stencil-components/dist/esm/brushes-7edb0f53.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst t=Math.PI,o=128/t,c=256/360,N=1/Math.LN2;function a(n,t){return (n%=t)>=0?n:n+t}function h(n){return a(n*o,256)}function M(n){return a(n*c,256)}function P(n){return Math.log(n)*N}function g(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}\n\nexport { M, P, g, h };\n","import { h } from './Program-925e7953.js';\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass e$1{constructor(e){this.readFile=e;}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h=\"\";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?\"\":this._resolve(e.path,t),a=e.start+e.length;})),h+=r.slice(a),t.set(e,h),h}_read(e){return this.readFile(e)}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nfunction e(e,t,a=\"\"){return new h(e,a+t.shaders.vertexShader,a+t.shaders.fragmentShader,t.attributes)}\n\nexport { e as a, e$1 as e };\n","import { e, n as n$1 } from './enums-6ac2a162.js';\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nvar a,i,n,l,u,m,o,r,p;!function(e){e[e.BACKGROUND=0]=\"BACKGROUND\",e[e.FILL=1]=\"FILL\",e[e.LINE=2]=\"LINE\",e[e.SYMBOL=3]=\"SYMBOL\",e[e.CIRCLE=4]=\"CIRCLE\";}(a||(a={})),function(e){e[e.VISIBLE=0]=\"VISIBLE\",e[e.NONE=1]=\"NONE\";}(i||(i={})),function(e){e[e.POINT=0]=\"POINT\",e[e.LINE=1]=\"LINE\",e[e.LINE_CENTER=2]=\"LINE_CENTER\";}(n||(n={})),function(e){e[e.MAP=0]=\"MAP\",e[e.VIEWPORT=1]=\"VIEWPORT\",e[e.AUTO=2]=\"AUTO\";}(l||(l={})),function(e){e[e.AUTO=0]=\"AUTO\",e[e.LEFT=1]=\"LEFT\",e[e.CENTER=2]=\"CENTER\",e[e.RIGHT=3]=\"RIGHT\";}(u||(u={})),function(e){e[e.CENTER=0]=\"CENTER\",e[e.LEFT=1]=\"LEFT\",e[e.RIGHT=2]=\"RIGHT\",e[e.TOP=3]=\"TOP\",e[e.BOTTOM=4]=\"BOTTOM\",e[e.TOP_LEFT=5]=\"TOP_LEFT\",e[e.TOP_RIGHT=6]=\"TOP_RIGHT\",e[e.BOTTOM_LEFT=7]=\"BOTTOM_LEFT\",e[e.BOTTOM_RIGHT=8]=\"BOTTOM_RIGHT\";}(m||(m={})),function(e){e[e.NONE=0]=\"NONE\",e[e.UPPERCASE=1]=\"UPPERCASE\",e[e.LOWERCASE=2]=\"LOWERCASE\";}(o||(o={})),function(e){e[e.MAP=0]=\"MAP\",e[e.VIEWPORT=1]=\"VIEWPORT\";}(r||(r={})),function(e){e[e.HORIZONTAL=0]=\"HORIZONTAL\",e[e.VERTICAL=1]=\"VERTICAL\";}(p||(p={}));class f{}f.backgroundLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE}},f.fillLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE}},f.lineLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE},\"line-cap\":{type:\"enum\",values:[\"butt\",\"round\",\"square\"],default:e.BUTT},\"line-join\":{type:\"enum\",values:[\"bevel\",\"round\",\"miter\"],default:n$1.MITER},\"line-miter-limit\":{type:\"number\",default:2},\"line-round-limit\":{type:\"number\",default:1.05}},f.symbolLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE},\"symbol-avoid-edges\":{type:\"boolean\",default:!1},\"symbol-placement\":{type:\"enum\",values:[\"point\",\"line\",\"line-center\"],default:n.POINT},\"symbol-sort-key\":{type:\"number\",default:-1},\"symbol-spacing\":{type:\"number\",minimum:1,default:250},\"icon-allow-overlap\":{type:\"boolean\",default:!1},\"icon-anchor\":{type:\"enum\",values:[\"center\",\"left\",\"right\",\"top\",\"bottom\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"],default:m.CENTER},\"icon-ignore-placement\":{type:\"boolean\",default:!1},\"icon-image\":{type:\"string\"},\"icon-keep-upright\":{type:\"boolean\",default:!1},\"icon-offset\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"icon-optional\":{type:\"boolean\",default:!1},\"icon-padding\":{type:\"number\",minimum:0,default:2},\"icon-rotate\":{type:\"number\",default:0},\"icon-rotation-alignment\":{type:\"enum\",values:[\"map\",\"viewport\",\"auto\"],default:l.AUTO},\"icon-size\":{type:\"number\",minimum:0,default:1},\"text-allow-overlap\":{type:\"boolean\",default:!1},\"text-anchor\":{type:\"enum\",values:[\"center\",\"left\",\"right\",\"top\",\"bottom\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"],default:m.CENTER},\"text-field\":{type:\"string\"},\"text-font\":{type:\"array\",value:\"string\",default:[\"Open Sans Regular\",\"Arial Unicode MS Regular\"]},\"text-ignore-placement\":{type:\"boolean\",default:!1},\"text-justify\":{type:\"enum\",values:[\"auto\",\"left\",\"center\",\"right\"],default:u.CENTER},\"text-keep-upright\":{type:\"boolean\",default:!0},\"text-letter-spacing\":{type:\"number\",default:0},\"text-line-height\":{type:\"number\",default:1.2},\"text-max-angle\":{type:\"number\",minimum:0,default:45},\"text-max-width\":{type:\"number\",minimum:0,default:10},\"text-offset\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"text-optional\":{type:\"boolean\",default:!1},\"text-padding\":{type:\"number\",minimum:0,default:2},\"text-rotate\":{type:\"number\",default:0},\"text-rotation-alignment\":{type:\"enum\",values:[\"map\",\"viewport\",\"auto\"],default:l.AUTO},\"text-size\":{type:\"number\",minimum:0,default:16},\"text-transform\":{type:\"enum\",values:[\"none\",\"uppercase\",\"lowercase\"],default:o.NONE},\"text-writing-mode\":{type:\"array\",value:\"enum\",values:[\"horizontal\",\"vertical\"],default:[p.HORIZONTAL]}},f.circleLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE}},f.backgroundPaintDefinition={\"background-color\":{type:\"color\",default:[0,0,0,1]},\"background-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"background-pattern\":{type:\"string\"}},f.fillPaintDefinition={\"fill-antialias\":{type:\"boolean\",default:!0},\"fill-color\":{type:\"color\",default:[0,0,0,1]},\"fill-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"fill-outline-color\":{type:\"color\",default:[0,0,0,0]},\"fill-pattern\":{type:\"string\"},\"fill-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"fill-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP}},f.linePaintDefinition={\"line-blur\":{type:\"number\",minimum:0,default:0},\"line-color\":{type:\"color\",default:[0,0,0,1]},\"line-dasharray\":{type:\"array\",value:\"number\",default:[]},\"line-gap-width\":{type:\"number\",minimum:0,default:0},\"line-offset\":{type:\"number\",default:0},\"line-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"line-pattern\":{type:\"string\"},\"line-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"line-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP},\"line-width\":{type:\"number\",minimum:0,default:1}},f.symbolPaintDefinition={\"icon-color\":{type:\"color\",default:[0,0,0,1]},\"icon-halo-blur\":{type:\"number\",minimum:0,default:0},\"icon-halo-color\":{type:\"color\",default:[0,0,0,0]},\"icon-halo-width\":{type:\"number\",minimum:0,default:0},\"icon-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"icon-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"icon-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP},\"text-color\":{type:\"color\",default:[0,0,0,1]},\"text-halo-blur\":{type:\"number\",minimum:0,default:0},\"text-halo-color\":{type:\"color\",default:[0,0,0,0]},\"text-halo-width\":{type:\"number\",minimum:0,default:0},\"text-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"text-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"text-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP}},f.rasterPaintDefinition={\"raster-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"raster-hue-rotate\":{type:\"number\",default:0},\"raster-brightness-min\":{type:\"number\",minimum:0,maximum:1,default:0},\"raster-brightness-max\":{type:\"number\",minimum:0,maximum:1,default:1},\"raster-saturation\":{type:\"number\",minimum:-1,maximum:1,default:0},\"raster-contrast\":{type:\"number\",minimum:-1,maximum:1,default:0},\"raster-fade-duration\":{type:\"number\",minimum:0,default:300}},f.circlePaintDefinition={\"circle-blur\":{type:\"number\",minimum:0,default:0},\"circle-color\":{type:\"color\",default:[0,0,0,1]},\"circle-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"circle-radius\":{type:\"number\",minimum:0,default:5},\"circle-stroke-color\":{type:\"color\",default:[0,0,0,1]},\"circle-stroke-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"circle-stroke-width\":{type:\"number\",minimum:0,default:0},\"circle-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"circle-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP}};\n\nexport { a, f, i, l, m, n, o, p, r, u };\n","import { t as t$1, r as r$1, af as c$6, aQ as s$3, bf as t$4, s as s$5 } from './cast-5c4dc32a.js';\nimport { M as e$2 } from './DefaultUI-e731035a.js';\nimport { I, L, F as F$1, C, E as E$1, R, O as O$2, B as B$1, D as D$2, P, G as G$1, M as M$2, Y, V, _ as _$1, U as U$2, N as N$1 } from './enums-4770f29d.js';\nimport { r as r$2, M as M$1, h as h$2, b as b$2, i as i$1 } from './mat3-02e39436.js';\nimport { t as t$2, n as n$2 } from './vec2f32-cef742ee.js';\nimport { l as l$2 } from './pixelUtils-1ee1c48b.js';\nimport { a as a$1 } from './DisplayObject-50e36412.js';\nimport { E, _, T as T$1, U, R as R$1, F as F$2, h as h$3, g, A as A$1, d as d$3, O as O$1, r as r$3, a as r$5 } from './DefaultVertexAttributeLayouts-20e980d9.js';\nimport { c as c$5, f as f$1, r as r$4, D as D$1 } from './FramebufferObject-cced63a5.js';\nimport { t as t$3 } from './VertexElementDescriptor-3b53aa99.js';\nimport { a7 as A$2, M as at, B, C as C$1, a8 as D, a9 as E$2, aa as F$3, ab as G, ac as K, ad as L$1, o as o$2, ae as Z, af as _$2, ag as $ } from './enums-6ac2a162.js';\nimport { g as ge, c as E$3, S, I as I$1 } from './Utils-4e99bdd6.js';\nimport { e as e$3, a as e$4 } from './ProgramTemplate-80cebc67.js';\nimport { U as U$1, w, N, Z as Z$1, C as C$2, P as P$1 } from './MaterialKey-c0f3a08a.js';\nimport { p as p$2, s as s$4 } from './utils-ef6c73c5.js';\nimport { u as u$4 } from './Texture-5e3be37c.js';\nimport { o as o$3 } from './context-util-3e0f33ce.js';\nimport { aj as c$7 } from './mathUtils-a0f2962e.js';\nimport { M as M$3 } from './number-0cb95514.js';\nimport { r as r$6, l as l$3, n as n$3 } from './StyleDefinition-b27f779b.js';\nimport { e as e$5 } from './config-5446e136.js';\nimport { M as M$4 } from './GeometryUtils-544c258a.js';\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass a{constructor(){this.name=this.constructor.name||\"UnnamedBrush\";}prepareState(a,r,t){}draw(a,r,t){}drawMany(a,r,t){for(const s of r)this.draw(a,s,t);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass i extends a{constructor(){super(...arguments),this._visualState={time:0,dvsMat3:e$2(),displayViewMat3:e$2()};}dispose(){}prepareState(t){const{context:e}=t;e.setColorMask(!0,!0,!0,!0),e.setStencilFunction(I.EQUAL,0,255);}draw(s,a){const{requestRender:r}=s,{displayData:i}=a;if(t$1(i))return;if(\"loaded\"===i.state.name&&i.attach(s),\"attached\"!==i.state.name)return;const o=i.state.resources;o.ready||!r$1(r)?(this._visualState.time=s.time/1e3,this._visualState.dvsMat3=a.transforms.dvs,this._visualState.displayViewMat3=s.state.displayViewMat3,i.flowStyle.render(s,this._visualState,o),i.flowStyle.animated&&r$1(r)&&r()):r();}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst x$2={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:\"none\",type:\"stretch\"};class p$1 extends a$1{constructor(t=null,e=null,r=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._supportsBilinearTexture=!0,this.stencilRef=0,this.coordScale=[1,1],this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=t,this.transformGrid=e,this.interpolation=r;}destroy(){this.getTextures()?.textures.forEach((t=>t.dispose())),this._rasterTexture=null,this._transformGridTexture=null,this._colormapTexture=null;}get symbolizerParameters(){return this._symbolizerParameters||x$2}set symbolizerParameters(t){this._symbolizerParameters!==t&&(this._symbolizerParameters=t,this._colormapTextureInvalidated=!0);}get source(){return this._source}set source(t){this._source!==t&&(this._source=t,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.invalidateTexture());}get suspended(){return this._suspended}set suspended(t){this._suspended&&!t&&this.stage&&(this.ready(),this.requestRender()),this._suspended=t;}get bandIds(){return this._bandIds}set bandIds(t){this._bandIds=t,this._isBandIdschanged(t)&&this.invalidateTexture();}get interpolation(){return this._interpolation||\"nearest\"}set interpolation(t){this._interpolation=t,this._rasterTexture&&this._rasterTexture.setSamplingMode(\"bilinear\"===this._getTextureSamplingMethod(t)?L.LINEAR:L.NEAREST);}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null);}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender());}_createTransforms(){return {dvs:e$2()}}setTransform(t){const o=r$2(this.transforms.dvs),[n,h]=t.toScreenNoRotation([0,0],[this.x,this.y]),l=this.resolution/this.pixelRatio/t.resolution,d=l*this.width,_=l*this.height,m=Math.PI*this.rotation/180;M$1(o,o,t$2(n,h)),M$1(o,o,t$2(d/2,_/2)),h$2(o,o,-m),M$1(o,o,t$2(-d/2,-_/2)),b$2(o,o,t$2(d,_)),i$1(this.transforms.dvs,t.displayViewMat3,o);}getTextures(){if(!this._rasterTexture)return null;const t=[],e=[];return this._transformGridTexture&&(e.push(this._transformGridTexture),t.push(\"u_transformGrid\")),this._rasterTexture&&(e.push(this._rasterTexture),t.push(\"u_image\")),this._colormapTexture&&(e.push(this._colormapTexture),t.push(\"u_colormap\")),{names:t,textures:e}}onAttach(){this.invalidateTexture();}onDetach(){this.invalidateTexture();}updateTexture({context:t}){if(!this.stage)return this._rasterTexture?.dispose(),this._transformGridTexture?.dispose(),this._colormapTexture?.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,void(this._colormapTexture=null);const e=this._isValidSource(this.source);e&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(t)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(t),this._rasterTexture&&(e?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=E(t,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()));}_createOrDestroyRasterTexture(e){const r=r$1(this.source)?l$2(this.source,this.bandIds):null;if(!this._isValidSource(r))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null;}this._supportsBilinearTexture=e.capabilities.textureFloat?.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource||!e.capabilities.textureFloat?.textureFloat;this._rasterTexture=_(e,r,i,a),this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null;}_isBandIdschanged(t){const e=this._rasterTextureBandIds;return !(null==e&&null==t||e&&t&&e.join(\"\")===t.join(\"\"))}_isValidSource(e){return r$1(e)&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:r,colormap:s}=this.symbolizerParameters,i=\"lut\"===r||\"stretch\"===r&&r$1(s);return !this._supportsBilinearTexture||i||\"bilinear\"!==e&&\"cubic\"!==e?\"nearest\":\"bilinear\"}_updateColormapTexture(t){const e=this._colormap,r=this.symbolizerParameters.colormap;return r?e?r.length!==e.length||r.some(((t,r)=>t!==e[r]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=T$1(t,r),void(this._colormap=r)):void 0:(this._colormapTexture=T$1(t,r),void(this._colormap=r)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}function T(e){return r$1(e.source)}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass n$1{constructor(s,n){this.rctx=s,this._vertexBuffer=c$5.createVertex(s,F$1.STATIC_DRAW,new Uint16Array(n)),this._vao=new f$1(s,new Map([[\"a_position\",0]]),{geometry:[new t$3(\"a_position\",2,C.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2;}bind(){this.rctx.bindVAO(this._vao);}unbind(){this.rctx.bindVAO(null);}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose();}draw(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(E$1.TRIANGLE_STRIP,0,this._count);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass m$7 extends a{constructor(){super(...arguments),this._desc={lut:{vsPath:\"raster/lut\",fsPath:\"raster/lut\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])},stretch:{vsPath:\"raster/stretch\",fsPath:\"raster/stretch\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])},hillshade:{vsPath:\"raster/hillshade\",fsPath:\"raster/hillshade\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])}},this._rendererUniformInfos=new Map;}dispose(){this._quad&&this._quad.dispose();}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(I.EQUAL,t.stencilRef,255);}draw(e,r){if(!T(r)||r.suspended)return;const{timeline:s,context:a,painter:i,requestRender:o}=e;s.begin(this.name);const n=!a.capabilities.textureFloat?.textureFloatLinear;r.updateTexture(e);const h=this._getShaderVariations(r,n),l=i.materialManager.getProgram(this._desc[r.symbolizerParameters.type],h);this._drawWithProgram(a,l,r,o),s.end(this.name);}_drawWithProgram(t,s,a,i,d=1,m=[0,0],f=!1){if(this._quad||(this._quad=new n$1(t,[0,0,1,0,0,1,1,1])),r$1(i)&&!s.isCompiled)return void i();const{symbolizerParameters:_,transformGrid:g$1,width:b,height:P,opacity:S}=a,w=_.type;t.useProgram(s);const x=this._getShaderVariations(a),y=this._getUniformInfos(w,t,s,x),{names:M,textures:U$1}=a.getTextures();U(t,s,M,U$1);const j=h$3(d,m),I=g(g$1,[b,P],[a.source.width,a.source.height],S,f);if(R$1(s,y,{u_coordScale:a.coordScale,u_dvsMat3:a.transforms.dvs,...j,...I}),_.colormap){const{colormap:e,colormapOffset:t}=_,r=A$1(e,t);R$1(s,y,r);}if(\"stretch\"===_.type){const e=d$3(_);R$1(s,y,e);}else if(\"hillshade\"===_.type){const e=O$1(_);R$1(s,y,e);}this._quad.draw();}_getUniformInfos(e,t,r,s){const a=s.length>0?e+\"-\"+s.join(\"-\"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const i=F$2(t,r);return this._rendererUniformInfos.set(a,i),i}_getShaderVariations(e,t=!1){const r=[],{interpolation:s}=e,{type:a,colormap:i}=e.symbolizerParameters;return \"cubic\"===s?r.push(\"bicubic\"):\"bilinear\"===s&&\"stretch\"===a&&null!=i?(r.push(\"bilinear\"),r.push(\"nnedge\")):t&&\"bilinear\"===s&&r.push(\"bilinear\"),e.isRendereredSource?r.push(\"noop\"):i&&r.push(\"applyColormap\"),e.transformGrid&&(r.push(\"applyProjection\"),1===e.transformGrid.spacing[0]&&r.push(\"lookupProjection\")),r}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst l$1=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),c$4={beaufort_ft:l$1,beaufort_m:l$1,beaufort_km:l$1,beaufort_mi:l$1,beaufort_kn:new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),classified_arrow:new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),ocean_current_m:new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),ocean_current_kn:new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),single_arrow:new Float32Array([0,92/255,230/255,1]),wind_speed:new Float32Array([0,0,0,1])};class m$6 extends a{constructor(){super(...arguments),this._desc={magdir:{vsPath:\"raster/magdir\",fsPath:\"raster/magdir\",attributes:new Map([[\"a_pos\",0],[\"a_offset\",1],[\"a_vv\",2]])},scalar:{vsPath:\"raster/scalar\",fsPath:\"raster/scalar\",attributes:new Map([[\"a_pos\",0],[\"a_offset\",1],[\"a_vv\",2]])}};}dispose(){}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilOp(O$2.KEEP,O$2.KEEP,O$2.REPLACE),e.setStencilFunction(I.EQUAL,t.stencilRef,255);}draw(t,a){if(t$1(a.source)||0===a.source.validPixelCount)return;const{timeline:r}=t;if(r.begin(this.name),a.updateVectorFieldVAO(t),\"scalar\"===t.renderPass){const e=a.vaoData.scalar;e&&this._drawScalars(t,a,e.vao,e.elementCount);}else {const e=a.vaoData.magdir;e&&this._drawTriangles(t,a,e.vao,e.elementCount);}r.end(this.name);}_drawTriangles(e,a,r,s){const{context:o,painter:l,requestRender:m}=e,{symbolizerParameters:d}=a,f=d.dataRange?[\"dataRange\"]:[];\"geographic\"===d.rotationType&&f.push(\"rotationGeographic\");const u=l.materialManager.getProgram(this._desc.magdir,f);if(r$1(m)&&!u.isCompiled)return void m();o.useProgram(u);const{coordScale:_,opacity:g,transforms:p}=a;u.setUniform2fv(\"u_coordScale\",_),u.setUniform1f(\"u_opacity\",g),u.setUniformMatrix3fv(\"u_dvsMat3\",p.dvs);const{style:y,dataRange:v,rotation:b,symbolPercentRange:S}=d;u.setUniform4fv(\"u_colors\",c$4[y]||c$4.single_arrow),u.setUniform2fv(\"u_dataRange\",v),u.setUniform1f(\"u_rotation\",b),u.setUniform2fv(\"u_symbolPercentRange\",S);const h=this._getSymbolSize(e,a);u.setUniform2fv(\"u_symbolSize\",h),o.bindVAO(r),o.drawElements(E$1.TRIANGLES,s,C.UNSIGNED_INT,0);}_drawScalars(e,a,r,s){const{context:o,painter:l,requestRender:c}=e,{symbolizerParameters:m}=a,d=[];\"wind_speed\"===m.style?d.push(\"innerCircle\"):m.dataRange&&d.push(\"dataRange\"),\"geographic\"===m.rotationType&&d.push(\"rotationGeographic\");const f=l.materialManager.getProgram(this._desc.scalar,d);if(r$1(c)&&!f.isCompiled)return void c();o.useProgram(f);const{coordScale:u,opacity:_,transforms:g}=a;f.setUniform2fv(\"u_coordScale\",u),f.setUniform1f(\"u_opacity\",_),f.setUniformMatrix3fv(\"u_dvsMat3\",g.dvs);const{dataRange:p,symbolPercentRange:y}=m;f.setUniform2fv(\"u_dataRange\",p),f.setUniform2fv(\"u_symbolPercentRange\",y);const v=this._getSymbolSize(e,a);f.setUniform2fv(\"u_symbolSize\",v),o.bindVAO(r),o.drawElements(E$1.TRIANGLES,s,C.UNSIGNED_INT,0);}_getSymbolSize(e,t){const a=t.key?2**(e.displayLevel-t.key.level):t.resolution/e.state.resolution,{symbolTileSize:r}=t.symbolizerParameters;return [r/(Math.round((t.width-t.offset[0])/r)*r)/a,r/(Math.round((t.height-t.offset[1])/r)*r)/a]}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst o$1={nearest:{defines:[],samplingMode:L.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:L.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:L.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:L.LINEAR_MIPMAP_LINEAR,mips:!0}},d$2=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,r=s>1.05||s<.95;return i.rotation||r||n||t.isSourceScaled||t.rotation?o$1.bilinear:o$1.nearest}return o$1[i.samplingMode]};class m$5 extends a{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])};}dispose(){this._quad&&this._quad.dispose();}prepareState({context:e},t){e.setBlendingEnabled(!0),\"additive\"===t.blendFunction?e.setBlendFunctionSeparate(R.ONE,R.ONE,R.ONE,R.ONE):e.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(I.EQUAL,t.stencilRef,255);}draw(s,n){const{context:r,renderingOptions:a,painter:o,requestRender:m}=s;if(!n.source)return;const c=d$2(s,n,a),l=o.materialManager.getProgram(this._desc,c.defines);if(r$1(m)&&!l.isCompiled)return void m();s.timeline.begin(this.name),this._quad||(this._quad=new n$1(r,[0,0,1,0,0,1,1,1]));const{coordScale:p,computedOpacity:u,transforms:f}=n;n.setSamplingProfile(c),n.bind(s.context,A$2),r.useProgram(l),l.setUniformMatrix3fv(\"u_dvsMat3\",f.dvs),l.setUniform1i(\"u_texture\",A$2),l.setUniform2fv(\"u_coordScale\",p),l.setUniform1f(\"u_opacity\",u),this._quad.draw(),s.timeline.end(this.name);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst e$1={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\\nvividLight(Cb.g, Cs.g),\\nvividLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nvarying vec2 v_uv;\\nconst float UV_TO_TILE_SPACE = 512.;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos * UV_TO_TILE_SPACE, 1.)).xy, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp sampler2D u_attributeData4;\\nuniform highp sampler2D u_attributeData5;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nhighp vec4 getAttributeData4(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData4, coords);\\n}\\nhighp vec4 getAttributeData5(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData5, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nvec2 scale = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\\nvec2 symbolOffset = (a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float u_hittestDist;\\nuniform highp vec2 u_hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\nconst float TILE_TO_CLIP_SPACE = 2.0 / 512.0;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = vec3(a_pos * POSITION_PRECISION * TILE_TO_CLIP_SPACE - 1.0, 1.0);\\nvec3 vertexPos = centerPos + vec3(v_offsetFromCenter, 0.0) * u_radius * TILE_TO_CLIP_SPACE;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.frag\":\"precision mediump float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\\nuniform lowp vec4 u_defaultColor;\\nuniform lowp vec4 u_othersColor;\\nuniform lowp vec4 u_outlineColor;\\nuniform float u_donutRatio;\\nuniform float u_sectorThreshold;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\n#if __VERSION__ == 300\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn u_colors[colorIndex];\\n#else\\nmediump int colorIndex;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == index) {\\ncolorIndex = int(filteredSectorToColorId[i].y);\\n}\\n}\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == colorIndex) {\\nreturn u_colors[i];\\n}\\n}\\nreturn u_colors[NUMBER_OF_FIELDS - 1];\\n#endif\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = u_outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\nuniform float u_outlineWidth;\\nuniform mediump float u_sectorThreshold;\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nint filter(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\nif (sectorAngle > u_sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\n#if __VERSION__ == 300\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\\nif (i == filteredInfo.colorId) {\\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n}\\n}\\n#endif\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[NUMBER_OF_FIELDS]) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/hittest/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat outlineSize = u_outlineWidth;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(size.x, size.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData0 = getAttributeData3(a_id);\\nattributeData[0] = filterNaNValues(attributeData0.x);\\nattributeData[1] = filterNaNValues(attributeData0.y);\\nattributeData[2] = filterNaNValues(attributeData0.z);\\nattributeData[3] = filterNaNValues(attributeData0.w);\\n#if (NUMBER_OF_FIELDS > 4)\\nvec4 attributeData1 = getAttributeData4(a_id);\\nattributeData[4] = filterNaNValues(attributeData1.x);\\nattributeData[5] = filterNaNValues(attributeData1.y);\\nattributeData[6] = filterNaNValues(attributeData1.z);\\nattributeData[7] = filterNaNValues(attributeData1.w);\\n#endif\\n#if (NUMBER_OF_FIELDS > 8)\\nvec4 attributeData2 = getAttributeData5(a_id);\\nattributeData[8] = filterNaNValues(attributeData2.x);\\nattributeData[9] = filterNaNValues(attributeData2.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[NUMBER_OF_FIELDS];\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\n#if __VERSION__ == 300\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == numOfEntries) {\\nbreak;\\n}\\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\\n}\\n#endif\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * lineHalfWidth / line.patternSize.y;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexY, relativeTexX));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp mat3 u_tileMat3;\\nuniform highp mat3 u_viewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef SUPPORTS_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},overlay:{overlay:{\"overlay.frag\":\"precision lowp float;\\nuniform lowp sampler2D u_texture;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_texture, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"overlay.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_uv;\\nuniform highp mat3 u_dvsMat3;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\nv_uv = a_uv;\\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\\ngl_Position = vec4(pos.xy, 0.0, 1.0);\\n}\"}},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\ngl_FragColor = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\nfloat alpha = u_opacity * color.a;\\ngl_FragColor = vec4(alpha * color.rgb, alpha);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\\nreturn 0.0;\\n}\\nelse {\\nreturn e;\\n}\\n}\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec2 axy = vec2(-1.0, -1.0);\\nvec2 bxy = vec2(0.0, -1.0);\\nvec2 cxy = vec2(1.0, -1.0);\\nvec2 dxy = vec2(-1.0, 0.0);\\nvec2 fxy = vec2(1.0, 0.0);\\nvec2 gxy = vec2(-1.0, 1.0);\\nvec2 hxy = vec2(0.0, 1.0);\\nvec2 ixy = vec2(1.0, 1.0);\\nvec2 onePixel = 1.0 / u_srcImageSize;\\nif (pixelLocation.s < onePixel.s) {\\naxy[0] = 1.0;\\ndxy[0] = 1.0;\\ngxy[0] = 1.0;\\n}\\nif (pixelLocation.t < onePixel.t) {\\naxy[1] = 1.0;\\nbxy[1] = 1.0;\\ncxy[1] = 1.0;\\n}\\nif (pixelLocation.s > 1.0 - onePixel.s) {\\ncxy[0] = -1.0;\\nfxy[0] = -1.0;\\nixy[0] = -1.0;\\n}\\nif (pixelLocation.t > 1.0 - onePixel.t) {\\ngxy[1] = -1.0;\\nhxy[1] = -1.0;\\nixy[1] = -1.0;\\n}\\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\\nvec4 ve = texture2D(u_image, pixelLocation);\\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\",\"hillshade.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\",\"lut.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\",\"stretch.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nfunction o(e){let o=e$1;return e.split(\"/\").forEach((r=>{o&&(o=o[r]);})),o}const t=new e$3(o);function n(r){return t.resolveIncludes(r)}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst e={shaders:{vertexShader:n(\"background/background.vert\"),fragmentShader:n(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst c$3=()=>ge(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT}]});class f extends a{constructor(){super(...arguments),this._color=r$3(0,1,0,1);}dispose(){this._program&&this._program.dispose();}prepareState({context:r}){r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setFaceCullingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(O$2.KEEP,O$2.KEEP,O$2.REPLACE),r.setStencilWriteMask(255),r.setStencilFunction(I.ALWAYS,0,255);}draw(e$1,s){const{context:o,state:a,requestRender:m}=e$1,f=c$3(),d=s.getVAO(o,a,f.attributes,f.bufferLayouts);t$1(d.indexBuffer)||(this._program||(this._program=e$4(o,e)),!r$1(m)||this._program.isCompiled?(o.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",a.displayMat3),o.bindVAO(d),o.drawElements(E$1.TRIANGLES,d.indexBuffer.size,C.UNSIGNED_INT,0),o.bindVAO()):m());}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst u$3=()=>ge(\"overlay\",{geometry:[{location:0,name:\"a_pos\",count:2,type:C.FLOAT}],tex:[{location:1,name:\"a_uv\",count:2,type:C.UNSIGNED_SHORT}]});class m$4 extends a{constructor(){super(...arguments),this._desc={vsPath:\"overlay/overlay\",fsPath:\"overlay/overlay\",attributes:new Map([[\"a_pos\",0],[\"a_uv\",1]])};}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(I.GREATER,255,255);}draw(r,s){const{context:o,painter:n,requestRender:a}=r;if(!s.isReady)return;const{computedOpacity:m,dvsMat3:c,isWrapAround:d,texture:l}=s;r.timeline.begin(this.name);const p=n.materialManager.getProgram(this._desc);if(r$1(a)&&!p.isCompiled)return void a();const f=u$3(),_=s.getVAO(o,f.bufferLayouts,f.attributes);if(!_)return;o.bindVAO(_),o.useProgram(p),o.bindTexture(l,A$2),p.setUniformMatrix3fv(\"u_dvsMat3\",c),p.setUniform1i(\"u_texture\",A$2),p.setUniform1f(\"u_opacity\",m);const y=d?10:4;o.drawArrays(E$1.TRIANGLE_STRIP,0,y),o.bindVAO(),r.timeline.end(this.name);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass p extends a{constructor(){super(...arguments),this._computeDesc=new Map;}prepareState({context:t},e,i){i&&i.includes(\"hittest\")?t.setBlendFunctionSeparate(R.ONE,R.ONE,R.ONE,R.ONE):t.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(I.EQUAL,e.stencilRef,255);}draw(e,i,s){const o=this.getGeometryType();i.commit(e);const a=i.getGeometry(o);t$1(a)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),a.forEachCommand((t=>{const o=U$1.load(t.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(e,i,t,s);})));}_setSharedUniforms(t,u,v){const{displayLevel:f,pixelRatio:l,state:p,passOptions:c}=u;r$1(c)&&\"hittest\"===c.type&&(t.setUniform2fv(\"u_hittestPos\",c.position),t.setUniform1f(\"u_hittestDist\",c.distance)),t.setUniform1f(\"u_pixelRatio\",l),t.setUniformMatrix3fv(\"u_tileMat3\",v.transforms.tileMat3),t.setUniformMatrix3fv(\"u_viewMat3\",p.viewMat3),t.setUniformMatrix3fv(\"u_dvsMat3\",v.transforms.dvs),t.setUniformMatrix3fv(\"u_displayViewMat3\",p.displayViewMat3),t.setUniform1f(\"u_currentZoom\",Math.round(f*at)),t.setUniform1i(\"u_attributeTextureSize\",u.attributeView.size),t.setUniform1i(\"u_attributeData0\",B),t.setUniform1i(\"u_attributeData1\",C$1),t.setUniform1i(\"u_attributeData2\",D),t.setUniform1i(\"u_attributeData3\",E$2),t.setUniform1i(\"u_attributeData4\",F$3),t.setUniform1i(\"u_attributeData5\",G);}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv(\"u_vvSizeMinMaxValue\",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f(\"u_vvSizeScaleStopsValue\",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);e.setUniform1fv(\"u_vvSizeFieldStopsValues\",t.values),e.setUniform1fv(\"u_vvSizeFieldStopsSizes\",t.sizes);}t.vvSizeUnitValue&&e.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",i.vvSizeUnitValueToPixelsRatio);}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv(\"u_vvColorValues\",i.vvColorValues),e.setUniform4fv(\"u_vvColors\",i.vvColors)),t.vvOpacity&&(e.setUniform1fv(\"u_vvOpacityValues\",i.vvOpacityValues),e.setUniform1fv(\"u_vvOpacities\",i.vvOpacities));}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f(\"u_vvRotationType\",\"geographic\"===i.vvMaterialParameters.vvRotationType?0:1);}_getTriangleDesc(t,e,i=[\"a_pos\"]){const s=e.bufferLayouts.geometry,o=i.map((t=>s.findIndex((e=>e.name===t)))),a=`${t}-${o.join(\"-\")}`;let r=this._computeDesc.get(a);if(!r){const t=e.strides,i=e.strides.geometry,n=new Map(e.attributes),m=s.map((t=>({...t}))),u=Math.max(...e.attributes.values()),v={geometry:m};let f=0;for(const e of o){const t=s[e];v.geometry.push({count:t.count,name:t.name+\"1\",divisor:t.divisor,normalized:t.normalized,offset:i+t.offset,stride:i,type:t.type}),v.geometry.push({count:t.count,name:t.name+\"2\",divisor:t.divisor,normalized:t.normalized,offset:2*i+t.offset,stride:i,type:t.type}),n.set(t.name+\"1\",u+ ++f),n.set(t.name+\"2\",u+ ++f);}r={bufferLayouts:v,attributes:n,strides:t},this._computeDesc.set(a,r);}return r}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nfunction u$2(e){const t={geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_id\",count:3,type:C.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:C.UNSIGNED_BYTE},{location:3,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_aux1\",count:4,type:C.UNSIGNED_SHORT},{location:5,name:\"a_aux2\",count:4,type:C.SHORT},{location:6,name:\"a_aux3\",count:4,type:C.UNSIGNED_BYTE},{location:7,name:\"a_zoomRange\",count:2,type:C.UNSIGNED_SHORT}]};switch(e.symbologyType){case S.SIMPLE:case S.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1);}return {shader:\"materials/fill\",vertexLayout:t}}class c$2 extends p{dispose(){}getGeometryType(){return E$3.FILL}supportsSymbology(e){return e!==S.DOT_DENSITY}drawGeometry(o,r,i,l){const{context:c,painter:y,rendererInfo:p,requiredLevel:_,passOptions:f,requestRender:d}=o,E=w.load(i.materialKey),S=p$2(E.data),g=r$1(f)&&\"hittest\"===f.type,N=y.materialManager,{shader:T,vertexLayout:I,hittestAttributes:U}=c$6(S.programSpec,u$2(E));let x=E$1.TRIANGLES,L=ge(E.data,I);g&&(L=this._getTriangleDesc(i.materialKey,L,U),x=E$1.POINTS);const{attributes:h,bufferLayouts:G}=L,O=N.getMaterialProgram(o,E,T,h,l);if(r$1(d)&&!g&&!O.isCompiled)return void d();if(c.useProgram(O),this._setSharedUniforms(O,o,r),O.setUniform2f(\"u_tileOffset\",512*r.key.col,512*r.key.row),E.textureBinding){y.textureManager.bindTextures(c,O,E);const e=1/2**(_-r.key.level);O.setUniform1f(\"u_zoomFactor\",e);}const b=1/o.pixelRatio;O.setUniform1f(\"u_blur\",b),O.setUniform1f(\"u_antialiasing\",b),this._setSizeVVUniforms(E,O,p,r),this._setColorAndOpacityVVUniforms(E,O,p);const D=i.target.getVAO(c,G,h,g);let R=i.indexCount,j=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;g&&(R/=3,j/=3),c.bindVAO(D),this._drawFills(o,r,O,x,R,j);}_drawFills(e,t,o,r,a,i){e.context.drawElements(r,a,C.UNSIGNED_INT,i);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass O extends c$2{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([K,L$1]),this._dotVAO=null,this._dotDesc={vsPath:\"dot/dot\",fsPath:\"dot/dot\",attributes:new Map([[\"a_pos\",0]])};}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=s$3(this._dotFBO),this._dotVAO=s$3(this._dotVAO);}getGeometryType(){return E$3.FILL}supportsSymbology(e){return e===S.DOT_DENSITY}_drawFills(e,o,r,s,i,n){const{passOptions:d}=e;if(r$1(d)&&\"hittest\"===d.type)super._drawFills(e,o,r,s,i,n);else {const t=this._drawDotLocations(e,o,r,i,n);this._drawDotDensity(e,o,t);}}_drawDotDensity(e,o,r){const{context:s,painter:i,rendererInfo:n,requestRender:d}=e,a=i.materialManager.getProgram(this._dotDesc);if(r$1(d)&&!a.isCompiled)return void d();const{rendererSchema:l}=n;s$4(l,\"dot-density\");const u=this._createDotDensityMesh(s,this._dotDesc.attributes,{geometry:[{name:\"a_pos\",count:2,type:C.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});s.setStencilTestEnabled(!0),s.useProgram(a),a.setUniform1f(\"u_tileZoomFactor\",1),a.setUniform1i(\"u_texture\",this._dotSamplers[0]),a.setUniform1f(\"u_dotSize\",Math.max(l.dotSize,1)),a.setUniform1f(\"u_pixelRatio\",window.devicePixelRatio),this._setSharedUniforms(a,e,o),s.bindTexture(r,this._dotSamplers[0]),s.bindVAO(u),s.drawArrays(E$1.POINTS,0,262144);}_drawDotLocations(e,t,o,r,s){const{context:i,rendererInfo:d,requiredLevel:a}=e,l=i.getViewport(),{rendererSchema:u}=d;s$4(u,\"dot-density\");const{dotScale:c,colors:f,activeDots:T,backgroundColor:p,dotValue:x}=u;i.setViewport(0,0,512,512);const w=i.getBoundFramebufferObject(),D=this._createFBO(i);i.bindFramebuffer(D),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT|i.gl.STENCIL_BUFFER_BIT),i.setStencilTestEnabled(!1);const g=1/2**(a-t.key.level),y=o$2,S=y*window.devicePixelRatio*y*window.devicePixelRatio,E=1/g*(1/g),b=c?e.state.scale/c:1;return o.setUniform1f(\"u_tileZoomFactor\",g),o.setUniform1f(\"u_tileDotsOverArea\",S/(o$2*window.devicePixelRatio*o$2*window.devicePixelRatio)),o.setUniformMatrix4fv(\"u_dotColors\",f),o.setUniform4fv(\"u_isActive\",T),o.setUniform4fv(\"u_dotBackgroundColor\",p),o.setUniform1f(\"u_dotValue\",Math.max(1,x*b*E)),this._bindDotDensityTextures(i,o,d,y),i.drawElements(E$1.TRIANGLES,r,C.UNSIGNED_INT,s),i.setViewport(l.x,l.y,l.width,l.height),i.bindFramebuffer(w),D.colorTexture}_createFBO(e){if(t$1(this._dotFBO)){const t=512,o=512,r={target:M$2.TEXTURE_2D,pixelFormat:P.RGBA,dataType:G$1.UNSIGNED_BYTE,samplingMode:L.NEAREST,wrapMode:D$2.CLAMP_TO_EDGE,width:t,height:o},s={colorTarget:Y.TEXTURE,depthStencilTarget:V.DEPTH_STENCIL_RENDER_BUFFER},i=new r$4(e,{width:t,height:o,internalFormat:B$1.DEPTH_STENCIL});this._dotFBO=new D$1(e,s,r,i);}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null;}}_bindDotDensityTextures(e,t,o,r){const{rendererSchema:s}=o;s$4(s,\"dot-density\");const i=this._createDotDensityTextures(e,r,s.seed);t.setUniform1iv(\"u_dotTextures\",this._dotSamplers);for(let n=0;n<i.length;n++)e.bindTexture(i[n],this._dotSamplers[n]);}_createDotDensityMesh(e,t,r){if(t$1(this._dotVAO)){const o=2,s=new Int16Array(262144*o);for(let e=0;e<512;e++)for(let t=0;t<512;t++)s[o*(t+512*e)]=t,s[o*(t+512*e)+1]=e;const i=c$5.createVertex(e,F$1.STATIC_DRAW,s);this._dotVAO=new f$1(e,t,r,{geometry:i},null);}return this._dotVAO}_createDotDensityTextures(e,t,o){if(this._dotTextureSize===t&&this._seed===o||(this._disposeTextures(),this._dotTextureSize=t,this._seed=o),null===this._dotTextures){const s=new t$4(o);this._dotTextures=[this._allocDotDensityTexture(e,t,s),this._allocDotDensityTexture(e,t,s)];}return this._dotTextures}_allocDotDensityTexture(e,t,o){const r=new Float32Array(t*t*4);for(let s=0;s<r.length;s++)r[s]=o.getFloat();return new u$4(e,{wrapMode:D$2.REPEAT,pixelFormat:P.RGBA,dataType:G$1.FLOAT,samplingMode:L.NEAREST,width:t,height:t},r)}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst u$1={shader:\"materials/icon\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:C.SHORT},{location:2,name:\"a_texCoords\",count:2,type:C.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:C.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:C.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:C.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:C.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};class d$1 extends p{dispose(){}getGeometryType(){return E$3.MARKER}supportsSymbology(t){return t!==S.HEATMAP&&t!==S.PIE_CHART}drawGeometry(o,a,i,m){const{context:d,painter:c,rendererInfo:p,state:y,passOptions:_,requestRender:f}=o,E=N.load(i.materialKey),S=p$2(E.data),N$1=r$1(_)&&\"hittest\"===_.type,{shader:T,vertexLayout:g,hittestAttributes:x}=c$6(S.programSpec,u$1);let h=E$1.TRIANGLES,R=ge(E.data,g);N$1&&(R=this._getTriangleDesc(i.materialKey,R,x),h=E$1.POINTS);const{attributes:U,bufferLayouts:A}=R,O=c.materialManager.getMaterialProgram(o,E,T,U,m);if(r$1(f)&&!N$1&&!O.isCompiled)return void f();d.useProgram(O),E.textureBinding&&c.textureManager.bindTextures(d,O,E,!0),this._setSharedUniforms(O,o,a);const G=E.vvRotation?y.displayViewMat3:y.displayMat3;O.setUniformMatrix3fv(\"u_displayMat3\",G),this._setSizeVVUniforms(E,O,p,a),this._setColorAndOpacityVVUniforms(E,O,p),this._setRotationVVUniforms(E,O,p);const I=i.target.getVAO(d,A,U,N$1);let M=i.indexCount,b=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;N$1&&(M/=3,b/=3),d.bindVAO(I),this._drawMarkers(o,a,O,h,M,b,N$1),d.bindVAO(null);}_drawMarkers(t,e,o,a,r,i,n){t.context.drawElements(a,r,C.UNSIGNED_INT,i);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst x$1=s$5.getLogger(\"esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap\"),F={vsPath:\"heatmap/heatmapResolve\",fsPath:\"heatmap/heatmapResolve\",attributes:new Map([[\"a_position\",0]])};class b$1 extends d$1{supportsSymbology(e){return e===S.HEATMAP}dispose(){super.dispose(),this._accumulateOutputTexture=s$3(this._accumulateOutputTexture),this._accumulateFramebuffer=s$3(this._accumulateFramebuffer),this._resolveGradientTexture=s$3(this._resolveGradientTexture),this._tileQuad=s$3(this._tileQuad);}drawGeometry(e,t,r,a){const{defines:i}=this._loadQualityProfile(e.context);super.drawGeometry(e,t,r,a?[...a,...i]:i);}_drawMarkers(e,t,r,a,i,s,o){const{context:u}=e,l=u.getBoundFramebufferObject(),m=u.getViewport();this._prepareAccumulatePass(e,t,r,o),u.drawElements(a,i,C.UNSIGNED_INT,s),o||this._drawResolvePass(e,t,l,m);}_prepareAccumulatePass(e,t,r,a){const{context:i,rendererInfo:s,state:u,displayLevel:n}=e,{rendererSchema:d}=s;s$4(d,\"heatmap\");const{referenceScale:h,radius:c,isFieldActive:f}=d;this._loadResources(i),this._updateResources(d);const _=c*(0!==h?h/u.scale:1)*2**(t.key.level-n);r.setUniform1f(\"u_radius\",_),a||(i.bindFramebuffer(this._accumulateFramebuffer),r.setUniform1f(\"u_isFieldActive\",f),i.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),i.setBlendingEnabled(!0),i.setBlendFunction(R.ONE,R.ONE),i.setClearColor(0,0,0,0),i.clear(_$1.COLOR_BUFFER_BIT));}_drawResolvePass(e,t,r,a){const{context:i,painter:s,rendererInfo:u}=e,{rendererSchema:n}=u;s$4(n,\"heatmap\");const{radius:m,minDensity:d,densityRange:h}=n,{defines:c}=this._loadQualityProfile(i),f=s.materialManager.getProgram(F,c);i.useProgram(f),this._setSharedUniforms(f,e,t),i.bindFramebuffer(r),i.setViewport(0,0,a.width,a.height),i.setBlendFunction(R.ONE,R.ONE_MINUS_SRC_ALPHA),i.bindTexture(this._accumulateOutputTexture,8),i.bindTexture(this._resolveGradientTexture,9),f.setUniform1i(\"u_texture\",8),f.setUniform1i(\"u_gradient\",9),f.setUniform2f(\"u_densityMinAndInvRange\",d,1/h),f.setUniform1f(\"u_densityNormalization\",3/(m*m*Math.PI)),this._tileQuad.draw();}_loadResources(e){const t=e.type===o$3.WEBGL2,{dataType:r,samplingMode:a,shadingRate:s}=this._loadQualityProfile(e);this._accumulateOutputTexture??(this._accumulateOutputTexture=new u$4(e,{target:M$2.TEXTURE_2D,pixelFormat:t?P.RED:P.RGBA,internalFormat:t?r===G$1.FLOAT?U$2.R32F:U$2.R16F:P.RGBA,dataType:r,samplingMode:a,wrapMode:D$2.CLAMP_TO_EDGE,width:Math.round(512*s),height:Math.round(512*s)})),this._accumulateFramebuffer??(this._accumulateFramebuffer=new D$1(e,{},this._accumulateOutputTexture)),this._resolveGradientTexture??(this._resolveGradientTexture=new u$4(e,{target:M$2.TEXTURE_2D,pixelFormat:P.RGBA,dataType:G$1.UNSIGNED_BYTE,samplingMode:L.LINEAR,wrapMode:D$2.CLAMP_TO_EDGE})),this._tileQuad??(this._tileQuad=new n$1(e,[0,0,1,0,0,1,1,1]));}_updateResources(e){const{gradientHash:t,gradient:r}=e;this._prevGradientHash!==t&&(this._resolveGradientTexture.resize(r.length/4,1),this._resolveGradientTexture.setData(r),this._prevGradientHash=t);}_loadQualityProfile(e){if(t$1(this._qualityProfile)){const{textureFloat:t,colorBufferFloat:r}=e.capabilities,{textureFloat:a,textureFloatLinear:i,textureHalfFloat:s,textureHalfFloatLinear:o,HALF_FLOAT:u}=t,{textureFloat:n,textureHalfFloat:l,floatBlend:m}=r;let d,h;const f=a&&n&&m,_=s&&l;f&&i?(d=G$1.FLOAT,h=L.LINEAR):_&&o?(d=u,h=L.LINEAR):f?(d=G$1.FLOAT,h=L.NEAREST):_?(d=u,h=L.NEAREST):x$1.error(\"Missing webgl extensions for heatmap!\"),h===L.NEAREST&&x$1.warnOnce(\"Missing linear filtering webgl extension(s). Heatmap quality may be reduced.\"),this._qualityProfile={dataType:d,samplingMode:h,shadingRate:.5,defines:d===u?[\"heatmapPrecisionHalfFloat\"]:[]};}return this._qualityProfile}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst r={shaders:{vertexShader:n(\"tileInfo/tileInfo.vert\"),fragmentShader:n(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst A=300,b=32;class x extends a{constructor(){super(...arguments),this._color=r$3(1,0,0,1);}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null;}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1);}draw(e,r){const{context:i,requestRender:o}=e;if(!r.isReady)return;if(this._loadWGLResources(i),r$1(o)&&(!this._outlineProgram.isCompiled||!this._tileInfoProgram.isCompiled))return void o();i.bindVAO(this._outlineVertexArrayObject),i.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._outlineProgram.setUniform2f(\"u_coord_range\",r.rangeX,r.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),i.drawArrays(E$1.LINE_STRIP,0,4);const s=this._getTexture(i,r);s?(i.bindVAO(this._tileInfoVertexArrayObject),i.useProgram(this._tileInfoProgram),i.bindTexture(s,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",r.rangeX/r.width,r.rangeY/r.height),this._tileInfoProgram.setUniform2f(\"u_delta\",8,8),this._tileInfoProgram.setUniform2f(\"u_dimensions\",s.descriptor.width,s.descriptor.height),i.drawArrays(E$1.TRIANGLE_STRIP,0,4),i.bindVAO()):i.bindVAO();}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const e$1=e$4(t,e),i=e$4(t,r),a=new Int8Array([0,0,1,0,1,1,0,1]),l=c$5.createVertex(t,F$1.STATIC_DRAW,a),m=new f$1(t,e.attributes,r$5,{geometry:l}),_=new Int8Array([0,0,1,0,0,1,1,1]),f=c$5.createVertex(t,F$1.STATIC_DRAW,_),h=new f$1(t,r.attributes,r$5,{geometry:f});this._outlineProgram=e$1,this._tileInfoProgram=i,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=h;}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement(\"canvas\"),this._canvas.setAttribute(\"id\",\"canvas2d\"),this._canvas.setAttribute(\"width\",`${A}`),this._canvas.setAttribute(\"height\",`${b}`),this._canvas.setAttribute(\"style\",\"display:none\"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const o=this._canvas,s=o.getContext(\"2d\");return s.font=\"24px sans-serif\",s.textAlign=\"left\",s.textBaseline=\"top\",s.clearRect(0,0,A,b),r>1e5?(s.fillStyle=\"red\",s.fillRect(0,0,A,b),s.fillStyle=\"black\"):(s.clearRect(0,0,A,b),s.fillStyle=\"blue\"),s.fillText(i,0,0),e.texture=new u$4(t,{target:M$2.TEXTURE_2D,pixelFormat:P.RGBA,dataType:G$1.UNSIGNED_BYTE,samplingMode:L.NEAREST,wrapMode:D$2.CLAMP_TO_EDGE},o),e.texture}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass s$2 extends d$1{supportsSymbology(r){return r===S.PIE_CHART}_drawMarkers(o,r,s,n,l,f,u){const{context:i}=o,{rendererInfo:m}=o,{rendererSchema:a}=m;s$4(a,\"pie-chart\"),s.setUniform4fv(\"u_colors\",a.colors),s.setUniform4fv(\"u_defaultColor\",a.defaultColor),s.setUniform4fv(\"u_othersColor\",a.othersColor),s.setUniform4fv(\"u_outlineColor\",a.outlineColor),s.setUniform1f(\"u_donutRatio\",a.holePercentage),s.setUniform1f(\"u_sectorThreshold\",a.sectorThreshold),s.setUniform1f(\"u_outlineWidth\",a.outlineWidth),i.drawElements(n,l,C.UNSIGNED_INT,f);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass h$1 extends a{constructor(){super(...arguments),this._color=r$3(1,0,0,1),this._initialized=!1;}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null);}prepareState({context:r},t){r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(O$2.KEEP,O$2.KEEP,O$2.REPLACE),r.setStencilWriteMask(255),r.setStencilFunctionSeparate(N$1.FRONT_AND_BACK,I.GREATER,t.stencilRef,255);}draw(t,e){const{context:i,requestRender:s}=t;this._initialized||this._initialize(i),!r$1(s)||this._solidProgram.isCompiled?(i.bindVAO(this._solidVertexArrayObject),i.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._solidProgram.setUniform2fv(\"u_coord_range\",[e.rangeX,e.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),i.drawArrays(E$1.TRIANGLE_STRIP,0,4),i.bindVAO()):s();}_initialize(r){if(this._initialized)return !0;const t=e$4(r,e);if(!t)return !1;const i=new Int8Array([0,0,1,0,0,1,1,1]),a=c$5.createVertex(r,F$1.STATIC_DRAW,i),l=new f$1(r,e.attributes,r$5,{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass d extends a{constructor(){super(...arguments),this._color=r$3(1,0,0,1),this._patternMatrix=e$2(),this._programOptions={id:!1,pattern:!1};}dispose(){this._vao&&(this._vao.dispose(),this._vao=null);}drawMany(e,o){const{context:c,painter:m,styleLayerUID:p,requestRender:_}=e;this._loadWGLResources(e);const d=e.displayLevel,h=e.styleLayer,g=h.backgroundMaterial,v=m.vectorTilesMaterialManager,b=h.getPaintValue(\"background-color\",d),y=h.getPaintValue(\"background-opacity\",d),M=h.getPaintValue(\"background-pattern\",d),x=void 0!==M,j=b[3]*y,U=1|window.devicePixelRatio,L$1=e.spriteMosaic;let w,A;const P=U>_$2?2:1,I$2=e.drawPhase===I$1.HITTEST,R=this._programOptions;R.id=I$2,R.pattern=x;const k=v.getMaterialProgram(c,g,R);if(!r$1(_)||I$2||k.isCompiled){if(c.bindVAO(this._vao),c.useProgram(k),x){const t=L$1.getMosaicItemPosition(M,!0);if(r$1(t)){const{tl:e,br:o,page:s}=t;w=o[0]-e[0],A=o[1]-e[1];const a=L$1.getPageSize(s);r$1(a)&&(L$1.bind(c,L.LINEAR,s,Z),k.setUniform4f(\"u_tlbr\",e[0],e[1],o[0],o[1]),k.setUniform2fv(\"u_mosaicSize\",a),k.setUniform1i(\"u_texture\",Z));}k.setUniform1f(\"u_opacity\",y);}else this._color[0]=j*b[0],this._color[1]=j*b[1],this._color[2]=j*b[2],this._color[3]=j,k.setUniform4fv(\"u_color\",this._color);if(k.setUniform1f(\"u_depth\",h.z||0),I$2){const t=M$3(p+1);k.setUniform4fv(\"u_id\",t);}for(const r of o){if(k.setUniform1f(\"u_coord_range\",r.rangeX),k.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),x){const e=Math.max(2**(Math.round(d)-r.key.level),1),o=P*r.width*e,i=o/c$7(w),s=o/c$7(A);this._patternMatrix[0]=i,this._patternMatrix[4]=s,k.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix);}c.setStencilFunction(I.EQUAL,r.stencilRef,255),c.drawArrays(E$1.TRIANGLE_STRIP,0,4);}}else _();}_loadWGLResources(t){if(this._vao)return;const{context:r,styleLayer:e}=t,o=e.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=c$5.createVertex(r,F$1.STATIC_DRAW,i),a=new f$1(r,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:s});this._vao=a;}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass c$1 extends a{constructor(){super(...arguments),this._programOptions={id:!1};}dispose(){}drawMany(a,c){const{context:m,displayLevel:f,requiredLevel:u,state:d,drawPhase:p,painter:y,spriteMosaic:g,styleLayerUID:v,requestRender:E}=a;if(!c.some((e=>e.layerData.get(v)?.circleIndexCount??!1)))return;const M=a.styleLayer,T=M.circleMaterial,x=y.vectorTilesMaterialManager,I$2=1.2,U=M.getPaintValue(\"circle-translate\",f),_=M.getPaintValue(\"circle-translate-anchor\",f),h=p===I$1.HITTEST,L=this._programOptions;L.id=h;const R=x.getMaterialProgram(m,T,L);if(!h&&r$1(E)&&!R.isCompiled)return void E();m.useProgram(R),R.setUniformMatrix3fv(\"u_displayMat3\",_===r$6.VIEWPORT?d.displayMat3:d.displayViewMat3),R.setUniform2fv(\"u_circleTranslation\",U),R.setUniform1f(\"u_depth\",M.z),R.setUniform1f(\"u_antialiasingWidth\",I$2);let S=-1;if(h){const e=M$3(v+1);R.setUniform4fv(\"u_id\",e);}for(const e of c){if(!e.layerData.has(v))continue;e.key.level!==S&&(S=e.key.level,T.setDataUniforms(R,f,M,S,g));const r=e.layerData.get(v);if(!r.circleIndexCount)continue;r.prepareForRendering(m);const i=r.circleVertexArrayObject;t$1(i)||(m.bindVAO(i),R.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),u!==e.key.level?m.setStencilFunction(I.EQUAL,e.stencilRef,255):m.setStencilFunction(I.GREATER,255,255),m.drawElements(E$1.TRIANGLES,r.circleIndexCount,C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*r.circleIndexStart),e.triangleCount+=r.circleIndexCount/3);}}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst c=1/65536;class m$3 extends a{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1};}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:r,renderPass:n,spriteMosaic:s,styleLayerUID:l}=t;let f=!1;for(const a of e)if(a.layerData.has(l)){const t=a.layerData.get(l);if(t.fillIndexCount>0||t.outlineIndexCount>0){f=!0;break}}if(!f)return;const u=t.styleLayer,d=u.getPaintProperty(\"fill-pattern\"),c=void 0!==d,m=c&&d.isDataDriven;let p;if(c&&!m){const t=d.getValue(i);p=s.getMosaicItemPosition(t,!0);}const y=!c&&u.getPaintValue(\"fill-antialias\",i);let g=!0,_=1;if(!c){const t=u.getPaintProperty(\"fill-color\"),e=u.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=u.getPaintValue(\"fill-color\",i);_=u.getPaintValue(\"fill-opacity\",i)*t[3],_>=1&&(g=!1);}}if(g&&\"opaque\"===n)return;let E;r===I$1.HITTEST&&(E=M$3(l+1));const v=u.getPaintValue(\"fill-translate\",i),M=u.getPaintValue(\"fill-translate-anchor\",i);(g||\"translucent\"!==n)&&this._drawFill(t,l,u,e,v,M,c,p,m,E);const P=!u.hasDataDrivenOutlineColor&&u.outlineUsesFillColor&&_<1;y&&\"opaque\"!==n&&!P&&this._drawOutline(t,l,u,e,v,M,E);}_drawFill(o,s,m,p,y,g,_,E,v,M){if(_&&!v&&t$1(E))return;const{context:P,displayLevel:I$2,state:T,drawPhase:U,painter:x,pixelRatio:h,spriteMosaic:D,requestRender:S}=o,R=m.fillMaterial,N=x.vectorTilesMaterialManager,w=h>_$2?2:1,L$1=U===I$1.HITTEST,A=this._fillProgramOptions;A.id=L$1,A.pattern=_;const C$1=N.getMaterialProgram(P,R,A);if(r$1(S)&&!L$1&&!C$1.isCompiled)return void S();if(P.useProgram(C$1),r$1(E)){const{page:t}=E,i=D.getPageSize(t);r$1(i)&&(D.bind(P,L.LINEAR,t,Z),C$1.setUniform2fv(\"u_mosaicSize\",i),C$1.setUniform1i(\"u_texture\",Z));}C$1.setUniformMatrix3fv(\"u_displayMat3\",g===r$6.VIEWPORT?T.displayMat3:T.displayViewMat3),C$1.setUniform2fv(\"u_fillTranslation\",y),C$1.setUniform1f(\"u_depth\",m.z+c),L$1&&C$1.setUniform4fv(\"u_id\",M);let V=-1;for(const i of p){if(!i.layerData.has(s))continue;i.key.level!==V&&(V=i.key.level,R.setDataUniforms(C$1,I$2,m,V,D));const n=i.layerData.get(s);if(!n.fillIndexCount)continue;n.prepareForRendering(P);const a=n.fillVertexArrayObject;if(!t$1(a)){if(P.bindVAO(a),C$1.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.dvs),P.setStencilFunction(I.EQUAL,i.stencilRef,255),_){const t=Math.max(2**(Math.round(I$2)-i.key.level),1),e=i.rangeX/(w*i.width*t);C$1.setUniform1f(\"u_patternFactor\",e);}if(v){const t=n.patternMap;if(!t)continue;for(const[i,n]of t){const t=D.getPageSize(i);r$1(t)&&(D.bind(P,L.LINEAR,i,Z),C$1.setUniform2fv(\"u_mosaicSize\",t),C$1.setUniform1i(\"u_texture\",Z),P.drawElements(E$1.TRIANGLES,n[1],C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]));}}else P.drawElements(E$1.TRIANGLES,n.fillIndexCount,C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n.fillIndexStart);i.triangleCount+=n.fillIndexCount/3;}}}_drawOutline(r,n,o,s,l,m,p){const{context:y,displayLevel:g,state:_,drawPhase:E,painter:v,pixelRatio:M,spriteMosaic:P,requestRender:I$2}=r,T=o.outlineMaterial,U=v.vectorTilesMaterialManager,x=.75/M,h=E===I$1.HITTEST,D=this._outlineProgramOptions;D.id=h;const S=U.getMaterialProgram(y,T,D);if(r$1(I$2)&&!h&&!S.isCompiled)return void I$2();y.useProgram(S),S.setUniformMatrix3fv(\"u_displayMat3\",m===r$6.VIEWPORT?_.displayMat3:_.displayViewMat3),S.setUniform2fv(\"u_fillTranslation\",l),S.setUniform1f(\"u_depth\",o.z+c),S.setUniform1f(\"u_outline_width\",x),h&&S.setUniform4fv(\"u_id\",p);let R=-1;for(const e of s){if(!e.layerData.has(n))continue;e.key.level!==R&&(R=e.key.level,T.setDataUniforms(S,g,o,R,P));const i=e.layerData.get(n);if(i.prepareForRendering(y),!i.outlineIndexCount)continue;const r=i.outlineVertexArrayObject;t$1(r)||(y.bindVAO(r),S.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),y.setStencilFunction(I.EQUAL,e.stencilRef,255),y.drawElements(E$1.TRIANGLES,i.outlineIndexCount,C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.outlineIndexStart),e.triangleCount+=i.outlineIndexCount/3);}}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass u extends a{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1};}dispose(){}drawMany(o,u){const{context:c,displayLevel:d,state:p,drawPhase:g,painter:y,pixelRatio:E,spriteMosaic:M,styleLayerUID:_,requestRender:v}=o;if(!u.some((e=>e.layerData.get(_)?.lineIndexCount??!1)))return;const U=o.styleLayer,I$2=U.lineMaterial,P=y.vectorTilesMaterialManager,x=U.getPaintValue(\"line-translate\",d),T=U.getPaintValue(\"line-translate-anchor\",d),S=U.getPaintProperty(\"line-pattern\"),D=void 0!==S,L$1=D&&S.isDataDriven;let N,R;if(D&&!L$1){const e=S.getValue(d);N=M.getMosaicItemPosition(e);}let V=!1;if(!D){const e=U.getPaintProperty(\"line-dasharray\");if(R=void 0!==e,V=R&&e.isDataDriven,R&&!V){const t=e.getValue(d),i=U.getDashKey(t,U.getLayoutValue(\"line-cap\",d));N=M.getMosaicItemPosition(i);}}const h=1/E,A=g===I$1.HITTEST,j=this._programOptions;j.id=A,j.pattern=D,j.sdf=R;const w=P.getMaterialProgram(c,I$2,j);if(r$1(v)&&!A&&!w.isCompiled)return void v();if(c.useProgram(w),w.setUniformMatrix3fv(\"u_displayViewMat3\",p.displayViewMat3),w.setUniformMatrix3fv(\"u_displayMat3\",T===r$6.VIEWPORT?p.displayMat3:p.displayViewMat3),w.setUniform2fv(\"u_lineTranslation\",x),w.setUniform1f(\"u_depth\",U.z),w.setUniform1f(\"u_antialiasing\",h),A){const e=M$3(_+1);w.setUniform4fv(\"u_id\",e);}if(N&&r$1(N)){const{page:t}=N,i=M.getPageSize(t);r$1(i)&&(M.bind(c,L.LINEAR,t,Z),w.setUniform2fv(\"u_mosaicSize\",i),w.setUniform1i(\"u_texture\",Z));}let b=-1;for(const i of u){if(!i.layerData.has(_))continue;i.key.level!==b&&(b=i.key.level,I$2.setDataUniforms(w,d,U,b,M));const r=2**(d-b)/E;w.setUniform1f(\"u_zoomFactor\",r);const a=i.layerData.get(_);if(!a.lineIndexCount)continue;a.prepareForRendering(c);const o=a.lineVertexArrayObject;if(!t$1(o)){if(c.bindVAO(o),w.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.dvs),c.setStencilFunction(I.EQUAL,i.stencilRef,255),L$1||V){const t=a.patternMap;if(!t)continue;for(const[i,r]of t){const t=M.getPageSize(i);r$1(t)&&(M.bind(c,L.LINEAR,i,Z),w.setUniform2fv(\"u_mosaicSize\",t),w.setUniform1i(\"u_texture\",Z),c.drawElements(E$1.TRIANGLES,r[1],C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*r[0]));}}else c.drawElements(E$1.TRIANGLES,a.lineIndexCount,C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*a.lineIndexStart);i.triangleCount+=a.lineIndexCount/3;}}}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst h=1/65536;class M extends a{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=n$2();}dispose(){}drawMany(e,t){const{drawPhase:i,styleLayerUID:a}=e,r=e.styleLayer;let s;i===I$1.HITTEST&&(s=M$3(a+1)),this._drawIcons(e,r,t,s),this._drawText(e,r,t,s);}_drawIcons(i,a,f,p){const{context:c,displayLevel:d,drawPhase:g,painter:y,spriteMosaic:_,state:h,styleLayerUID:M,requestRender:P}=i,T=a.iconMaterial,U=y.vectorTilesMaterialManager;let E,x=!1;for(const e of f)if(e.layerData.has(M)&&(E=e.layerData.get(M),E.iconPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const v=a.getPaintValue(\"icon-translate\",d),I=a.getPaintValue(\"icon-translate-anchor\",d);let S=a.getLayoutValue(\"icon-rotation-alignment\",d);S===l$3.AUTO&&(S=a.getLayoutValue(\"symbol-placement\",d)===n$3.POINT?l$3.VIEWPORT:l$3.MAP);const D=S===l$3.MAP,V=a.getLayoutValue(\"icon-keep-upright\",d)&&D,R=E.isIconSDF,w=g===I$1.HITTEST,A=this._iconProgramOptions;A.id=w,A.sdf=R;const L=U.getMaterialProgram(c,T,A);if(r$1(P)&&!w&&!L.isCompiled)return void P();c.useProgram(L),L.setUniformMatrix3fv(\"u_displayViewMat3\",S===l$3.MAP?h.displayViewMat3:h.displayMat3),L.setUniformMatrix3fv(\"u_displayMat3\",I===r$6.VIEWPORT?h.displayMat3:h.displayViewMat3),L.setUniform2fv(\"u_iconTranslation\",v),L.setUniform1f(\"u_depth\",a.z),L.setUniform1f(\"u_mapRotation\",M$4(h.rotation)),L.setUniform1f(\"u_keepUpright\",V?1:0),L.setUniform1f(\"u_level\",10*d),L.setUniform1i(\"u_texture\",Z),L.setUniform1f(\"u_fadeDuration\",e$5/1e3),w&&L.setUniform4fv(\"u_id\",p);let O=-1;for(const e of f){if(!e.layerData.has(M))continue;if(e.key.level!==O&&(O=e.key.level,T.setDataUniforms(L,d,a,O,_)),E=e.layerData.get(M),0===E.iconPerPageElementsMap.size)continue;E.prepareForRendering(c),E.updateOpacityInfo();const r=E.iconVertexArrayObject;if(!t$1(r)){c.bindVAO(r),L.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),L.setUniform1f(\"u_time\",(performance.now()-E.lastOpacityUpdate)/1e3);for(const[t,a]of E.iconPerPageElementsMap)this._renderIconRange(i,L,a,t,e);}}}_renderIconRange(e,t,i,a,r){const{context:s,spriteMosaic:n}=e;this._spritesTextureSize[0]=n.getWidth(a)/4,this._spritesTextureSize[1]=n.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),n.bind(s,L.LINEAR,a,Z),s.setStencilTestEnabled(!0),s.setStencilFunction(I.GREATER,255,255),s.setStencilWriteMask(0),s.drawElements(E$1.TRIANGLES,i[1],C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3;}_drawText(i,l,p,c){const{context:d,displayLevel:y,drawPhase:_,glyphMosaic:M,painter:P,pixelRatio:T,spriteMosaic:U,state:E,styleLayerUID:x,requestRender:v}=i,I$2=l.textMaterial,S=P.vectorTilesMaterialManager;let D,V=!1;for(const e of p)if(e.layerData.has(x)&&(D=e.layerData.get(x),D.glyphPerPageElementsMap.size>0)){V=!0;break}if(!V)return;const R=l.getPaintProperty(\"text-opacity\");if(R&&!R.isDataDriven&&0===R.getValue(y))return;const w=l.getPaintProperty(\"text-color\"),A=!w||w.isDataDriven||w.getValue(y)[3]>0,L=l.getPaintProperty(\"text-halo-width\"),O=l.getPaintProperty(\"text-halo-color\"),N=(!L||L.isDataDriven||L.getValue(y)>0)&&(!O||O.isDataDriven||O.getValue(y)[3]>0);if(!A&&!N)return;const b=24/8;let z=l.getLayoutValue(\"text-rotation-alignment\",y);z===l$3.AUTO&&(z=l.getLayoutValue(\"symbol-placement\",y)===n$3.POINT?l$3.VIEWPORT:l$3.MAP);const k=z===l$3.MAP,j=l.getLayoutValue(\"text-keep-upright\",y)&&k,G=_===I$1.HITTEST,W=.8*b/T;this._glyphTextureSize||(this._glyphTextureSize=t$2(M.width/4,M.height/4));const C=l.getPaintValue(\"text-translate\",y),F=l.getPaintValue(\"text-translate-anchor\",y),B=this._sdfProgramOptions;B.id=G;const H=S.getMaterialProgram(d,I$2,B);if(r$1(v)&&!G&&!H.isCompiled)return void v();d.useProgram(H),H.setUniformMatrix3fv(\"u_displayViewMat3\",z===l$3.MAP?E.displayViewMat3:E.displayMat3),H.setUniformMatrix3fv(\"u_displayMat3\",F===r$6.VIEWPORT?E.displayMat3:E.displayViewMat3),H.setUniform2fv(\"u_textTranslation\",C),H.setUniform1f(\"u_depth\",l.z+h),H.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),H.setUniform1f(\"u_mapRotation\",M$4(E.rotation)),H.setUniform1f(\"u_keepUpright\",j?1:0),H.setUniform1f(\"u_level\",10*y),H.setUniform1i(\"u_texture\",$),H.setUniform1f(\"u_antialiasingWidth\",W),H.setUniform1f(\"u_fadeDuration\",e$5/1e3),G&&H.setUniform4fv(\"u_id\",c);let Y=-1;for(const e of p){if(!e.layerData.has(x))continue;if(e.key.level!==Y&&(Y=e.key.level,I$2.setDataUniforms(H,y,l,Y,U)),D=e.layerData.get(x),0===D.glyphPerPageElementsMap.size)continue;D.prepareForRendering(d),D.updateOpacityInfo();const i=D.textVertexArrayObject;if(t$1(i))continue;d.bindVAO(i),H.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),d.setStencilTestEnabled(!0),d.setStencilFunction(I.GREATER,255,255),d.setStencilWriteMask(0);const a=(performance.now()-D.lastOpacityUpdate)/1e3;H.setUniform1f(\"u_time\",a),D.glyphPerPageElementsMap.forEach(((t,i)=>{this._renderGlyphRange(d,t,i,M,H,N,A,e);}));}}_renderGlyphRange(e,t,i,a,r,s,n,o){a.bind(e,L.LINEAR,i,$),s&&(r.setUniform1f(\"u_halo\",1),e.drawElements(E$1.TRIANGLES,t[1],C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),o.triangleCount+=t[1]/3),n&&(r.setUniform1f(\"u_halo\",0),e.drawElements(E$1.TRIANGLES,t[1],C.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),o.triangleCount+=t[1]/3);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst m$2=e=>ge(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_id\",count:4,type:C.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texAndSize\",count:4,type:C.UNSIGNED_BYTE},{location:5,name:\"a_refSymbolAndPlacementOffset\",count:4,type:C.UNSIGNED_BYTE},{location:6,name:\"a_glyphData\",count:4,type:C.UNSIGNED_BYTE},{location:7,name:\"a_vertexOffset\",count:2,type:C.SHORT},{location:8,name:\"a_texCoords\",count:2,type:C.UNSIGNED_SHORT}]});class l extends p{dispose(){}getGeometryType(){return E$3.LABEL}supportsSymbology(e){return !0}drawGeometry(t,o,a,l){const{context:u,painter:p,state:c,rendererInfo:d,passOptions:f,requestRender:y}=t,_=Z$1.load(a.materialKey),E=r$1(f)&&\"hittest\"===f.type,N=_.mapAligned?1:0;if(!N&&Math.abs(o.key.level-Math.round(100*t.displayLevel)/100)>=1)return;const{bufferLayouts:S,attributes:U}=m$2(_),T=p.materialManager.getMaterialProgram(t,_,\"materials/label\",U,l);if(r$1(y)&&!E&&!T.isCompiled)return void y();t.context.setStencilFunction(I.EQUAL,0,255),u.useProgram(T),this._setSharedUniforms(T,t,o),p.textureManager.bindTextures(u,T,_);const g=1===N?c.displayViewMat3:c.displayMat3;this._setSizeVVUniforms(_,T,d,o),T.setUniform1f(\"u_mapRotation\",Math.floor(c.rotation/360*254)),T.setUniform1f(\"u_mapAligned\",N),T.setUniformMatrix3fv(\"u_displayMat3\",g),T.setUniform1f(\"u_opacity\",1),T.setUniform2fv(\"u_screenSize\",t.state.size),T.setUniform1f(\"u_isHalo\",1);const G=a.target.getVAO(u,S,U),I$1=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;u.bindVAO(G),u.drawElements(E$1.TRIANGLES,a.indexCount,C.UNSIGNED_INT,I$1),T.setUniform1f(\"u_isHalo\",0),u.drawElements(E$1.TRIANGLES,a.indexCount,C.UNSIGNED_INT,I$1),u.setStencilTestEnabled(!0),u.setBlendingEnabled(!0);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst s$1=e=>ge(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_id\",count:4,type:C.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_offsetAndNormal\",count:4,type:C.BYTE},{location:4,name:\"a_accumulatedDistanceAndHalfWidth\",count:2,type:C.UNSIGNED_SHORT},{location:5,name:\"a_tlbr\",count:4,type:C.UNSIGNED_SHORT},{location:6,name:\"a_segmentDirection\",count:4,type:C.BYTE},{location:7,name:\"a_aux\",count:2,type:C.UNSIGNED_SHORT},{location:8,name:\"a_zoomRange\",count:2,type:C.UNSIGNED_SHORT}]});class m$1 extends p{dispose(){}getGeometryType(){return E$3.LINE}supportsSymbology(e){return !0}drawGeometry(t,o,a,m){const{context:l,painter:c,rendererInfo:u,displayLevel:p,passOptions:y,requestRender:d}=t,_=C$2.load(a.materialKey),f=r$1(y)&&\"hittest\"===y.type;let E=s$1(_),N=E$1.TRIANGLES;f&&(E=this._getTriangleDesc(a.materialKey,E),N=E$1.POINTS);const{attributes:g,bufferLayouts:S}=E,T=c.materialManager.getMaterialProgram(t,_,\"materials/line\",g,m);if(r$1(d)&&!f&&!T.isCompiled)return void d();const U=1/t.pixelRatio,G=0;l.useProgram(T),this._setSharedUniforms(T,t,o),_.textureBinding&&c.textureManager.bindTextures(l,T,_);const I=2**(p-o.key.level);T.setUniform1f(\"u_zoomFactor\",I),T.setUniform1f(\"u_blur\",G+U),T.setUniform1f(\"u_antialiasing\",U),this._setSizeVVUniforms(_,T,u,o),this._setColorAndOpacityVVUniforms(_,T,u),l.setFaceCullingEnabled(!1);const b=a.target.getVAO(l,S,g,f);let x=a.indexCount,D=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;f&&(x/=3,D/=3),l.bindVAO(b),l.drawElements(N,x,C.UNSIGNED_INT,D);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst s=t=>ge(t.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_id\",count:4,type:C.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texFontSize\",count:4,type:C.UNSIGNED_BYTE},{location:5,name:\"a_aux\",count:4,type:C.BYTE},{location:6,name:\"a_zoomRange\",count:2,type:C.UNSIGNED_SHORT},{location:7,name:\"a_vertexOffset\",count:2,type:C.SHORT},{location:8,name:\"a_texCoords\",count:2,type:C.UNSIGNED_SHORT}]});class m extends p{dispose(){}getGeometryType(){return E$3.TEXT}supportsSymbology(t){return !0}drawGeometry(e,o,a,m){const{context:l,painter:p,rendererInfo:u,state:y,passOptions:d,requestRender:_}=e,c=P$1.load(a.materialKey),f=r$1(d)&&\"hittest\"===d.type,{bufferLayouts:E,attributes:N}=s(c),S=p.materialManager.getMaterialProgram(e,c,\"materials/text\",N,m);if(r$1(_)&&!f&&!S.isCompiled)return void _();l.useProgram(S);let T=E$1.TRIANGLES;f&&(T=E$1.POINTS),this._setSharedUniforms(S,e,o),p.textureManager.bindTextures(l,S,c),S.setUniformMatrix3fv(\"u_displayMat3\",y.displayMat3),S.setUniformMatrix3fv(\"u_displayViewMat3\",y.displayViewMat3),this._setSizeVVUniforms(c,S,u,o),this._setColorAndOpacityVVUniforms(c,S,u),this._setRotationVVUniforms(c,S,u),S.setUniform1f(\"u_isHalo\",1);const U=a.target.getVAO(l,E,N),x=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;l.bindVAO(U),l.drawElements(E$1.TRIANGLES,a.indexCount,C.UNSIGNED_INT,x),S.setUniform1f(\"u_isHalo\",0),l.drawElements(T,a.indexCount,C.UNSIGNED_INT,x);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst W={marker:d$1,line:m$1,fill:c$2,text:m,label:l,clip:f,stencil:h$1,bitmap:m$5,overlay:m$4,raster:m$7,rasterVF:m$6,flow:i,tileInfo:x,vtlBackground:d,vtlFill:m$3,vtlLine:u,vtlCircle:c$1,vtlSymbol:M,dotDensity:O,heatmap:b$1,pieChart:s$2},y={vtlBackground:d,vtlFill:m$3,vtlLine:u,vtlCircle:c$1,vtlSymbol:M};\n\nexport { W, n$1 as a, h$1 as h, i, m$6 as m, n, p$1 as p, x, y };\n"],"names":["o","Math","PI","N","LN2","a","n","t","h","M","P","log","g","r","e$1","e","this","readFile","_resolve","Map","has","get","_read","Error","s","exec","l","push","path","start","index","length","forEach","slice","set","shaders","vertexShader","fragmentShader","attributes","i","u","m","p","BACKGROUND","FILL","LINE","SYMBOL","CIRCLE","VISIBLE","NONE","POINT","LINE_CENTER","MAP","VIEWPORT","AUTO","LEFT","CENTER","RIGHT","TOP","BOTTOM","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","UPPERCASE","LOWERCASE","HORIZONTAL","VERTICAL","f","backgroundLayoutDefinition","visibility","type","values","default","fillLayoutDefinition","lineLayoutDefinition","n$1","symbolLayoutDefinition","minimum","value","circleLayoutDefinition","backgroundPaintDefinition","maximum","fillPaintDefinition","linePaintDefinition","symbolPaintDefinition","rasterPaintDefinition","circlePaintDefinition","name","constructor","draw","arguments","_visualState","time","dvsMat3","e$2","displayViewMat3","context","setColorMask","setStencilFunction","I","requestRender","displayData","t$1","state","attach","resources","ready","r$1","transforms","dvs","flowStyle","render","animated","x$2","bandCount","outMin","outMax","minCutOff","maxCutOff","factor","useGamma","gamma","gammaCorrection","colormap","colormapOffset","stretchType","p$1","_textureInvalidated","_colormapTextureInvalidated","_supportsBilinearTexture","stencilRef","coordScale","_symbolizerParameters","height","isRendereredSource","pixelRatio","resolution","rotation","_source","rawPixelData","_suspended","_bandIds","_interpolation","_transformGrid","width","x","y","source","transformGrid","interpolation","getTextures","textures","dispose","_rasterTexture","_transformGridTexture","_colormapTexture","_rasterTextureBandIds","invalidateTexture","stage","_isBandIdschanged","setSamplingMode","_getTextureSamplingMethod","L","r$2","toScreenNoRotation","d","_","M$1","t$2","h$2","b$2","i$1","names","_isValidSource","_updateColormapTexture","_createOrDestroyRasterTexture","E","setData","suspended","l$2","bandIds","capabilities","textureFloat","textureFloatLinear","join","pixels","symbolizerParameters","_colormap","some","T$1","a$1","rctx","_vertexBuffer","c$5","F$1","Uint16Array","_vao","f$1","geometry","t$3","C","_count","bindVAO","drawArrays","E$1","m$7","_desc","lut","vsPath","fsPath","stretch","hillshade","_rendererUniformInfos","_quad","setBlendingEnabled","setBlendFunctionSeparate","R","setStencilWriteMask","setStencilTestEnabled","T","timeline","painter","begin","updateTexture","_getShaderVariations","materialManager","getProgram","_drawWithProgram","end","isCompiled","g$1","b","S","opacity","w","useProgram","_getUniformInfos","U$1","U","j","h$3","R$1","u_coordScale","u_dvsMat3","A$1","d$3","O$1","F$2","spacing","l$1","Float32Array","c$4","beaufort_ft","beaufort_m","beaufort_km","beaufort_mi","beaufort_kn","classified_arrow","ocean_current_m","ocean_current_kn","single_arrow","wind_speed","m$6","magdir","scalar","setStencilOp","O$2","validPixelCount","updateVectorFieldVAO","renderPass","vaoData","_drawScalars","vao","elementCount","_drawTriangles","dataRange","rotationType","setUniform2fv","setUniform1f","setUniformMatrix3fv","style","v","symbolPercentRange","setUniform4fv","_getSymbolSize","drawElements","c","key","displayLevel","level","symbolTileSize","round","offset","o$1","nearest","defines","samplingMode","mips","bilinear","bicubic","trilinear","m$5","blendFunction","renderingOptions","isSourceScaled","d$2","computedOpacity","setSamplingProfile","bind","A$2","setUniform1i","background","bitBlit","blend","dot","filtering","fx","integrate","heatmap","heatmapResolve","highlight","magnifier","materials","fill","hittest","icon","heatmapAccumulate","label","line","pie","shared","text","overlay","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","bitmap","common","flow","imagery","particles","streamlines","reproject","stencil","tileInfo","util","e$3","split","resolveIncludes","_color","r$3","_program","setFaceCullingEnabled","ge","location","count","getVAO","bufferLayouts","indexBuffer","e$4","displayMat3","size","m$4","isReady","isWrapAround","texture","tex","bindTexture","_computeDesc","includes","getGeometryType","commit","getGeometry","attributeView","bindTextures","forEachCommand","materialKey","symbologyType","supportsSymbology","drawGeometry","passOptions","position","distance","tileMat3","viewMat3","at","B","C$1","D","E$2","F$3","G","vvSizeMinMaxValue","vvSizeScaleStops","vvSizeScaleStopsValue","vvSizeFieldStops","getSizeVVFieldStops","setUniform1fv","sizes","vvSizeUnitValue","vvSizeUnitValueToPixelsRatio","vvColor","vvColorValues","vvColors","vvOpacity","vvOpacityValues","vvOpacities","vvRotation","vvMaterialParameters","vvRotationType","map","findIndex","strides","max","divisor","normalized","stride","c$2","E$3","rendererInfo","requiredLevel","p$2","data","c$6","programSpec","splice","shader","vertexLayout","u$2","hittestAttributes","_getTriangleDesc","O","getMaterialProgram","_setSharedUniforms","setUniform2f","col","row","textureBinding","textureManager","_setSizeVVUniforms","_setColorAndOpacityVVUniforms","target","indexCount","indexFrom","Uint32Array","BYTES_PER_ELEMENT","_drawFills","_dotTextureSize","_dotTextures","_dotSamplers","Int32Array","K","L$1","_dotVAO","_dotDesc","_disposeTextures","_dotFBO","s$3","_drawDotLocations","_drawDotDensity","rendererSchema","s$4","_createDotDensityMesh","dotSize","window","devicePixelRatio","getViewport","dotScale","colors","activeDots","backgroundColor","dotValue","setViewport","getBoundFramebufferObject","_createFBO","bindFramebuffer","setClearColor","clear","gl","COLOR_BUFFER_BIT","STENCIL_BUFFER_BIT","o$2","scale","setUniformMatrix4fv","_bindDotDensityTextures","colorTexture","M$2","pixelFormat","dataType","G$1","wrapMode","D$2","colorTarget","Y","depthStencilTarget","V","r$4","internalFormat","B$1","D$1","_createDotDensityTextures","seed","setUniform1iv","Int16Array","_seed","t$4","_allocDotDensityTexture","getFloat","u$4","u$1","d$1","N$1","A","_setRotationVVUniforms","_drawMarkers","x$1","s$5","F","b$1","_accumulateOutputTexture","_accumulateFramebuffer","_resolveGradientTexture","_tileQuad","_loadQualityProfile","_prepareAccumulatePass","_drawResolvePass","referenceScale","radius","isFieldActive","_loadResources","_updateResources","setBlendFunction","_$1","minDensity","densityRange","o$3","shadingRate","U$2","gradientHash","gradient","_prevGradientHash","resize","_qualityProfile","colorBufferFloat","textureHalfFloat","textureHalfFloatLinear","HALF_FLOAT","floatBlend","error","warnOnce","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_canvas","_loadWGLResources","rangeX","rangeY","_getTexture","descriptor","Int8Array","r$5","triangleCountReportedInDebug","triangleCount","document","createElement","setAttribute","id","getContext","font","textAlign","textBaseline","clearRect","fillStyle","fillRect","fillText","s$2","defaultColor","othersColor","outlineColor","holePercentage","sectorThreshold","outlineWidth","h$1","_initialized","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","setStencilFunctionSeparate","_initialize","_patternMatrix","_programOptions","pattern","styleLayerUID","styleLayer","backgroundMaterial","vectorTilesMaterialManager","getPaintValue","spriteMosaic","_$2","I$2","drawPhase","I$1","k","getMosaicItemPosition","tl","br","page","getPageSize","Z","setUniform4f","z","M$3","c$7","getAttributeLocations","getLayoutInfo","c$1","layerData","circleIndexCount","circleMaterial","r$6","setDataUniforms","prepareForRendering","circleVertexArrayObject","circleIndexStart","m$3","_fillProgramOptions","_outlineProgramOptions","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","fillMaterial","fillVertexArrayObject","patternMap","fillIndexStart","outlineMaterial","outlineVertexArrayObject","outlineIndexStart","sdf","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","lineVertexArrayObject","lineIndexStart","_iconProgramOptions","_sdfProgramOptions","_spritesTextureSize","n$2","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","l$3","n$3","isIconSDF","M$4","e$5","updateOpacityInfo","iconVertexArrayObject","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","glyphMosaic","textMaterial","glyphPerPageElementsMap","W","_glyphTextureSize","H","$","textVertexArrayObject","_renderGlyphRange","Z$1","mapAligned","abs","m$2","floor","m$1","C$2","s$1","P$1","marker","clip","rasterVF","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","dotDensity","pieChart"],"sourceRoot":""}