{"version":3,"file":"static/js/9172.188f9a03.chunk.js","mappings":"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","sources":["../node_modules/raleigh-map-components/dist/esm/DefaultVertexAttributeLayouts-628c4128.js","../node_modules/raleigh-map-components/dist/esm/ProgramTemplate-4896e910.js","../node_modules/raleigh-map-components/dist/esm/WGLContainer-f08d17e7.js","../node_modules/raleigh-map-components/dist/esm/config-9a7f1231.js","../node_modules/raleigh-map-components/dist/esm/earcut-d7f8e4d3.js","../node_modules/raleigh-map-components/dist/esm/heatmapTextureUtils-d24c7be6.js"],"sourcesContent":["import { f as f$1 } from './vec2f64-2b32ef68.js';\nimport { r as r$2 } from './context-util-2cfc3c15.js';\nimport { M, P, U, L, D, G, o as o$1, C } from './enums-39ca0456.js';\nimport { E as E$1 } from './Texture-eb557a77.js';\nimport { t as t$2 } from './VertexElementDescriptor-26861b4e.js';\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(4)}function t$1(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r$1(n,t,r,e){const a=new Float32Array(4);return a[0]=n,a[1]=t,a[2]=r,a[3]=e,a}function e(n,t){return new Float32Array(n,t,4)}function a(){return n()}function o(){return r$1(1,1,1,1)}function u(){return r$1(1,0,0,0)}function s(){return r$1(0,1,0,0)}function c$1(){return r$1(0,0,1,0)}function i(){return r$1(0,0,0,1)}const f=a(),l$1=o(),_$1=u(),y=s(),w=c$1(),N=i();Object.freeze(Object.defineProperty({__proto__:null,create:n,clone:t$1,fromValues:r$1,createView:e,zeros:a,ones:o,unitX:u,unitY:s,unitZ:c$1,unitW:i,ZEROS:f,ONES:l$1,UNIT_X:_$1,UNIT_Y:y,UNIT_Z:w,UNIT_W:N},Symbol.toStringTag,{value:\"Module\"}));\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nfunction m$1(e,u,m=\"nearest\",c=!1){const l=!(c&&\"u8\"===u.pixelType),_=l?G.FLOAT:G.UNSIGNED_BYTE,p=null==u.pixels||0===u.pixels.length?null:l?u.getAsRGBAFloat():u.getAsRGBA(),g=e.capabilities.textureFloat?.textureFloatLinear,T={width:u.width,height:u.height,target:M.TEXTURE_2D,pixelFormat:P.RGBA,internalFormat:e.type===r$2.WEBGL2&&l?U.RGBA32F:P.RGBA,samplingMode:!g||\"bilinear\"!==m&&\"cubic\"!==m?L.NEAREST:L.LINEAR,dataType:_,wrapMode:D.CLAMP_TO_EDGE,flipped:!1};return new E$1(e,T,p)}function c(e,u){const{spacing:m,offsets:c,coefficients:l,size:[_,p]}=u,g=m[0]>1,T={width:g?4*_:_,height:p,target:M.TEXTURE_2D,pixelFormat:P.RGBA,internalFormat:e.type===r$2.WEBGL2?U.RGBA32F:P.RGBA,dataType:G.FLOAT,samplingMode:L.NEAREST,wrapMode:D.CLAMP_TO_EDGE,flipped:!1},E=new Float32Array(g?_*p*16:2*c.length);if(g)for(let t=0,n=0;t<l.length;t++)E[n++]=l[t],t%3==2&&(E[n++]=1);else for(let t=0;t<p;t++)for(let e=0;e<_;e++){const n=4*(t*_+e),a=2*(e*p+t);E[n]=c[a],E[n+1]=c[a+1],E[n+3]=-1===c[a]?0:1;}return new E$1(e,T,E)}function l(e,t){const i={width:t.length/4,height:1,target:M.TEXTURE_2D,pixelFormat:P.RGBA,internalFormat:P.RGBA,dataType:G.UNSIGNED_BYTE,samplingMode:L.NEAREST,wrapMode:D.CLAMP_TO_EDGE,flipped:!1};return new E$1(e,i,t)}function _(t,n,a,r=1,i=!0){return {u_flipY:i,u_applyTransform:!!t,u_opacity:r,u_transformSpacing:t?t.spacing:f$1,u_transformGridSize:t?t.size:f$1,u_targetImageSize:n,u_srcImageSize:a}}function p(e,t){return {u_colormapOffset:t||0,u_colormapMaxIndex:e?e.length/4-1:0}}function g(e,t){return {u_scale:e,u_offset:t}}function T(e){return {u_bandCount:e.bandCount,u_minOutput:e.outMin,u_maxOutput:e.outMax,u_minCutOff:e.minCutOff,u_maxCutOff:e.maxCutOff,u_factor:e.factor,u_useGamma:e.useGamma,u_gamma:e.gamma,u_gammaCorrection:e.gammaCorrection}}function E(e){return {u_hillshadeType:e.hillshadeType,u_sinZcosAs:e.sinZcosAs,u_sinZsinAs:e.sinZsinAs,u_cosZs:e.cosZs,u_weights:e.weights,u_factor:e.factor,u_minValue:e.minValue,u_maxValue:e.maxValue}}function A(e,t){const n=e.gl,a=t.glName,r=n.getProgramParameter(a,n.ACTIVE_UNIFORMS),i=new Map;let o;for(let s=0;s<r;s++)o=n.getActiveUniform(a,s),o&&i.set(o.name,{location:n.getUniformLocation(a,o.name),info:o});return i}function h(e,t,n){Object.keys(n).forEach((a=>{const r=t.get(a)||t.get(a+\"[0]\");r&&d(e,a,n[a],r);}));}function O(e,t,n,a){n.length===a.length&&(a.some((e=>null==e))||n.some((e=>null==e))||n.forEach(((n,r)=>{t.setUniform1i(n,r),e.bindTexture(a[r],r);})));}function d(e,t,n,a){if(null===a||null==n)return !1;const{info:r}=a;switch(r.type){case o$1.FLOAT:r.size>1?e.setUniform1fv(t,n):e.setUniform1f(t,n);break;case o$1.FLOAT_VEC2:e.setUniform2fv(t,n);break;case o$1.FLOAT_VEC3:e.setUniform3fv(t,n);break;case o$1.FLOAT_VEC4:e.setUniform4fv(t,n);break;case o$1.FLOAT_MAT3:e.setUniformMatrix3fv(t,n);break;case o$1.FLOAT_MAT4:e.setUniformMatrix4fv(t,n);break;case o$1.INT:r.size>1?e.setUniform1iv(t,n):e.setUniform1i(t,n);break;case o$1.BOOL:e.setUniform1i(t,n?1:0);break;case o$1.INT_VEC2:case o$1.BOOL_VEC2:e.setUniform2iv(t,n);break;case o$1.INT_VEC3:case o$1.BOOL_VEC3:e.setUniform3iv(t,n);break;case o$1.INT_VEC4:case o$1.BOOL_VEC4:e.setUniform4iv(t,n);break;default:return !1}return !0}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst r={geometry:[new t$2(\"a_pos\",2,C.BYTE,0,2)]},t={geometry:[new t$2(\"a_pos\",2,C.BYTE,0,4),new t$2(\"a_tex\",2,C.BYTE,2,4)]},m={geometry:[new t$2(\"a_pos\",2,C.UNSIGNED_SHORT,0,4)]};\n\nexport { A, E, O, T, _, m as a, r as b, c, t$1 as d, g, h, l, m$1 as m, n, p, r$1 as r, t };\n","import { h } from './Program-cfc2ac6a.js';\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nfunction e(e,t,a=\"\"){return new h(e,a+t.shaders.vertexShader,a+t.shaders.fragmentShader,t.attributes)}\n\nexport { e };\n","import { t as t$3, r as r$1, v as i$2, G as a$1, W as t$6 } from './config-1ffdf45e.js';\nimport { e as e$2 } from './mat3f32-42811e80.js';\nimport { t as t$2, d as d$4, m as m$8, u as u$3, c as c$4, M as M$2 } from './WGLBrushVTLSymbol-9caebd62.js';\nimport { I, L, F, C, E as E$1, R, O as O$2, B as B$2, D as D$1, P, G as G$1, M as M$1, Y, V, _ as _$1, N as N$1 } from './enums-39ca0456.js';\nimport { r as r$3, M, h as h$1, b as b$1, i as i$1 } from './mat3-8b5f2a3e.js';\nimport { t as t$4 } from './vec2f32-bf50d22f.js';\nimport { s as s$3 } from './pixelUtils-40f4c842.js';\nimport { r as r$2 } from './DisplayObject-7536b955.js';\nimport { c as c$3, m as m$7, l as l$3, O as O$1, h as h$2, A as A$1, g as g$1, _, p as p$3, T as T$1, E as E$2, r as r$4, b as r$6 } from './DefaultVertexAttributeLayouts-628c4128.js';\nimport { E, b as a, s as s$5, x as x$4 } from './FramebufferObject-3c39c713.js';\nimport { t as t$5 } from './VertexElementDescriptor-26861b4e.js';\nimport { ac as A$2, a0 as at, B as B$1, C as C$1, ad as D, ae as E$3, af as F$1, ag as G, ah as K, ai as L$1, o as o$3 } from './enums-c5b71a5c.js';\nimport { g as ge } from './Utils-1a809a7a.js';\nimport { e as e$3 } from './ShaderCompiler-c3d24077.js';\nimport { e as e$4 } from './ProgramTemplate-4896e910.js';\nimport { E as E$4, S as S$1, I as I$1 } from './enums-4e89dbf5.js';\nimport { U, w, N, Z, C as C$2, P as P$1 } from './MaterialKey-22699fef.js';\nimport { p as p$4, s as s$4, i as i$3 } from './utils-659f8fa4.js';\nimport { E as E$5 } from './Texture-eb557a77.js';\nimport { a as s$6, s as s$7 } from './cast-c3f45b36.js';\nimport { r as r$5 } from './context-util-2cfc3c15.js';\nimport { n as n$4 } from './heatmapTextureUtils-d24c7be6.js';\nimport { l as l$4 } from './reactiveUtils-f60c7d41.js';\nimport { x as x$5 } from './earcut-d7f8e4d3.js';\nimport { r as r$7 } from './vec2-c45237df.js';\nimport { n as n$5 } from './vec2f64-2b32ef68.js';\nimport { K as K$1, J } from './featureConversionUtils-02732a82.js';\nimport { t as t$7 } from './OptimizedFeature-be5c501a.js';\nimport { w as w$1 } from './number-de709571.js';\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass i extends t$2{constructor(){super(...arguments),this._visualState={time:0,dvsMat3:e$2(),displayViewMat3:e$2()};}dispose(){}prepareState(t){const{context:e}=t;e.setColorMask(!0,!0,!0,!0),e.setStencilFunction(I.EQUAL,0,255);}draw(s,a){const{requestRender:r,allowDelayedRender:i}=s,{displayData:o}=a;if(t$3(o))return;if(\"loaded\"===o.state.name&&o.attach(s),\"attached\"!==o.state.name)return;const l=o.state.resources;i&&!l.ready&&r$1(r)?r():(this._visualState.time=s.time/1e3,this._visualState.dvsMat3=a.transforms.dvs,this._visualState.displayViewMat3=s.state.displayViewMat3,o.flowStyle.render(s,this._visualState,l),o.flowStyle.animated&&r$1(r)&&r());}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst x$3={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:\"none\",type:\"stretch\"};class p$2 extends r$2{constructor(t=null,e=null,r=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._supportsBilinearTexture=!0,this.stencilRef=0,this.coordScale=[1,1],this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=t,this.transformGrid=e,this.interpolation=r;}destroy(){this.getTextures()?.textures.forEach((t=>t.dispose())),this._rasterTexture=null,this._transformGridTexture=null,this._colormapTexture=null;}get symbolizerParameters(){return this._symbolizerParameters||x$3}set symbolizerParameters(t){this._symbolizerParameters!==t&&(this._symbolizerParameters=t,this._colormapTextureInvalidated=!0);}get source(){return this._source}set source(t){this._source!==t&&(this._source=t,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.invalidateTexture());}get suspended(){return this._suspended}set suspended(t){this._suspended&&!t&&this.stage&&(this.ready(),this.requestRender()),this._suspended=t;}get bandIds(){return this._bandIds}set bandIds(t){this._bandIds=t,this._isBandIdschanged(t)&&this.invalidateTexture();}get interpolation(){return this._interpolation||\"nearest\"}set interpolation(t){this._interpolation=t,this._rasterTexture&&this._rasterTexture.setSamplingMode(\"bilinear\"===this._getTextureSamplingMethod(t)?L.LINEAR:L.NEAREST);}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null);}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender());}_createTransforms(){return {dvs:e$2()}}setTransform(t){const o=r$3(this.transforms.dvs),[n,h]=t.toScreenNoRotation([0,0],[this.x,this.y]),l=this.resolution/this.pixelRatio/t.resolution,d=l*this.width,_=l*this.height,m=Math.PI*this.rotation/180;M(o,o,t$4(n,h)),M(o,o,t$4(d/2,_/2)),h$1(o,o,-m),M(o,o,t$4(-d/2,-_/2)),b$1(o,o,t$4(d,_)),i$1(this.transforms.dvs,t.displayViewMat3,o);}getTextures(){if(!this._rasterTexture)return null;const t=[],e=[];return this._transformGridTexture&&(e.push(this._transformGridTexture),t.push(\"u_transformGrid\")),this._rasterTexture&&(e.push(this._rasterTexture),t.push(\"u_image\")),this._colormapTexture&&(e.push(this._colormapTexture),t.push(\"u_colormap\")),{names:t,textures:e}}onAttach(){this.invalidateTexture();}onDetach(){this.invalidateTexture();}updateTexture({context:t}){if(!this.stage)return this._rasterTexture?.dispose(),this._transformGridTexture?.dispose(),this._colormapTexture?.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,void(this._colormapTexture=null);const e=this._isValidSource(this.source);e&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(t)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(t),this._rasterTexture&&(e?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=c$3(t,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()));}_createOrDestroyRasterTexture(e){const r=r$1(this.source)?s$3(this.source,this.bandIds):null;if(!this._isValidSource(r))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null;}this._supportsBilinearTexture=e.capabilities.textureFloat?.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource||!e.capabilities.textureFloat?.textureFloat;this._rasterTexture=m$7(e,r,i,a),this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null;}_isBandIdschanged(t){const e=this._rasterTextureBandIds;return !(null==e&&null==t||e&&t&&e.join(\"\")===t.join(\"\"))}_isValidSource(e){return r$1(e)&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:r,colormap:s}=this.symbolizerParameters,i=\"lut\"===r||\"stretch\"===r&&r$1(s);return !this._supportsBilinearTexture||i||\"bilinear\"!==e&&\"cubic\"!==e?\"nearest\":\"bilinear\"}_updateColormapTexture(t){const e=this._colormap,r=this.symbolizerParameters.colormap;return r?e?r.length!==e.length||r.some(((t,r)=>t!==e[r]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=l$3(t,r),void(this._colormap=r)):void 0:(this._colormapTexture=l$3(t,r),void(this._colormap=r)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}function T(e){return r$1(e.source)}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass n$3{constructor(s,n){this._rctx=s,this._vertexBuffer=E.createVertex(s,F.STATIC_DRAW,new Uint16Array(n)),this._vao=new a(s,new Map([[\"a_position\",0]]),{geometry:[new t$5(\"a_position\",2,C.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2;}bind(){this._rctx.bindVAO(this._vao);}unbind(){this._rctx.bindVAO(null);}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose();}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(E$1.TRIANGLE_STRIP,0,this._count);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass m$6 extends t$2{constructor(){super(...arguments),this._desc={lut:{vsPath:\"raster/lut\",fsPath:\"raster/lut\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])},stretch:{vsPath:\"raster/stretch\",fsPath:\"raster/stretch\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])},hillshade:{vsPath:\"raster/hillshade\",fsPath:\"raster/hillshade\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])}},this._rendererUniformInfos=new Map;}dispose(){this._quad&&this._quad.dispose();}prepareState({context:e}){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0);}draw(e,r){if(!T(r)||r.suspended)return;const{timeline:s,context:a,painter:o}=e;s.begin(this.name),a.setStencilFunction(I.EQUAL,r.stencilRef,255);const n=!a.capabilities.textureFloat?.textureFloatLinear;r.updateTexture(e);const h=this._getShaderVariations(r,n),l=o.materialManager.getProgram(this._desc[r.symbolizerParameters.type],h);this._drawWithProgram(e,l,r),s.end(this.name);}_drawWithProgram({context:t,requestRender:s,allowDelayedRender:a},i,p,m=1,f=[0,0],_$1=!1){if(this._quad||(this._quad=new n$3(t,[0,0,1,0,0,1,1,1])),a&&r$1(s)&&!i.isCompiled)return void s();const{symbolizerParameters:g,transformGrid:b,width:P,height:w,opacity:S}=p,x=g.type;t.useProgram(i);const y=this._getShaderVariations(p),M=this._getUniformInfos(x,t,i,y),{names:U,textures:j}=p.getTextures();O$1(t,i,U,j);const I=g$1(m,f),E=_(b,[P,w],[p.source.width,p.source.height],S,_$1);if(h$2(i,M,{u_coordScale:p.coordScale,u_dvsMat3:p.transforms.dvs,...I,...E}),g.colormap){const{colormap:e,colormapOffset:t}=g,r=p$3(e,t);h$2(i,M,r);}if(\"stretch\"===g.type){const e=T$1(g);h$2(i,M,e);}else if(\"hillshade\"===g.type){const e=E$2(g);h$2(i,M,e);}this._quad.draw();}_getUniformInfos(e,t,r,s){const a=s.length>0?e+\"-\"+s.join(\"-\"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const i=A$1(t,r);return this._rendererUniformInfos.set(a,i),i}_getShaderVariations(e,t=!1){const r=[],{interpolation:s}=e,{type:a,colormap:i}=e.symbolizerParameters;return \"cubic\"===s?r.push(\"bicubic\"):\"bilinear\"===s&&\"stretch\"===a&&null!=i?(r.push(\"bilinear\"),r.push(\"nnedge\")):t&&\"bilinear\"===s&&r.push(\"bilinear\"),e.isRendereredSource?r.push(\"noop\"):i&&r.push(\"applyColormap\"),e.transformGrid&&(r.push(\"applyProjection\"),1===e.transformGrid.spacing[0]&&r.push(\"lookupProjection\")),r}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst l$2=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),c$2={beaufort_ft:l$2,beaufort_m:l$2,beaufort_km:l$2,beaufort_mi:l$2,beaufort_kn:new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),classified_arrow:new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),ocean_current_m:new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),ocean_current_kn:new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),single_arrow:new Float32Array([0,92/255,230/255,1]),wind_speed:new Float32Array([0,0,0,1])};class d$3 extends t$2{constructor(){super(...arguments),this._desc={magdir:{vsPath:\"raster/magdir\",fsPath:\"raster/magdir\",attributes:new Map([[\"a_pos\",0],[\"a_offset\",1],[\"a_vv\",2]])},scalar:{vsPath:\"raster/scalar\",fsPath:\"raster/scalar\",attributes:new Map([[\"a_pos\",0],[\"a_offset\",1],[\"a_vv\",2]])}};}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilOp(O$2.KEEP,O$2.KEEP,O$2.REPLACE);}draw(t,a){if(t$3(a.source)||0===a.source.validPixelCount)return;const{context:r,timeline:s}=t;if(s.begin(this.name),r.setStencilFunction(I.EQUAL,a.stencilRef,255),a.updateVectorFieldVAO(t),\"scalar\"===t.renderPass){const e=a.vaoData.scalar;e&&this._drawScalars(t,a,e.vao,e.elementCount);}else {const e=a.vaoData.magdir;e&&this._drawTriangles(t,a,e.vao,e.elementCount);}s.end(this.name);}_drawTriangles(e,a,r,s){const{context:o,painter:l,requestRender:d,allowDelayedRender:m}=e,{symbolizerParameters:f}=a,u=f.dataRange?[\"dataRange\"]:[];\"geographic\"===f.rotationType&&u.push(\"rotationGeographic\");const _=l.materialManager.getProgram(this._desc.magdir,u);if(m&&r$1(d)&&!_.isCompiled)return void d();o.useProgram(_);const{coordScale:g,opacity:p,transforms:y}=a;_.setUniform2fv(\"u_coordScale\",g),_.setUniform1f(\"u_opacity\",p),_.setUniformMatrix3fv(\"u_dvsMat3\",y.dvs);const{style:v,dataRange:b,rotation:S,symbolPercentRange:h}=f;_.setUniform4fv(\"u_colors\",c$2[v]||c$2.single_arrow),_.setUniform2fv(\"u_dataRange\",b),_.setUniform1f(\"u_rotation\",S),_.setUniform2fv(\"u_symbolPercentRange\",h);const w=this._getSymbolSize(e,a);_.setUniform2fv(\"u_symbolSize\",w),o.bindVAO(r),o.drawElements(E$1.TRIANGLES,s,C.UNSIGNED_INT,0);}_drawScalars(e,a,r,s){const{context:o,painter:l,requestRender:c,allowDelayedRender:d}=e,{symbolizerParameters:m}=a,f=[];\"wind_speed\"===m.style?f.push(\"innerCircle\"):m.dataRange&&f.push(\"dataRange\"),\"geographic\"===m.rotationType&&f.push(\"rotationGeographic\");const u=l.materialManager.getProgram(this._desc.scalar,f);if(d&&r$1(c)&&!u.isCompiled)return void c();o.useProgram(u);const{coordScale:_,opacity:g,transforms:p}=a;u.setUniform2fv(\"u_coordScale\",_),u.setUniform1f(\"u_opacity\",g),u.setUniformMatrix3fv(\"u_dvsMat3\",p.dvs);const{dataRange:y,symbolPercentRange:v}=m;u.setUniform2fv(\"u_dataRange\",y),u.setUniform2fv(\"u_symbolPercentRange\",v);const b=this._getSymbolSize(e,a);u.setUniform2fv(\"u_symbolSize\",b),o.bindVAO(r),o.drawElements(E$1.TRIANGLES,s,C.UNSIGNED_INT,0);}_getSymbolSize(e,t){const a=t.key?2**(e.displayLevel-t.key.level):t.resolution/e.state.resolution,{symbolTileSize:r}=t.symbolizerParameters;return [r/(Math.round((t.width-t.offset[0])/r)*r)/a,r/(Math.round((t.height-t.offset[1])/r)*r)/a]}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst o$2={nearest:{defines:[],samplingMode:L.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:L.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:L.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:L.LINEAR_MIPMAP_LINEAR,mips:!0}},d$2=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,r=s>1.05||s<.95;return i.rotation||r||n||t.isSourceScaled||t.rotation?o$2.bilinear:o$2.nearest}return o$2[i.samplingMode]};class m$5 extends t$2{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])};}dispose(){this._quad&&this._quad.dispose();}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0);}draw(s,n){const{context:o,renderingOptions:m,painter:l,requestRender:c,allowDelayedRender:p}=s;if(!n.source||!n.isReady)return;const u=d$2(s,n,m),f=l.materialManager.getProgram(this._desc,u.defines);if(p&&r$1(c)&&!f.isCompiled)return void c();s.timeline.begin(this.name),\"additive\"===n.blendFunction?o.setBlendFunctionSeparate(R.ONE,R.ONE,R.ONE,R.ONE):o.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),o.setStencilFunction(I.EQUAL,n.stencilRef,255),this._quad||(this._quad=new n$3(o,[0,0,1,0,0,1,1,1]));const{coordScale:_,computedOpacity:E,transforms:M}=n;n.setSamplingProfile(u),n.bind(s.context,A$2),o.useProgram(f),f.setUniformMatrix3fv(\"u_dvsMat3\",M.dvs),f.setUniform1i(\"u_texture\",A$2),f.setUniform2fv(\"u_coordScale\",_),f.setUniform1f(\"u_opacity\",E),this._quad.draw(),s.timeline.end(this.name);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst e$1={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = clamp(vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(clamp(vividLight(Cb.r, Cs.r), 0.0, 1.0),\\nclamp(vividLight(Cb.g, Cs.g), 0.0, 1.0),\\nclamp(vividLight(Cb.b, Cs.b), 0.0, 1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = clamp(vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp sampler2D u_attributeData4;\\nuniform highp sampler2D u_attributeData5;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nhighp vec4 getAttributeData4(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData4, coords);\\n}\\nhighp vec4 getAttributeData5(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData5, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\\nvec2 symbolOffset = (a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float u_hittestDist;\\nuniform highp vec2 u_hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.frag\":\"precision mediump float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\\nuniform lowp vec4 u_defaultColor;\\nuniform lowp vec4 u_othersColor;\\nuniform lowp vec4 u_outlineColor;\\nuniform float u_donutRatio;\\nuniform float u_sectorThreshold;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\n#if __VERSION__ == 300\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn u_colors[colorIndex];\\n#else\\nmediump int colorIndex;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == index) {\\ncolorIndex = int(filteredSectorToColorId[i].y);\\n}\\n}\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == colorIndex) {\\nreturn u_colors[i];\\n}\\n}\\nreturn u_colors[NUMBER_OF_FIELDS - 1];\\n#endif\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = u_outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\nuniform float u_outlineWidth;\\nuniform mediump float u_sectorThreshold;\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nint filter(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\nif (sectorAngle > u_sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\n#if __VERSION__ == 300\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\\nif (i == filteredInfo.colorId) {\\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n}\\n}\\n#endif\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[NUMBER_OF_FIELDS]) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/hittest/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat outlineSize = u_outlineWidth;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(size.x, size.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData0 = getAttributeData3(a_id);\\nattributeData[0] = filterNaNValues(attributeData0.x);\\nattributeData[1] = filterNaNValues(attributeData0.y);\\nattributeData[2] = filterNaNValues(attributeData0.z);\\nattributeData[3] = filterNaNValues(attributeData0.w);\\n#if (NUMBER_OF_FIELDS > 4)\\nvec4 attributeData1 = getAttributeData4(a_id);\\nattributeData[4] = filterNaNValues(attributeData1.x);\\nattributeData[5] = filterNaNValues(attributeData1.y);\\nattributeData[6] = filterNaNValues(attributeData1.z);\\nattributeData[7] = filterNaNValues(attributeData1.w);\\n#endif\\n#if (NUMBER_OF_FIELDS > 8)\\nvec4 attributeData2 = getAttributeData5(a_id);\\nattributeData[8] = filterNaNValues(attributeData2.x);\\nattributeData[9] = filterNaNValues(attributeData2.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[NUMBER_OF_FIELDS];\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\n#if __VERSION__ == 300\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == numOfEntries) {\\nbreak;\\n}\\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\\n}\\n#endif\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp mat3 u_tileMat3;\\nuniform highp mat3 u_viewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef SUPPORTS_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},overlay:{overlay:{\"overlay.frag\":\"precision lowp float;\\nuniform lowp sampler2D u_texture;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_texture, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"overlay.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_uv;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_perspective;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\nv_uv = a_uv;\\nfloat w = 1.0 + dot(a_uv, u_perspective);\\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\\ngl_Position = vec4(w * pos.xy, 0.0, w);\\n}\"}},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\\nreturn 0.0;\\n}\\nelse {\\nreturn e;\\n}\\n}\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec2 axy = vec2(-1.0, -1.0);\\nvec2 bxy = vec2(0.0, -1.0);\\nvec2 cxy = vec2(1.0, -1.0);\\nvec2 dxy = vec2(-1.0, 0.0);\\nvec2 fxy = vec2(1.0, 0.0);\\nvec2 gxy = vec2(-1.0, 1.0);\\nvec2 hxy = vec2(0.0, 1.0);\\nvec2 ixy = vec2(1.0, 1.0);\\nvec2 onePixel = 1.0 / u_srcImageSize;\\nif (pixelLocation.s < onePixel.s) {\\naxy[0] = 1.0;\\ndxy[0] = 1.0;\\ngxy[0] = 1.0;\\n}\\nif (pixelLocation.t < onePixel.t) {\\naxy[1] = 1.0;\\nbxy[1] = 1.0;\\ncxy[1] = 1.0;\\n}\\nif (pixelLocation.s > 1.0 - onePixel.s) {\\ncxy[0] = -1.0;\\nfxy[0] = -1.0;\\nixy[0] = -1.0;\\n}\\nif (pixelLocation.t > 1.0 - onePixel.t) {\\ngxy[1] = -1.0;\\nhxy[1] = -1.0;\\nixy[1] = -1.0;\\n}\\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\\nvec4 ve = texture2D(u_image, pixelLocation);\\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\",\"hillshade.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\",\"lut.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\",\"stretch.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nfunction o$1(e){let o=e$1;return e.split(\"/\").forEach((r=>{o&&(o=o[r]);})),o}const t$1=new e$3(o$1);function n$2(r){return t$1.resolveIncludes(r)}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst e={shaders:{vertexShader:n$2(\"background/background.vert\"),fragmentShader:n$2(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst c$1=()=>ge(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT}]});class d$1 extends t$2{constructor(){super(...arguments),this._color=r$4(0,1,0,1);}dispose(){this._program&&this._program.dispose();}prepareState({context:r}){r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setFaceCullingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(O$2.KEEP,O$2.KEEP,O$2.REPLACE),r.setStencilWriteMask(255),r.setStencilFunction(I.ALWAYS,0,255);}draw(t,s){const{context:o,state:a,requestRender:m,allowDelayedRender:d}=t,f=c$1(),g=s.getVAO(o,a,f.attributes,f.bufferLayouts);t$3(g.indexBuffer)||(this._program||(this._program=e$4(o,e)),d&&r$1(m)&&!this._program.isCompiled?m():(o.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",a.displayMat3),o.bindVAO(g),o.drawElements(E$1.TRIANGLES,g.indexBuffer.size,C.UNSIGNED_INT,0),o.bindVAO()));}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst m$4=()=>ge(\"overlay\",{geometry:[{location:0,name:\"a_pos\",count:2,type:C.FLOAT}],tex:[{location:1,name:\"a_uv\",count:2,type:C.UNSIGNED_SHORT}]});class u$2 extends t$2{constructor(){super(...arguments),this._desc={vsPath:\"overlay/overlay\",fsPath:\"overlay/overlay\",attributes:new Map([[\"a_pos\",0],[\"a_uv\",1]])};}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(I.GREATER,255,255);}draw(r,s){const{context:o,painter:n,requestRender:i,allowDelayedRender:u}=r;if(!s.isReady)return;const{computedOpacity:c,dvsMat3:d,isWrapAround:l,perspectiveTransform:p,texture:f}=s;r.timeline.begin(this.name);const _=n.materialManager.getProgram(this._desc);if(u&&r$1(i)&&!_.isCompiled)return void i();const v=m$4(),y=s.getVAO(o,v.bufferLayouts,v.attributes);if(!y)return;o.bindVAO(y),o.useProgram(_),o.bindTexture(f,A$2),_.setUniformMatrix3fv(\"u_dvsMat3\",d),_.setUniform1i(\"u_texture\",A$2),_.setUniform1f(\"u_opacity\",c),_.setUniform2fv(\"u_perspective\",p);const A=l?10:4;o.drawArrays(E$1.TRIANGLE_STRIP,0,A),o.bindVAO(),r.timeline.end(this.name);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass p$1 extends t$2{constructor(){super(...arguments),this._computeDesc=new Map;}prepareState({context:t},e){e&&e.includes(\"hittest\")?t.setBlendFunctionSeparate(R.ONE,R.ONE,R.ONE,R.ONE):t.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0);}draw(e,i,s){const o=this.getGeometryType();i.commit(e);const a=i.getGeometry(o);t$3(a)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),e.context.setStencilFunction(I.EQUAL,i.stencilRef,255),a.forEachCommand((t=>{const o=U.load(t.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(e,i,t,s);})));}_setSharedUniforms(t,u,v){const{displayLevel:f,pixelRatio:l,state:p,passOptions:c}=u;r$1(c)&&\"hittest\"===c.type&&(t.setUniform2fv(\"u_hittestPos\",c.position),t.setUniform1f(\"u_hittestDist\",c.distance)),t.setUniform1f(\"u_pixelRatio\",l),t.setUniformMatrix3fv(\"u_tileMat3\",v.transforms.tileMat3),t.setUniformMatrix3fv(\"u_viewMat3\",p.viewMat3),t.setUniformMatrix3fv(\"u_dvsMat3\",v.transforms.dvs),t.setUniformMatrix3fv(\"u_displayViewMat3\",p.displayViewMat3),t.setUniform1f(\"u_currentZoom\",Math.round(f*at)),t.setUniform1i(\"u_attributeTextureSize\",u.attributeView.size),t.setUniform1i(\"u_attributeData0\",B$1),t.setUniform1i(\"u_attributeData1\",C$1),t.setUniform1i(\"u_attributeData2\",D),t.setUniform1i(\"u_attributeData3\",E$3),t.setUniform1i(\"u_attributeData4\",F$1),t.setUniform1i(\"u_attributeData5\",G);}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv(\"u_vvSizeMinMaxValue\",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f(\"u_vvSizeScaleStopsValue\",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);e.setUniform1fv(\"u_vvSizeFieldStopsValues\",t.values),e.setUniform1fv(\"u_vvSizeFieldStopsSizes\",t.sizes);}t.vvSizeUnitValue&&e.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",i.vvSizeUnitValueToPixelsRatio);}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv(\"u_vvColorValues\",i.vvColorValues),e.setUniform4fv(\"u_vvColors\",i.vvColors)),t.vvOpacity&&(e.setUniform1fv(\"u_vvOpacityValues\",i.vvOpacityValues),e.setUniform1fv(\"u_vvOpacities\",i.vvOpacities));}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f(\"u_vvRotationType\",\"geographic\"===i.vvMaterialParameters.vvRotationType?0:1);}_getTriangleDesc(t,e,i=[\"a_pos\"]){const s=e.bufferLayouts.geometry,o=i.map((t=>s.findIndex((e=>e.name===t)))),a=`${t}-${o.join(\"-\")}`;let r=this._computeDesc.get(a);if(!r){const t=e.strides,i=e.strides.geometry,n=new Map(e.attributes),m=s.map((t=>({...t}))),u=Math.max(...e.attributes.values()),v={geometry:m};let f=0;for(const e of o){const t=s[e];v.geometry.push({count:t.count,name:t.name+\"1\",divisor:t.divisor,normalized:t.normalized,offset:i+t.offset,stride:i,type:t.type}),v.geometry.push({count:t.count,name:t.name+\"2\",divisor:t.divisor,normalized:t.normalized,offset:2*i+t.offset,stride:i,type:t.type}),n.set(t.name+\"1\",u+ ++f),n.set(t.name+\"2\",u+ ++f);}r={bufferLayouts:v,attributes:n,strides:t},this._computeDesc.set(a,r);}return r}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nfunction u$1(e){const t={geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_id\",count:3,type:C.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:C.UNSIGNED_BYTE},{location:3,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_aux1\",count:4,type:C.UNSIGNED_SHORT},{location:5,name:\"a_aux2\",count:4,type:C.SHORT},{location:6,name:\"a_aux3\",count:4,type:C.UNSIGNED_BYTE},{location:7,name:\"a_zoomRange\",count:2,type:C.UNSIGNED_SHORT}]};switch(e.symbologyType){case S$1.SIMPLE:case S$1.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1);}return {shader:\"materials/fill\",vertexLayout:t}}class c extends p$1{dispose(){}getGeometryType(){return E$4.FILL}supportsSymbology(e){return e!==S$1.DOT_DENSITY}drawGeometry(o,r,i,l){const{context:c,painter:y,rendererInfo:p,requiredLevel:_,passOptions:d,requestRender:f,allowDelayedRender:E}=o,S=w.load(i.materialKey),g=p$4(S.data),N=r$1(d)&&\"hittest\"===d.type,T=y.materialManager,{shader:I,vertexLayout:U,hittestAttributes:x}=i$2(g.programSpec,u$1(S));let L=E$1.TRIANGLES,h=ge(S.data,U);N&&(h=this._getTriangleDesc(i.materialKey,h,x),L=E$1.POINTS);const{attributes:G,bufferLayouts:O}=h,b=T.getMaterialProgram(o,S,I,G,l);if(E&&r$1(f)&&!b.isCompiled)return void f();if(c.useProgram(b),this._setSharedUniforms(b,o,r),b.setUniform2f(\"u_tileOffset\",512*r.key.col,512*r.key.row),S.textureBinding){y.textureManager.bindTextures(c,b,S);const e=1/2**(_-r.key.level);b.setUniform1f(\"u_zoomFactor\",e);}const D=1/o.pixelRatio;b.setUniform1f(\"u_blur\",D),b.setUniform1f(\"u_antialiasing\",D),this._setSizeVVUniforms(S,b,p,r),this._setColorAndOpacityVVUniforms(S,b,p);const R=i.target.getVAO(c,O,G,N);let w$1=i.indexCount,j=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;N&&(w$1/=3,j/=3),c.bindVAO(R),this._drawFills(o,r,b,L,w$1,j);}_drawFills(e,t,o,r,a,i){e.context.drawElements(r,a,C.UNSIGNED_INT,i);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass O extends c{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([K,L$1]),this._dotVAO=null,this._dotDesc={vsPath:\"dot/dot\",fsPath:\"dot/dot\",attributes:new Map([[\"a_pos\",0]])};}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=a$1(this._dotFBO),this._dotVAO=a$1(this._dotVAO);}getGeometryType(){return E$4.FILL}supportsSymbology(e){return e===S$1.DOT_DENSITY}_drawFills(e,o,r,s,i,n){const{passOptions:d}=e;if(r$1(d)&&\"hittest\"===d.type)super._drawFills(e,o,r,s,i,n);else {const t=this._drawDotLocations(e,o,r,i,n);this._drawDotDensity(e,o,t);}}_drawDotDensity(e,o,r){const{context:s,painter:i,rendererInfo:n,requestRender:d,allowDelayedRender:a}=e,l=i.materialManager.getProgram(this._dotDesc);if(a&&r$1(d)&&!l.isCompiled)return void d();const{rendererSchema:u}=n;s$4(u,\"dot-density\");const c=this._createDotDensityMesh(s,this._dotDesc.attributes,{geometry:[{name:\"a_pos\",count:2,type:C.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});s.setStencilTestEnabled(!0),s.useProgram(l),l.setUniform1f(\"u_tileZoomFactor\",1),l.setUniform1i(\"u_texture\",this._dotSamplers[0]),l.setUniform1f(\"u_dotSize\",Math.max(u.dotSize,1)),l.setUniform1f(\"u_pixelRatio\",window.devicePixelRatio),this._setSharedUniforms(l,e,o),s.bindTexture(r,this._dotSamplers[0]),s.bindVAO(c),s.drawArrays(E$1.POINTS,0,262144);}_drawDotLocations(e,t,o,r,s){const{context:i,rendererInfo:d,requiredLevel:a}=e,l=i.getViewport(),{rendererSchema:u}=d;s$4(u,\"dot-density\");const{dotScale:c,colors:f,activeDots:T,backgroundColor:p,dotValue:x}=u;i.setViewport(0,0,512,512);const w=i.getBoundFramebufferObject(),D=this._createFBO(i);i.bindFramebuffer(D),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT|i.gl.STENCIL_BUFFER_BIT),i.setStencilTestEnabled(!1);const y=1/2**(a-t.key.level),g=o$3,S=g*window.devicePixelRatio*g*window.devicePixelRatio,E=1/y*(1/y),b=c?e.state.scale/c:1;return o.setUniform1f(\"u_tileZoomFactor\",y),o.setUniform1f(\"u_tileDotsOverArea\",S/(o$3*window.devicePixelRatio*o$3*window.devicePixelRatio)),o.setUniformMatrix4fv(\"u_dotColors\",f),o.setUniform4fv(\"u_isActive\",T),o.setUniform4fv(\"u_dotBackgroundColor\",p),o.setUniform1f(\"u_dotValue\",Math.max(1,x*b*E)),this._bindDotDensityTextures(i,o,d,g),i.drawElements(E$1.TRIANGLES,r,C.UNSIGNED_INT,s),i.setViewport(l.x,l.y,l.width,l.height),i.bindFramebuffer(w),D.colorTexture}_createFBO(e){if(t$3(this._dotFBO)){const t=512,o=512,r={target:M$1.TEXTURE_2D,pixelFormat:P.RGBA,dataType:G$1.UNSIGNED_BYTE,samplingMode:L.NEAREST,wrapMode:D$1.CLAMP_TO_EDGE,width:t,height:o},s={colorTarget:Y.TEXTURE,depthStencilTarget:V.DEPTH_STENCIL_RENDER_BUFFER},i=new s$5(e,{width:t,height:o,internalFormat:B$2.DEPTH_STENCIL});this._dotFBO=new x$4(e,s,r,i);}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null;}}_bindDotDensityTextures(e,t,o,r){const{rendererSchema:s}=o;s$4(s,\"dot-density\");const i=this._createDotDensityTextures(e,r,s.seed);t.setUniform1iv(\"u_dotTextures\",this._dotSamplers);for(let n=0;n<i.length;n++)e.bindTexture(i[n],this._dotSamplers[n]);}_createDotDensityMesh(e,t,r){if(t$3(this._dotVAO)){const o=2,s=new Int16Array(262144*o);for(let e=0;e<512;e++)for(let t=0;t<512;t++)s[o*(t+512*e)]=t,s[o*(t+512*e)+1]=e;const i=E.createVertex(e,F.STATIC_DRAW,s);this._dotVAO=new a(e,t,r,{geometry:i},null);}return this._dotVAO}_createDotDensityTextures(e,t,o){if(this._dotTextureSize===t&&this._seed===o||(this._disposeTextures(),this._dotTextureSize=t,this._seed=o),null===this._dotTextures){const s=new t$6(o);this._dotTextures=[this._allocDotDensityTexture(e,t,s),this._allocDotDensityTexture(e,t,s)];}return this._dotTextures}_allocDotDensityTexture(e,t,o){const r=new Float32Array(t*t*4);for(let s=0;s<r.length;s++)r[s]=o.getFloat();return new E$5(e,{wrapMode:D$1.REPEAT,pixelFormat:P.RGBA,dataType:G$1.FLOAT,samplingMode:L.NEAREST,width:t,height:t},r)}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst d={shader:\"materials/icon\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:C.SHORT},{location:2,name:\"a_texCoords\",count:2,type:C.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:C.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:C.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:C.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:C.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};class u extends p$1{dispose(){}getGeometryType(){return E$4.MARKER}supportsSymbology(t){return t!==S$1.HEATMAP&&t!==S$1.PIE_CHART}drawGeometry(o,a,i,m){const{context:u,painter:c,rendererInfo:p,state:y,passOptions:_,requestRender:f,allowDelayedRender:E}=o,S=N.load(i.materialKey),N$1=p$4(S.data),T=r$1(_)&&\"hittest\"===_.type,{shader:g,vertexLayout:x,hittestAttributes:R}=i$2(N$1.programSpec,d);let h=E$1.TRIANGLES,U=ge(S.data,x);T&&(U=this._getTriangleDesc(i.materialKey,U,R),h=E$1.POINTS);const{attributes:A,bufferLayouts:O}=U,G=c.materialManager.getMaterialProgram(o,S,g,A,m);if(E&&r$1(f)&&!G.isCompiled)return void f();u.useProgram(G),S.textureBinding&&c.textureManager.bindTextures(u,G,S,!0),this._setSharedUniforms(G,o,a);const I=S.vvRotation?y.displayViewMat3:y.displayMat3;G.setUniformMatrix3fv(\"u_displayMat3\",I),this._setSizeVVUniforms(S,G,p,a),this._setColorAndOpacityVVUniforms(S,G,p),this._setRotationVVUniforms(S,G,p);const M=i.target.getVAO(u,O,A,T);let b=i.indexCount,D=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;T&&(b/=3,D/=3),u.bindVAO(M),this._drawMarkers(o,a,G,h,b,D,T),u.bindVAO(null);}_drawMarkers(t,e,o,a,r,i,n){t.context.drawElements(a,r,C.UNSIGNED_INT,i);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name;}createOptions(t,r){return null}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst S=s$6.getLogger(\"esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap\");function x$2(e){return \"heatmap\"===e.type}class B extends u{constructor(){super(...arguments),this.brushEffect=new y;}supportsSymbology(e){return e===S$1.HEATMAP}dispose(){super.dispose(),this.brushEffect.dispose(),this.brushEffect=null;}prepareState(){}drawGeometry(e,t,r,i){const{defines:a}=this.brushEffect.loadQualityProfile(e.context);super.drawGeometry(e,t,r,i?[...i,...a]:a);}_drawMarkers(e,t,r,i,a,s,u){const{context:n,rendererInfo:h,state:f}=e,{rendererSchema:m}=h;s$4(m,\"heatmap\");const{referenceScale:d,radius:p,isFieldActive:_}=m,b=p*(0!==d?d/f.scale:1);r.setUniform1f(\"u_radius\",b),u||(r.setUniform1f(\"u_isFieldActive\",_),n.setStencilFunction(I.GEQUAL,t.stencilRef,255)),n.drawElements(i,a,C.UNSIGNED_INT,s);}}const v={vsPath:\"heatmap/heatmapResolve\",fsPath:\"heatmap/heatmapResolve\",attributes:new Map([[\"a_position\",0]])};class y extends t{constructor(){super(...arguments),this.name=this.constructor.name;}createOptions({passOptions:e}){return e}dispose(){this._prevFBO=null,this._accumulateOutputTexture=a$1(this._accumulateOutputTexture),r$1(this._accumulateFramebuffer)&&this._accumulateFramebuffer.detachDepthStencilBuffer(),this._accumulateOutputStencilBuffer=a$1(this._accumulateOutputStencilBuffer),this._accumulateFramebuffer=a$1(this._accumulateFramebuffer),this._resolveGradientTexture=a$1(this._resolveGradientTexture),this._tileQuad=a$1(this._tileQuad);}bind(e){const{context:t,rendererInfo:i,passOptions:a}=e,{rendererSchema:s}=i;!(r$1(a)&&\"hittest\"===a.type)&&x$2(s)&&(this._prevFBO=t.getBoundFramebufferObject(),this._prevViewport=t.getViewport(),s$4(s,\"heatmap\"),this._loadResources(e),this._updateResources(t,s),t.bindFramebuffer(this._accumulateFramebuffer),t.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0),t.setBlendFunction(R.ONE,R.ONE),t.setClearColor(0,0,0,0),t.clear(_$1.COLOR_BUFFER_BIT));}unbind(){this._prevFBO=null,this._prevViewport=null;}draw(e){const{context:t,painter:i,rendererInfo:a,passOptions:s}=e,{rendererSchema:u}=a;if(r$1(s)&&\"hittest\"===s.type||!x$2(u))return;const{defines:n}=this.loadQualityProfile(t),o=i.materialManager.getProgram(v,n);t.useProgram(o),t.bindFramebuffer(this._prevFBO),t.setViewport(0,0,this._prevViewport.width,this._prevViewport.height),t.setBlendFunction(R.ONE,R.ONE_MINUS_SRC_ALPHA),t.setStencilTestEnabled(!1);const{radius:h,minDensity:c,densityRange:l}=u;t.bindTexture(this._accumulateOutputTexture,8),t.bindTexture(this._resolveGradientTexture,9),o.setUniform1i(\"u_texture\",8),o.setUniform1i(\"u_gradient\",9),o.setUniform2f(\"u_densityMinAndInvRange\",c,1/l),o.setUniform1f(\"u_densityNormalization\",3/(h*h*Math.PI)),this._tileQuad.draw();}_loadResources({context:e,painter:t}){const{dataType:r,samplingMode:i,pixelFormat:a,internalFormat:u,shadingRate:n,requiresSharedStencilBuffer:o}=this.loadQualityProfile(e),{width:h,height:c}=this._prevViewport,l=h*n,f=c*n;this._accumulateOutputTexture??(this._accumulateOutputTexture=new E$5(e,{target:M$1.TEXTURE_2D,pixelFormat:a,internalFormat:u,dataType:r,samplingMode:i,wrapMode:D$1.CLAMP_TO_EDGE,width:l,height:f})),o||(this._accumulateOutputStencilBuffer??(this._accumulateOutputStencilBuffer=new s$5(e,{width:l,height:f,internalFormat:B$2.DEPTH_STENCIL}))),this._accumulateFramebuffer??(this._accumulateFramebuffer=new x$4(e,{},this._accumulateOutputTexture,o?t.getSharedStencilBuffer():this._accumulateOutputStencilBuffer)),this._resolveGradientTexture??(this._resolveGradientTexture=new E$5(e,{target:M$1.TEXTURE_2D,pixelFormat:P.RGBA,dataType:G$1.UNSIGNED_BYTE,samplingMode:L.LINEAR,wrapMode:D$1.CLAMP_TO_EDGE})),this._tileQuad??(this._tileQuad=new n$3(e,[0,0,1,0,0,1,1,1]));}_updateResources(e,t){const{gradientHash:i,gradient:a}=t;this._prevGradientHash!==i&&(this._resolveGradientTexture.resize(a.length/4,1),this._resolveGradientTexture.setData(a),this._prevGradientHash=i);const{shadingRate:s,requiresSharedStencilBuffer:u}=this.loadQualityProfile(e),{width:n,height:o}=this._prevViewport,h=n*s,c=o*s,{width:l,height:f}=this._accumulateFramebuffer;if(l!==h||f!==c){const e=this._accumulateFramebuffer.depthStencilAttachment;if(u&&r$1(e)){const{width:t,height:r}=e.descriptor;t===h&&r===c||(S.errorOnce(\"Attempted to resize shared stencil buffer! Detaching instead.\"),this._accumulateFramebuffer.detachDepthStencilBuffer());}this._accumulateFramebuffer.resize(h,c);}u||e.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,_$1.STENCIL_BUFFER_BIT,L.NEAREST);}loadQualityProfile(e){if(t$3(this._qualityProfile)){const t=n$4(e,S),r=e.type===r$5.WEBGL1;this._qualityProfile={...t,requiresSharedStencilBuffer:r,shadingRate:r?1:.25,defines:t.dataType!==G$1.FLOAT?[\"heatmapPrecisionHalfFloat\"]:[]};}return this._qualityProfile}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst r={shaders:{vertexShader:n$2(\"tileInfo/tileInfo.vert\"),fragmentShader:n$2(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst A=300,b=32;class x$1 extends t$2{constructor(){super(...arguments),this._color=r$4(1,0,0,1);}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null;}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1);}draw(e,r){const{context:i,requestRender:o,allowDelayedRender:s}=e;if(!r.isReady)return;if(this._loadWGLResources(i),s&&r$1(o)&&(!this._outlineProgram.isCompiled||!this._tileInfoProgram.isCompiled))return void o();i.bindVAO(this._outlineVertexArrayObject),i.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._outlineProgram.setUniform2f(\"u_coord_range\",r.rangeX,r.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),i.drawArrays(E$1.LINE_STRIP,0,4);const n=this._getTexture(i,r);n?(i.bindVAO(this._tileInfoVertexArrayObject),i.useProgram(this._tileInfoProgram),i.bindTexture(n,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",r.rangeX/r.width,r.rangeY/r.height),this._tileInfoProgram.setUniform2f(\"u_delta\",8,8),this._tileInfoProgram.setUniform2f(\"u_dimensions\",n.descriptor.width,n.descriptor.height),i.drawArrays(E$1.TRIANGLE_STRIP,0,4),i.bindVAO()):i.bindVAO();}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const e$1=e$4(t,e),i=e$4(t,r),a$1=new Int8Array([0,0,1,0,1,1,0,1]),l=E.createVertex(t,F.STATIC_DRAW,a$1),m=new a(t,e.attributes,r$6,{geometry:l}),_=new Int8Array([0,0,1,0,0,1,1,1]),f=E.createVertex(t,F.STATIC_DRAW,_),h=new a(t,r.attributes,r$6,{geometry:f});this._outlineProgram=e$1,this._tileInfoProgram=i,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=h;}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement(\"canvas\"),this._canvas.setAttribute(\"id\",\"canvas2d\"),this._canvas.setAttribute(\"width\",`${A}`),this._canvas.setAttribute(\"height\",`${b}`),this._canvas.setAttribute(\"style\",\"display:none\"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const o=this._canvas,s=o.getContext(\"2d\");return s.font=\"24px sans-serif\",s.textAlign=\"left\",s.textBaseline=\"top\",s.clearRect(0,0,A,b),r>1e5?(s.fillStyle=\"red\",s.fillRect(0,0,A,b),s.fillStyle=\"black\"):(s.clearRect(0,0,A,b),s.fillStyle=\"blue\"),s.fillText(i,0,0),e.texture=new E$5(t,{target:M$1.TEXTURE_2D,pixelFormat:P.RGBA,dataType:G$1.UNSIGNED_BYTE,samplingMode:L.NEAREST,wrapMode:D$1.CLAMP_TO_EDGE},o),e.texture}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass s$2 extends u{supportsSymbology(r){return r===S$1.PIE_CHART}_drawMarkers(o,r,s,n,l,f,u){const{context:i}=o,{rendererInfo:m}=o,{rendererSchema:a}=m;s$4(a,\"pie-chart\"),s.setUniform4fv(\"u_colors\",a.colors),s.setUniform4fv(\"u_defaultColor\",a.defaultColor),s.setUniform4fv(\"u_othersColor\",a.othersColor),s.setUniform4fv(\"u_outlineColor\",a.outlineColor),s.setUniform1f(\"u_donutRatio\",a.holePercentage),s.setUniform1f(\"u_sectorThreshold\",a.sectorThreshold),s.setUniform1f(\"u_outlineWidth\",a.outlineWidth),i.drawElements(n,l,C.UNSIGNED_INT,f);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass h extends t$2{constructor(){super(...arguments),this._color=r$4(1,0,0,1),this._initialized=!1;}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null);}prepareState({context:r}){r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(O$2.KEEP,O$2.KEEP,O$2.REPLACE),r.setStencilWriteMask(255);}draw(e,t){const{context:i,requestRender:s,allowDelayedRender:o}=e;this._initialized||this._initialize(i),o&&r$1(s)&&!this._solidProgram.isCompiled?s():(i.setStencilFunctionSeparate(N$1.FRONT_AND_BACK,I.GREATER,t.stencilRef,255),i.bindVAO(this._solidVertexArrayObject),i.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),this._solidProgram.setUniform2fv(\"u_coord_range\",[t.rangeX,t.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),i.drawArrays(E$1.TRIANGLE_STRIP,0,4),i.bindVAO());}_initialize(r){if(this._initialized)return !0;const e$1=e$4(r,e);if(!e$1)return !1;const i=new Int8Array([0,0,1,0,0,1,1,1]),a$1=E.createVertex(r,F.STATIC_DRAW,i),l=new a(r,e.attributes,r$6,{geometry:a$1});return this._solidProgram=e$1,this._solidVertexArrayObject=l,this._initialized=!0,!0}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst m$3=e=>ge(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_id\",count:4,type:C.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texAndSize\",count:4,type:C.UNSIGNED_BYTE},{location:5,name:\"a_refSymbolAndPlacementOffset\",count:4,type:C.UNSIGNED_BYTE},{location:6,name:\"a_glyphData\",count:4,type:C.UNSIGNED_BYTE},{location:7,name:\"a_vertexOffset\",count:2,type:C.SHORT},{location:8,name:\"a_texCoords\",count:2,type:C.UNSIGNED_SHORT}]});class l$1 extends p$1{dispose(){}getGeometryType(){return E$4.LABEL}supportsSymbology(e){return !0}drawGeometry(t,o,a,l){const{context:d,painter:u,state:c,rendererInfo:f,requestRender:p,allowDelayedRender:y}=t,_=Z.load(a.materialKey),E=_.mapAligned?1:0;if(!E&&Math.abs(o.key.level-Math.round(100*t.displayLevel)/100)>=1)return;const{bufferLayouts:N,attributes:S}=m$3(_),U=u.materialManager.getMaterialProgram(t,_,\"materials/label\",S,l);if(y&&r$1(p)&&!U.isCompiled)return void p();t.context.setStencilFunction(I.EQUAL,0,255),d.useProgram(U),this._setSharedUniforms(U,t,o),u.textureManager.bindTextures(d,U,_);const T=1===E?c.displayViewMat3:c.displayMat3;this._setSizeVVUniforms(_,U,f,o),U.setUniform1f(\"u_mapRotation\",Math.floor(c.rotation/360*254)),U.setUniform1f(\"u_mapAligned\",E),U.setUniformMatrix3fv(\"u_displayMat3\",T),U.setUniform1f(\"u_opacity\",1),U.setUniform2fv(\"u_screenSize\",t.state.size),U.setUniform1f(\"u_isHalo\",1);const g=a.target.getVAO(d,N,S),G=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;d.bindVAO(g),d.drawElements(E$1.TRIANGLES,a.indexCount,C.UNSIGNED_INT,G),U.setUniform1f(\"u_isHalo\",0),d.drawElements(E$1.TRIANGLES,a.indexCount,C.UNSIGNED_INT,G),d.setStencilTestEnabled(!0),d.setBlendingEnabled(!0);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst s$1=e=>ge(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_id\",count:4,type:C.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_offsetAndNormal\",count:4,type:C.BYTE},{location:4,name:\"a_accumulatedDistanceAndHalfWidth\",count:2,type:C.UNSIGNED_SHORT},{location:5,name:\"a_tlbr\",count:4,type:C.UNSIGNED_SHORT},{location:6,name:\"a_segmentDirection\",count:4,type:C.BYTE},{location:7,name:\"a_aux\",count:2,type:C.UNSIGNED_SHORT},{location:8,name:\"a_zoomRange\",count:2,type:C.UNSIGNED_SHORT}]});class m$2 extends p$1{dispose(){}getGeometryType(){return E$4.LINE}supportsSymbology(e){return !0}drawGeometry(t,o,a,m){const{context:l,painter:c,rendererInfo:u,displayLevel:p,passOptions:d,requestRender:y,allowDelayedRender:_}=t,f=C$2.load(a.materialKey),E=r$1(d)&&\"hittest\"===d.type;let N=s$1(f),g=E$1.TRIANGLES;E&&(N=this._getTriangleDesc(a.materialKey,N),g=E$1.POINTS);const{attributes:S,bufferLayouts:T}=N,U=c.materialManager.getMaterialProgram(t,f,\"materials/line\",S,m);if(_&&r$1(y)&&!U.isCompiled)return void y();const G=1/t.pixelRatio,I=0;l.useProgram(U),this._setSharedUniforms(U,t,o),f.textureBinding&&c.textureManager.bindTextures(l,U,f);const D=2**(p-o.key.level);U.setUniform1f(\"u_zoomFactor\",D),U.setUniform1f(\"u_blur\",I+G),U.setUniform1f(\"u_antialiasing\",G),this._setSizeVVUniforms(f,U,u,o),this._setColorAndOpacityVVUniforms(f,U,u),l.setFaceCullingEnabled(!1);const R=a.target.getVAO(l,T,S,E);let b=a.indexCount,x=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;E&&(b/=3,x/=3),l.bindVAO(R),l.drawElements(g,b,C.UNSIGNED_INT,x);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst s=t=>ge(t.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:C.SHORT},{location:1,name:\"a_id\",count:4,type:C.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:C.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texFontSize\",count:4,type:C.UNSIGNED_BYTE},{location:5,name:\"a_aux\",count:4,type:C.BYTE},{location:6,name:\"a_zoomRange\",count:2,type:C.UNSIGNED_SHORT},{location:7,name:\"a_vertexOffset\",count:2,type:C.SHORT},{location:8,name:\"a_texCoords\",count:2,type:C.UNSIGNED_SHORT}]});class m$1 extends p$1{dispose(){}getGeometryType(){return E$4.TEXT}supportsSymbology(t){return !0}drawGeometry(e,o,a,m){const{context:l,painter:p,rendererInfo:u,state:d,passOptions:y,requestRender:_,allowDelayedRender:c}=e,f=P$1.load(a.materialKey),E=r$1(y)&&\"hittest\"===y.type,{bufferLayouts:N,attributes:S}=s(f),T=p.materialManager.getMaterialProgram(e,f,\"materials/text\",S,m);if(c&&r$1(_)&&!T.isCompiled)return void _();l.useProgram(T);let U=E$1.TRIANGLES;E&&(U=E$1.POINTS),this._setSharedUniforms(T,e,o),p.textureManager.bindTextures(l,T,f),T.setUniformMatrix3fv(\"u_displayMat3\",d.displayMat3),T.setUniformMatrix3fv(\"u_displayViewMat3\",d.displayViewMat3),this._setSizeVVUniforms(f,T,u,o),this._setColorAndOpacityVVUniforms(f,T,u),this._setRotationVVUniforms(f,T,u),T.setUniform1f(\"u_isHalo\",1);const x=a.target.getVAO(l,N,S),G=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;l.bindVAO(x),l.drawElements(E$1.TRIANGLES,a.indexCount,C.UNSIGNED_INT,G),T.setUniform1f(\"u_isHalo\",0),l.drawElements(U,a.indexCount,C.UNSIGNED_INT,G);}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst n$1={marker:u,line:m$2,fill:c,text:m$1,label:l$1,clip:d$1,stencil:h,bitmap:m$5,overlay:u$2,raster:m$6,rasterVF:d$3,flow:i,tileInfo:x$1,vtlBackground:d$4,vtlFill:m$8,vtlLine:u$3,vtlCircle:c$4,vtlSymbol:M$2,dotDensity:O,heatmap:B,pieChart:s$2};\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst x=t=>{switch(t.BYTES_PER_ELEMENT){case 1:return C.UNSIGNED_BYTE;case 2:return C.UNSIGNED_SHORT;case 4:return C.UNSIGNED_INT;default:throw new s$7(\"Cannot get DataType of array\")}},g=(e,t,r,s)=>{let o=0;for(let n=1;n<r;n++){const r=e[2*(t+n-1)],s=e[2*(t+n-1)+1];o+=(e[2*(t+n)]-r)*(e[2*(t+n)+1]+s);}return s?o>0:o<0},p=({coords:e,lengths:t},r)=>{const o=[];for(let n=0,i=0;n<t.length;i+=t[n],n+=1){const c=i,a=[];for(;n<t.length-1&&g(e,i+t[n],t[n+1],r);n+=1,i+=t[n])a.push(i+t[n]-c);const f=e.slice(2*c,2*(i+t[n])),h=x$5(f,a,2);for(const e of h)o.push(e+c);}return o};class l{constructor(e,t,r,s=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=s;}static fromRect({x:e,y:t,width:r,height:s}){const o=e,n=t,i=o+r,c=n+s;return l.fromScreenExtent({xmin:o,ymin:n,xmax:i,ymax:c})}static fromPath(e){const t=K$1(new t$7,e.path,!1,!1),r=t.coords,s=new Uint32Array(p(t,!0)),o=new Uint32Array(r.length/2);for(let n=0;n<o.length;n++)o[n]=w$1(Math.floor(r[2*n]),Math.floor(r[2*n+1]));return new l({geometry:o},s,E$1.TRIANGLES)}static fromGeometry(r,s){const o=s.geometry.type;switch(o){case\"polygon\":return l.fromPolygon(r,s.geometry);case\"extent\":return l.fromMapExtent(r,s.geometry);default:return s$6.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new s$7(\"mapview-bad-type\",`Unable to create a mesh from type ${o}`,s)),l.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const r=J(new t$7,t,!1,!1),s=r.coords,i=new Uint32Array(p(r,!1)),h=new Uint32Array(s.length/2),u=n$5(),y=n$5();for(let n=0;n<h.length;n++)r$7(u,s[2*n],s[2*n+1]),e.toScreen(y,u),h[n]=w$1(Math.floor(y[0]),Math.floor(y[1]));return new l({geometry:h},i,E$1.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:s}){const o={geometry:new Uint32Array([w$1(e,r),w$1(t,r),w$1(e,s),w$1(e,s),w$1(t,r),w$1(t,s)])},n=new Uint32Array([0,1,2,3,4,5]);return new l(o,n,E$1.TRIANGLES)}static fromMapExtent(e,t){const[r,s]=e.toScreen([0,0],[t.xmin,t.ymin]),[o,n]=e.toScreen([0,0],[t.xmax,t.ymax]),i={geometry:new Uint32Array([w$1(r,s),w$1(o,s),w$1(r,n),w$1(r,n),w$1(o,s),w$1(o,n)])},c=new Uint32Array([0,1,2,3,4,5]);return new l(i,c,E$1.TRIANGLES)}destroy(){r$1(this._cache.indexBuffer)&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)r$1(this._cache.vertexBuffers[e])&&this._cache.vertexBuffers[e].dispose();}get elementType(){return x(this.indices)}getIndexBuffer(e,t=F.STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=E.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=F.STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((r,s)=>({...r,[s]:E.createVertex(e,t,this.vertices[s])})),{})),this._cache.vertexBuffers}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst n=t=>parseFloat(t)/100;class m extends r$2{constructor(t,e){super(),this._clip=e,this._cache={},this.stage=t,this._handle=l$4((()=>e.version),(()=>this._invalidate())),this.ready();}static fromClipArea(t,e){return new m(t,e)}_destroyGL(){r$1(this._cache.mesh)&&(this._cache.mesh.destroy(),this._cache.mesh=null),r$1(this._cache.vao)&&(this._cache.vao.dispose(),this._cache.vao=null);}destroy(){this._destroyGL(),this._handle.remove();}getVAO(t,e,r,i){const[o,h]=e.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===o&&this._lastHeight===h||(this._lastWidth=o,this._lastHeight=h,this._destroyGL()),t$3(this._cache.vao)){const s=this._createMesh(e,this._clip),o=s.getIndexBuffer(t),h=s.getVertexBuffers(t);this._cache.mesh=s,this._cache.vao=new a(t,r,i,h,o);}return this._cache.vao}_createTransforms(){return {dvs:e$2()}}_invalidate(){this._destroyGL(),this.requestRender();}_createScreenRect(t,e){const[r,s]=t.size,i=\"string\"==typeof e.left?n(e.left)*r:e.left,o=\"string\"==typeof e.right?n(e.right)*r:e.right,h=\"string\"==typeof e.top?n(e.top)*s:e.top,a=\"string\"==typeof e.bottom?n(e.bottom)*s:e.bottom,c=i,m=h;return {x:c,y:m,width:Math.max(r-o-c,0),height:Math.max(s-a-m,0)}}_createMesh(r,s){switch(s.type){case\"rect\":return l.fromRect(this._createScreenRect(r,s));case\"path\":return l.fromPath(s);case\"geometry\":return l.fromGeometry(r,s);default:return s$6.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new s$7(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),l.fromRect({x:0,y:0,width:1,height:1})}}}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nclass o extends i$3{constructor(){super(...arguments),this.name=this.constructor.name;}set clips(e){this._clips=e,this.children.forEach((r=>r.clips=e)),this._updateClippingInfo();}beforeRender(e){super.beforeRender(e),this.updateTransforms(e.state);}_createTransforms(){return {dvs:e$2()}}doRender(e){const r=this.createRenderParams(e),{painter:s,globalOpacity:t,profiler:i,drawPhase:n}=r,o=n===I$1.LABEL||n===I$1.HIGHLIGHT?1:t*this.computedOpacity;i.recordContainerStart(this.name),s.beforeRenderLayer(r,this._clippingInfos?255:0,o),this.renderChildren(r),s.compositeLayer(r,o),i.recordContainerEnd();}renderChildren(r){t$3(this._renderPasses)&&(this._renderPasses=this.prepareRenderPasses(r.painter));for(const e of this._renderPasses)try{e.render(r);}catch(s){}}createRenderParams(e){return e.requireFBO=this.requiresDedicatedFBO,e}prepareRenderPasses(e){return [e.registerRenderPass({name:\"clip\",brushes:[n$1.clip],target:()=>this._clippingInfos,drawPhase:I$1.MAP|I$1.LABEL|I$1.LABEL_ALPHA|I$1.DEBUG|I$1.HIGHLIGHT})]}updateTransforms(e){for(const r of this.children)r.setTransform(e);}onAttach(){super.onAttach(),this._updateClippingInfo();}onDetach(){super.onDetach(),this._updateClippingInfo();}_updateClippingInfo(){if(r$1(this._clippingInfos)&&(this._clippingInfos.forEach((e=>e.destroy())),this._clippingInfos=null),!this.stage)return;const e=this._clips;r$1(e)&&e.length&&(this._clippingInfos=e.items.map((e=>m.fromClipArea(this.stage,e)))),this.requestRender();}}\n\nexport { n$3 as a, n$1 as b, d$3 as d, h, i, n$2 as n, o, p$2 as p, t, x$1 as x };\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst o=!0,t=32,c=1.5,e=200;\n\nexport { c, e, o, t };\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nvar e,n,t,r={exports:{}};e=r,n=function(){function e(e,t,x){x=x||2;var i,u,v,o,y,p,a,l=t&&t.length,h=l?t[0]*x:e.length,s=n(e,0,h,x,!0),c=[];if(!s||s.next===s.prev)return c;if(l&&(s=f(e,t,s,x)),e.length>80*x){i=v=e[0],u=o=e[1];for(var Z=x;Z<h;Z+=x)(y=e[Z])<i&&(i=y),(p=e[Z+1])<u&&(u=p),y>v&&(v=y),p>o&&(o=p);a=0!==(a=Math.max(v-i,o-u))?1/a:0;}return r(s,c,x,i,u,a),c}function n(e,n,t,r,x){var i,u;if(x===E(e,n,t,r)>0)for(i=n;i<t;i+=r)u=B(i,e[i],e[i+1],u);else for(i=t-r;i>=n;i-=r)u=B(i,e[i],e[i+1],u);if(u&&M(u,u.next)){var v=u.next;C(u),u=v;}return u}function t(e,n){if(!e)return e;n||(n=e);var t,r=e;do{if(t=!1,r.steiner||!M(r,r.next)&&0!==w(r.prev,r,r.next))r=r.next;else {var x=r.prev;if(C(r),(r=n=x)===r.next)break;t=!0;}}while(t||r!==n);return n}function r(e,n,f,o,y,p,a){if(e){!a&&p&&h(e,o,y,p);for(var l,s,c=e;e.prev!==e.next;)if(l=e.prev,s=e.next,p?i(e,o,y,p):x(e))n.push(l.i/f),n.push(e.i/f),n.push(s.i/f),C(e),e=s.next,c=s.next;else if((e=s)===c){a?1===a?r(e=u(t(e),n,f),n,f,o,y,p,2):2===a&&v(e,n,f,o,y,p):r(t(e),n,f,o,y,p,1);break}}}function x(e){var n=e.prev,t=e,r=e.next;if(w(n,t,r)>=0)return !1;for(var x=e.next.next;x!==e.prev;){if(g(n.x,n.y,t.x,t.y,r.x,r.y,x.x,x.y)&&w(x.prev,x,x.next)>=0)return !1;x=x.next;}return !0}function i(e,n,t,r){var x=e.prev,i=e,u=e.next;if(w(x,i,u)>=0)return !1;for(var v=x.x<i.x?x.x<u.x?x.x:u.x:i.x<u.x?i.x:u.x,f=x.y<i.y?x.y<u.y?x.y:u.y:i.y<u.y?i.y:u.y,o=x.x>i.x?x.x>u.x?x.x:u.x:i.x>u.x?i.x:u.x,y=x.y>i.y?x.y>u.y?x.y:u.y:i.y>u.y?i.y:u.y,p=c(v,f,n,t,r),a=c(o,y,n,t,r),l=e.prevZ,h=e.nextZ;l&&l.z>=p&&h&&h.z<=a;){if(l!==e.prev&&l!==e.next&&g(x.x,x.y,i.x,i.y,u.x,u.y,l.x,l.y)&&w(l.prev,l,l.next)>=0)return !1;if(l=l.prevZ,h!==e.prev&&h!==e.next&&g(x.x,x.y,i.x,i.y,u.x,u.y,h.x,h.y)&&w(h.prev,h,h.next)>=0)return !1;h=h.nextZ;}for(;l&&l.z>=p;){if(l!==e.prev&&l!==e.next&&g(x.x,x.y,i.x,i.y,u.x,u.y,l.x,l.y)&&w(l.prev,l,l.next)>=0)return !1;l=l.prevZ;}for(;h&&h.z<=a;){if(h!==e.prev&&h!==e.next&&g(x.x,x.y,i.x,i.y,u.x,u.y,h.x,h.y)&&w(h.prev,h,h.next)>=0)return !1;h=h.nextZ;}return !0}function u(e,n,r){var x=e;do{var i=x.prev,u=x.next.next;!M(i,u)&&z(i,x,x.next,u)&&j(i,u)&&j(u,i)&&(n.push(i.i/r),n.push(x.i/r),n.push(u.i/r),C(x),C(x.next),x=e=u),x=x.next;}while(x!==e);return t(x)}function v(e,n,x,i,u,v){var f=e;do{for(var o=f.next.next;o!==f.prev;){if(f.i!==o.i&&d(f,o)){var y=A(f,o);return f=t(f,f.next),y=t(y,y.next),r(f,n,x,i,u,v),void r(y,n,x,i,u,v)}o=o.next;}f=f.next;}while(f!==e)}function f(e,r,x,i){var u,v,f,y=[];for(u=0,v=r.length;u<v;u++)(f=n(e,r[u]*i,u<v-1?r[u+1]*i:e.length,i,!1))===f.next&&(f.steiner=!0),y.push(Z(f));for(y.sort(o),u=0;u<y.length;u++)x=t(x=p(y[u],x),x.next);return x}function o(e,n){return e.x-n.x}function y(e){if(e.next.prev===e)return e;let n=e;for(;;){const t=n.next;if(t.prev===n||t===n||t===e)break;n=t;}return n}function p(e,n){var r=a(e,n);if(!r)return n;var x=A(r,e),i=t(r,r.next);let u=y(x);return t(u,u.next),i=y(i),y(n===r?i:n)}function a(e,n){var t,r=n,x=e.x,i=e.y,u=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var v=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(v<=x&&v>u){if(u=v,v===x){if(i===r.y)return r;if(i===r.next.y)return r.next}t=r.x<r.next.x?r:r.next;}}r=r.next;}while(r!==n);if(!t)return null;if(x===u)return t;var f,o=t,y=t.x,p=t.y,a=1/0;r=t;do{x>=r.x&&r.x>=y&&x!==r.x&&g(i<p?x:u,i,y,p,i<p?u:x,i,r.x,r.y)&&(f=Math.abs(i-r.y)/(x-r.x),j(r,e)&&(f<a||f===a&&(r.x>t.x||r.x===t.x&&l(t,r)))&&(t=r,a=f)),r=r.next;}while(r!==o);return t}function l(e,n){return w(e.prev,e,n.prev)<0&&w(n.next,e,e.next)<0}function h(e,n,t,r){var x=e;do{null===x.z&&(x.z=c(x.x,x.y,n,t,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next;}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,s(x);}function s(e){var n,t,r,x,i,u,v,f,o=1;do{for(t=e,e=null,i=null,u=0;t;){for(u++,r=t,v=0,n=0;n<o&&(v++,r=r.nextZ);n++);for(f=o;v>0||f>0&&r;)0!==v&&(0===f||!r||t.z<=r.z)?(x=t,t=t.nextZ,v--):(x=r,r=r.nextZ,f--),i?i.nextZ=x:e=x,x.prevZ=i,i=x;t=r;}i.nextZ=null,o*=2;}while(u>1);return e}function c(e,n,t,r,x){return (e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-t)*x)|e<<8))|e<<4))|e<<2))|e<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=32767*(n-r)*x)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function Z(e){var n=e,t=e;do{(n.x<t.x||n.x===t.x&&n.y<t.y)&&(t=n),n=n.next;}while(n!==e);return t}function g(e,n,t,r,x,i,u,v){return (x-u)*(n-v)-(e-u)*(i-v)>=0&&(e-u)*(r-v)-(t-u)*(n-v)>=0&&(t-u)*(i-v)-(x-u)*(r-v)>=0}function d(e,n){return e.next.i!==n.i&&e.prev.i!==n.i&&!k(e,n)&&(j(e,n)&&j(n,e)&&q(e,n)&&(w(e.prev,e,n.prev)||w(e,n.prev,n))||M(e,n)&&w(e.prev,e,e.next)>0&&w(n.prev,n,n.next)>0)}function w(e,n,t){return (n.y-e.y)*(t.x-n.x)-(n.x-e.x)*(t.y-n.y)}function M(e,n){return e.x===n.x&&e.y===n.y}function z(e,n,t,r){var x=m(w(e,n,t)),i=m(w(e,n,r)),u=m(w(t,r,e)),v=m(w(t,r,n));return x!==i&&u!==v||!(0!==x||!b(e,t,n))||!(0!==i||!b(e,r,n))||!(0!==u||!b(t,e,r))||!(0!==v||!b(t,n,r))}function b(e,n,t){return n.x<=Math.max(e.x,t.x)&&n.x>=Math.min(e.x,t.x)&&n.y<=Math.max(e.y,t.y)&&n.y>=Math.min(e.y,t.y)}function m(e){return e>0?1:e<0?-1:0}function k(e,n){var t=e;do{if(t.i!==e.i&&t.next.i!==e.i&&t.i!==n.i&&t.next.i!==n.i&&z(t,t.next,e,n))return !0;t=t.next;}while(t!==e);return !1}function j(e,n){return w(e.prev,e,e.next)<0?w(e,n,e.next)>=0&&w(e,e.prev,n)>=0:w(e,n,e.prev)<0||w(e,e.next,n)<0}function q(e,n){var t=e,r=!1,x=(e.x+n.x)/2,i=(e.y+n.y)/2;do{t.y>i!=t.next.y>i&&t.next.y!==t.y&&x<(t.next.x-t.x)*(i-t.y)/(t.next.y-t.y)+t.x&&(r=!r),t=t.next;}while(t!==e);return r}function A(e,n){var t=new D(e.i,e.x,e.y),r=new D(n.i,n.x,n.y),x=e.next,i=n.prev;return e.next=n,n.prev=e,t.next=x,x.prev=t,r.next=t,t.prev=r,i.next=r,r.prev=i,r}function B(e,n,t,r){var x=new D(e,n,t);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function C(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ);}function D(e,n,t){this.i=e,this.x=n,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1;}function E(e,n,t,r){for(var x=0,i=n,u=t-r;i<t;i+=r)x+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return x}return e.deviation=function(e,n,t,r){var x=n&&n.length,i=x?n[0]*t:e.length,u=Math.abs(E(e,0,i,t));if(x)for(var v=0,f=n.length;v<f;v++){var o=n[v]*t,y=v<f-1?n[v+1]*t:e.length;u-=Math.abs(E(e,o,y,t));}var p=0;for(v=0;v<r.length;v+=3){var a=r[v]*t,l=r[v+1]*t,h=r[v+2]*t;p+=Math.abs((e[a]-e[h])*(e[l+1]-e[a+1])-(e[a]-e[l])*(e[h+1]-e[a+1]));}return 0===u&&0===p?0:Math.abs((p-u)/u)},e.flatten=function(e){for(var n=e[0][0].length,t={vertices:[],holes:[],dimensions:n},r=0,x=0;x<e.length;x++){for(var i=0;i<e[x].length;i++)for(var u=0;u<n;u++)t.vertices.push(e[x][i][u]);x>0&&(r+=e[x-1].length,t.holes.push(r));}return t},e},void 0!==(t=n())&&(e.exports=t);const x=r.exports;\n\nexport { x };\n","import { s } from './cast-c3f45b36.js';\nimport { i as f } from './config-1ffdf45e.js';\nimport { G, L, P, U } from './enums-39ca0456.js';\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nfunction n(n,i){const{textureFloat:f$1,colorBufferFloat:s$1}=n.capabilities,u=f$1?.textureFloat,m=f$1?.textureFloatLinear,_=f$1?.textureHalfFloat,p=f$1?.textureHalfFloatLinear,d=f$1?.HALF_FLOAT,x=s$1?.textureFloat,b=s$1?.textureHalfFloat,c=s$1?.floatBlend,{floatBufferBlendWorking:h}=f(n.driverTest);if(!u&&!_)throw new s(\"heatmap:missing-texture-float\",\"HeatmapRenderer requires WebGL2 or the WebGL1 extension OES_texture_float or OES_texture_half_float.\");if(!x&&!b)throw new s(\"heatmap:missing-color-buffer-float\",\"HeatmapRenderer requires the WebGL extension EXT_color_buffer_float or EXT_color_buffer_half_float or WEBGL_color_buffer_float.\");if(!(c&&h||b))throw new s(\"heatmap:missing-float-blend\",\"HeatmapRenderer requires the WebGL extension EXT_float_blend or EXT_color_buffer_half_float.\"+(h?\"\":\" This device claims support for EXT_float_blend, but does not actually support it.\"));const E=u&&x&&c&&h,F=_&&b,R=m,L$1=p,T=!!s$1?.R32F,w=!!s$1?.R16F;if(E&&(R||!L$1))return R||i.warnOnce(\"Missing WebGL extension OES_texture_float_linear. Heatmap quality may be reduced.\"),{dataType:G.FLOAT,samplingMode:R?L.LINEAR:L.NEAREST,pixelFormat:T?P.RED:P.RGBA,internalFormat:T?U.R32F:P.RGBA};if(F)return L$1||i.warnOnce(\"Missing WebGL extension OES_texture_half_float_linear. Heatmap quality may be reduced.\"),{dataType:d,samplingMode:L$1?L.LINEAR:L.NEAREST,pixelFormat:w?P.RED:P.RGBA,internalFormat:w?U.R16F:P.RGBA};throw new s(\"heatmap:missing-hardware-support\",\"HeatmapRenderer requires WebGL extensions that allow it to render and blend to float or half float textures.\")}\n\nexport { n };\n"],"names":["n","Float32Array","t$1","t","r$1","r","e","a","o","u","s","c$1","i","f","l$1","_$1","y","w","N","m$1","m","c","l","pixelType","_","G","p","pixels","length","getAsRGBAFloat","getAsRGBA","g","capabilities","textureFloat","textureFloatLinear","T","width","height","target","M","pixelFormat","P","internalFormat","type","r$2","U","samplingMode","L","dataType","wrapMode","D","flipped","E$1","spacing","offsets","coefficients","size","E","u_flipY","u_applyTransform","u_opacity","u_transformSpacing","f$1","u_transformGridSize","u_targetImageSize","u_srcImageSize","u_colormapOffset","u_colormapMaxIndex","u_scale","u_offset","u_bandCount","bandCount","u_minOutput","outMin","u_maxOutput","outMax","u_minCutOff","minCutOff","u_maxCutOff","maxCutOff","u_factor","factor","u_useGamma","useGamma","u_gamma","gamma","u_gammaCorrection","gammaCorrection","u_hillshadeType","hillshadeType","u_sinZcosAs","sinZcosAs","u_sinZsinAs","sinZsinAs","u_cosZs","cosZs","u_weights","weights","u_minValue","minValue","u_maxValue","maxValue","A","gl","glName","getProgramParameter","ACTIVE_UNIFORMS","Map","getActiveUniform","set","name","location","getUniformLocation","info","h","Object","keys","forEach","get","o$1","setUniform1fv","setUniform1f","setUniform2fv","setUniform3fv","setUniform4fv","setUniformMatrix3fv","setUniformMatrix4fv","setUniform1iv","setUniform1i","setUniform2iv","setUniform3iv","setUniform4iv","d","O","some","bindTexture","freeze","defineProperty","__proto__","create","clone","fromValues","createView","zeros","ones","unitX","unitY","unitZ","unitW","ZEROS","ONES","UNIT_X","UNIT_Y","UNIT_Z","UNIT_W","Symbol","toStringTag","value","geometry","t$2","C","shaders","vertexShader","fragmentShader","attributes","arguments","_visualState","time","dvsMat3","e$2","displayViewMat3","context","setColorMask","setStencilFunction","I","requestRender","allowDelayedRender","displayData","t$3","state","attach","resources","ready","this","transforms","dvs","flowStyle","render","animated","x$3","colormap","colormapOffset","stretchType","p$2","_textureInvalidated","_colormapTextureInvalidated","_supportsBilinearTexture","stencilRef","coordScale","_symbolizerParameters","isRendereredSource","pixelRatio","resolution","rotation","_source","rawPixelData","_suspended","_bandIds","_interpolation","_transformGrid","x","source","transformGrid","interpolation","getTextures","textures","dispose","_rasterTexture","_transformGridTexture","_colormapTexture","_rasterTextureBandIds","invalidateTexture","stage","_isBandIdschanged","setSamplingMode","_getTextureSamplingMethod","r$3","toScreenNoRotation","Math","PI","t$4","h$1","b$1","i$1","push","names","_isValidSource","_updateColormapTexture","_createOrDestroyRasterTexture","c$3","setData","suspended","s$3","bandIds","m$7","join","symbolizerParameters","_colormap","l$3","n$3","_rctx","_vertexBuffer","F","Uint16Array","_vao","t$5","_count","bindVAO","drawArrays","m$6","_desc","lut","vsPath","fsPath","stretch","hillshade","_rendererUniformInfos","_quad","setBlendingEnabled","setBlendFunctionSeparate","R","setStencilWriteMask","setStencilTestEnabled","timeline","painter","begin","updateTexture","_getShaderVariations","materialManager","getProgram","_drawWithProgram","end","isCompiled","b","S","opacity","useProgram","_getUniformInfos","j","O$1","g$1","h$2","u_coordScale","u_dvsMat3","p$3","T$1","E$2","draw","has","A$1","l$2","c$2","beaufort_ft","beaufort_m","beaufort_km","beaufort_mi","beaufort_kn","classified_arrow","ocean_current_m","ocean_current_kn","single_arrow","wind_speed","d$3","magdir","scalar","setStencilOp","O$2","validPixelCount","updateVectorFieldVAO","renderPass","vaoData","_drawScalars","vao","elementCount","_drawTriangles","dataRange","rotationType","v","style","symbolPercentRange","_getSymbolSize","drawElements","key","displayLevel","level","symbolTileSize","round","offset","o$2","nearest","defines","mips","bilinear","bicubic","trilinear","m$5","renderingOptions","isReady","isSourceScaled","d$2","blendFunction","computedOpacity","setSamplingProfile","bind","A$2","e$1","background","bitBlit","blend","debug","overlay","dot","filtering","fx","integrate","heatmap","heatmapResolve","highlight","magnifier","materials","fill","hittest","icon","heatmapAccumulate","label","line","pie","shared","text","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","bitmap","common","flow","imagery","particles","streamlines","reproject","stencil","tileInfo","util","e$3","split","n$2","resolveIncludes","d$1","_color","r$4","_program","setFaceCullingEnabled","ge","count","getVAO","bufferLayouts","indexBuffer","e$4","displayMat3","u$2","isWrapAround","perspectiveTransform","texture","tex","p$1","_computeDesc","includes","getGeometryType","commit","getGeometry","attributeView","bindTextures","forEachCommand","materialKey","symbologyType","supportsSymbology","drawGeometry","passOptions","position","distance","tileMat3","viewMat3","at","B$1","C$1","E$3","F$1","vvSizeMinMaxValue","vvSizeScaleStops","vvSizeScaleStopsValue","vvSizeFieldStops","getSizeVVFieldStops","values","sizes","vvSizeUnitValue","vvSizeUnitValueToPixelsRatio","vvColor","vvColorValues","vvColors","vvOpacity","vvOpacityValues","vvOpacities","vvRotation","vvMaterialParameters","vvRotationType","map","findIndex","strides","max","divisor","normalized","stride","E$4","S$1","rendererInfo","requiredLevel","p$4","data","i$2","programSpec","splice","shader","vertexLayout","u$1","hittestAttributes","_getTriangleDesc","getMaterialProgram","_setSharedUniforms","setUniform2f","col","row","textureBinding","textureManager","_setSizeVVUniforms","_setColorAndOpacityVVUniforms","w$1","indexCount","indexFrom","Uint32Array","BYTES_PER_ELEMENT","_drawFills","_dotTextureSize","_dotTextures","_dotSamplers","Int32Array","K","L$1","_dotVAO","_dotDesc","_disposeTextures","_dotFBO","a$1","_drawDotLocations","_drawDotDensity","rendererSchema","s$4","_createDotDensityMesh","dotSize","window","devicePixelRatio","getViewport","dotScale","colors","activeDots","backgroundColor","dotValue","setViewport","getBoundFramebufferObject","_createFBO","bindFramebuffer","setClearColor","clear","COLOR_BUFFER_BIT","STENCIL_BUFFER_BIT","o$3","scale","_bindDotDensityTextures","colorTexture","M$1","G$1","D$1","colorTarget","Y","depthStencilTarget","V","s$5","B$2","x$4","_createDotDensityTextures","seed","Int16Array","_seed","t$6","_allocDotDensityTexture","getFloat","E$5","N$1","_setRotationVVUniforms","_drawMarkers","constructor","s$6","x$2","B","brushEffect","loadQualityProfile","referenceScale","radius","isFieldActive","_prevFBO","_accumulateOutputTexture","_accumulateFramebuffer","detachDepthStencilBuffer","_accumulateOutputStencilBuffer","_resolveGradientTexture","_tileQuad","_prevViewport","_loadResources","_updateResources","setBlendFunction","minDensity","densityRange","shadingRate","requiresSharedStencilBuffer","getSharedStencilBuffer","gradientHash","gradient","_prevGradientHash","resize","depthStencilAttachment","descriptor","errorOnce","blitFramebuffer","_qualityProfile","n$4","r$5","x$1","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_canvas","_loadWGLResources","rangeX","rangeY","_getTexture","Int8Array","r$6","triangleCountReportedInDebug","triangleCount","document","createElement","setAttribute","id","getContext","font","textAlign","textBaseline","clearRect","fillStyle","fillRect","fillText","s$2","defaultColor","othersColor","outlineColor","holePercentage","sectorThreshold","outlineWidth","_initialized","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","Z","mapAligned","abs","m$3","floor","m$2","C$2","s$1","P$1","n$1","marker","clip","rasterVF","vtlBackground","d$4","vtlFill","m$8","vtlLine","u$3","vtlCircle","c$4","vtlSymbol","M$2","dotDensity","pieChart","coords","lengths","slice","x$5","_cache","vertices","indices","primitiveType","isMapSpace","vertexBuffers","s$7","reduce","fromScreenExtent","xmin","ymin","xmax","ymax","K$1","t$7","path","fromPolygon","fromMapExtent","error","fromRect","J","n$5","r$7","toScreen","parseFloat","_clip","_handle","l$4","version","_invalidate","mesh","destroy","_destroyGL","remove","_lastWidth","_lastHeight","_createMesh","getIndexBuffer","getVertexBuffers","left","right","top","bottom","_createScreenRect","fromPath","fromGeometry","_clips","children","clips","_updateClippingInfo","updateTransforms","createRenderParams","globalOpacity","profiler","drawPhase","I$1","recordContainerStart","beforeRenderLayer","_clippingInfos","renderChildren","compositeLayer","recordContainerEnd","_renderPasses","prepareRenderPasses","requireFBO","requiresDedicatedFBO","registerRenderPass","brushes","setTransform","items","fromClipArea","i$3","exports","next","prev","steiner","prevZ","nextZ","z","sort","k","q","min","deviation","flatten","holes","dimensions","colorBufferFloat","textureHalfFloat","textureHalfFloatLinear","HALF_FLOAT","floatBlend","driverTest","floatBufferBlendWorking","R32F","R16F","warnOnce"],"sourceRoot":""}